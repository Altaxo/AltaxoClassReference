<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>MatrixMath Methods</title><meta name="Title" content="MatrixMath Methods" /><meta name="Microsoft.Help.Id" content="Methods.T:Altaxo.Calc.LinearAlgebra.MatrixMath" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="MatrixMath class, methods" /><meta name="container" content="Altaxo.Calc.LinearAlgebra" /><meta name="file" content="Methods_T_Altaxo_Calc_LinearAlgebra_MatrixMath" /><meta name="guid" content="Methods_T_Altaxo_Calc_LinearAlgebra_MatrixMath" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Altaxo user manual and class reference<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1B7FE024E7E614BFA13DAA1FD005CB2E.htm" title="Altaxo user manual and class reference" tocid="roottoc">Altaxo user manual and class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Altaxo class reference" tocid="R_Project_Documentation">Altaxo class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo.htm" title="Altaxo Namespaces" tocid="G_Altaxo">Altaxo Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo_Calc.htm" title="Altaxo.Calc Namespaces" tocid="G_Altaxo_Calc">Altaxo.Calc Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Altaxo_Calc_LinearAlgebra.htm" title="Altaxo.Calc.LinearAlgebra" tocid="N_Altaxo_Calc_LinearAlgebra">Altaxo.Calc.LinearAlgebra</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_LinearAlgebra_MatrixMath.htm" title="MatrixMath Class" tocid="T_Altaxo_Calc_LinearAlgebra_MatrixMath">MatrixMath Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Altaxo_Calc_LinearAlgebra_MatrixMath.htm" title="MatrixMath Methods" tocid="Methods_T_Altaxo_Calc_LinearAlgebra_MatrixMath">MatrixMath Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Add.htm" title="Add Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Add">Add Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_AddRow.htm" title="AddRow Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_AddRow">AddRow Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Any.htm" title="Any Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Any">Any Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Clear__1.htm" title="Clear&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Clear__1">Clear&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Clear_DefaultImpl__1.htm" title="Clear_DefaultImpl&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Clear_DefaultImpl__1">Clear_DefaultImpl&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnsToZeroMean.htm" title="ColumnsToZeroMean Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnsToZeroMean">ColumnsToZeroMean Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnsToZeroMeanAndUnitVariance.htm" title="ColumnsToZeroMeanAndUnitVariance Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnsToZeroMeanAndUnitVariance">ColumnsToZeroMeanAndUnitVariance Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnToROVector__1.htm" title="ColumnToROVector&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnToROVector__1">ColumnToROVector&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnToVector__1.htm" title="ColumnToVector&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnToVector__1">ColumnToVector&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_Copy.htm" title="Copy Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_Copy">Copy Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_CopyColumn.htm" title="CopyColumn Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_CopyColumn">CopyColumn Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_CopyRow.htm" title="CopyRow Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_CopyRow">CopyRow Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_DenseOfMatrix__1.htm" title="DenseOfMatrix&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_DenseOfMatrix__1">DenseOfMatrix&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_DivideRow.htm" title="DivideRow Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_DivideRow">DivideRow Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_EnumerateElementsIndexed__1.htm" title="EnumerateElementsIndexed&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_EnumerateElementsIndexed__1">EnumerateElementsIndexed&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_GetMatrixArray.htm" title="GetMatrixArray Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_GetMatrixArray">GetMatrixArray Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_GetSingularValueDecomposition.htm" title="GetSingularValueDecomposition Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_GetSingularValueDecomposition">GetSingularValueDecomposition Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Hypotenuse.htm" title="Hypotenuse Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Hypotenuse">Hypotenuse Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_InvertDiagonalMatrix.htm" title="InvertDiagonalMatrix Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_InvertDiagonalMatrix">InvertDiagonalMatrix Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_IsEqual.htm" title="IsEqual Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_IsEqual">IsEqual Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_IsZeroMatrix.htm" title="IsZeroMatrix Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_IsZeroMatrix">IsZeroMatrix Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_LengthOf.htm" title="LengthOf Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_LengthOf">LengthOf Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_Map.htm" title="Map Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_Map">Map Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_MapIndexed.htm" title="MapIndexed Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_MapIndexed">MapIndexed Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_MatrixToString.htm" title="MatrixToString Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_MatrixToString">MatrixToString Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Max.htm" title="Max Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Max">Max Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Min.htm" title="Min Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Min">Min Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_Multiply.htm" title="Multiply Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_Multiply">Multiply Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyFirstTransposed.htm" title="MultiplyFirstTransposed Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyFirstTransposed">MultiplyFirstTransposed Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyRow.htm" title="MultiplyRow Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyRow">MultiplyRow Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyScalar.htm" title="MultiplyScalar Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyScalar">MultiplyScalar Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplySecondTransposed.htm" title="MultiplySecondTransposed Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplySecondTransposed">MultiplySecondTransposed Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyVectorFromLeftAndRight.htm" title="MultiplyVectorFromLeftAndRight Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyVectorFromLeftAndRight">MultiplyVectorFromLeftAndRight Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_NIPALS_HO.htm" title="NIPALS_HO Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_NIPALS_HO">NIPALS_HO Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Norm.htm" title="Norm Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Norm">Norm Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_NormalizeCols.htm" title="NormalizeCols Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_NormalizeCols">NormalizeCols Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_NormalizeOneColumn.htm" title="NormalizeOneColumn Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_NormalizeOneColumn">NormalizeOneColumn Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_NormalizeRows.htm" title="NormalizeRows Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_NormalizeRows">NormalizeRows Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_PseudoInverse.htm" title="PseudoInverse Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_PseudoInverse">PseudoInverse Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ReplaceNaNAndInfiniteElementsWith.htm" title="ReplaceNaNAndInfiniteElementsWith Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ReplaceNaNAndInfiniteElementsWith">ReplaceNaNAndInfiniteElementsWith Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ReplaceNaNElementsWith.htm" title="ReplaceNaNElementsWith Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ReplaceNaNElementsWith">ReplaceNaNElementsWith Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_RowToROVector.htm" title="RowToROVector Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_RowToROVector">RowToROVector Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_RowToVector.htm" title="RowToVector Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_RowToVector">RowToVector Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SetColumn.htm" title="SetColumn Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SetColumn">SetColumn Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SetMatrixElements.htm" title="SetMatrixElements Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SetMatrixElements">SetMatrixElements Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SetRow.htm" title="SetRow Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SetRow">SetRow Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Square.htm" title="Square Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Square">Square Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_Submatrix.htm" title="SubMatrix Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_Submatrix">SubMatrix Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubMatrix__1.htm" title="Overload:Altaxo.Calc.LinearAlgebra.MatrixMath.SubMatrix" tocid="413a2c70-f677-40c4-a71c-0ebb1a0c5af2">Overload:Altaxo.Calc.LinearAlgebra.MatrixMath.SubMatrix</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Subtract.htm" title="Subtract Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Subtract">Subtract Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractColumn.htm" title="SubtractColumn Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractColumn">SubtractColumn Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractProductFromSelf.htm" title="SubtractProductFromSelf Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractProductFromSelf">SubtractProductFromSelf Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractRow.htm" title="SubtractRow Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractRow">SubtractRow Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_SumOfSquaredDifferences.htm" title="SumOfSquaredDifferences Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SumOfSquaredDifferences">SumOfSquaredDifferences Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_SumOfSquares.htm" title="SumOfSquares Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SumOfSquares">SumOfSquares Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrix.htm" title="ToMatrix Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrix">ToMatrix Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrixFromColumnMajorLinearArray__1.htm" title="ToMatrixFromColumnMajorLinearArray&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrixFromColumnMajorLinearArray__1">ToMatrixFromColumnMajorLinearArray&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrixFromLeftSpineJaggedArray__1.htm" title="ToMatrixFromLeftSpineJaggedArray&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrixFromLeftSpineJaggedArray__1">ToMatrixFromLeftSpineJaggedArray&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrixFromTopSpineJaggedArray__1.htm" title="ToMatrixFromTopSpineJaggedArray&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrixFromTopSpineJaggedArray__1">ToMatrixFromTopSpineJaggedArray&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToRODiagonalMatrix__1.htm" title="ToRODiagonalMatrix&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToRODiagonalMatrix__1">ToRODiagonalMatrix&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrix.htm" title="ToROMatrix Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrix">ToROMatrix Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixFromColumnMajorLinearArray__1.htm" title="ToROMatrixFromColumnMajorLinearArray&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixFromColumnMajorLinearArray__1">ToROMatrixFromColumnMajorLinearArray&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixFromLeftSpineJaggedArray__1.htm" title="ToROMatrixFromLeftSpineJaggedArray&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixFromLeftSpineJaggedArray__1">ToROMatrixFromLeftSpineJaggedArray&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixFromTopSpineJaggedArray__1.htm" title="ToROMatrixFromTopSpineJaggedArray&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixFromTopSpineJaggedArray__1">ToROMatrixFromTopSpineJaggedArray&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixWithOneColumn__1.htm" title="ToROMatrixWithOneColumn&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixWithOneColumn__1">ToROMatrixWithOneColumn&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixWithOneRow__1.htm" title="ToROMatrixWithOneRow&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixWithOneRow__1">ToROMatrixWithOneRow&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROSubMatrix__1.htm" title="ToROSubMatrix&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROSubMatrix__1">ToROSubMatrix&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToSubMatrix__1.htm" title="ToSubMatrix&lt;T&gt; Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToSubMatrix__1">ToSubMatrix&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_ToZeroMean.htm" title="ToZeroMean Method" tocid="Overload_Altaxo_Calc_LinearAlgebra_MatrixMath_ToZeroMean">ToZeroMean Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_Trace.htm" title="Trace Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Trace">Trace Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_LinearAlgebra_MatrixMath_ZeroMatrix.htm" title="ZeroMatrix Method" tocid="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ZeroMatrix">ZeroMatrix Method</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Matrix<wbr />Math Methods</h1></td></tr></table><p>The <a href="T_Altaxo_Calc_LinearAlgebra_MatrixMath.htm">MatrixMath</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDADA')" onkeypress="SectionExpandCollapse_CheckKey('IDADA', event)" tabindex="0"><img id="IDADAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDADASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Add.htm">Add</a></td><td>
            Calculates a+b and stores the result in matrix c.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_AddRow_1.htm">AddRow(IROMatrix<span id="LST32893F0D_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReadOnlyList<span id="LST32893F0D_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Add the vector <span class="code">b</span>  to all rows of matrix a.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_AddRow.htm">AddRow(IROMatrix<span id="LST32893F0D_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IROMatrix<span id="LST32893F0D_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IMatrix<span id="LST32893F0D_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Add the row <span class="code">rowb</span> of matrix b to all rows of matrix a.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Any.htm">Any</a></td><td>
            Determines whether any element of the provided matrix <span class="parameter">a</span> fulfills the given predicate.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Clear__1.htm">Clear<span id="LST32893F0D_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Clear_DefaultImpl__1.htm">Clear_DefaultImpl<span id="LST32893F0D_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnsToZeroMean.htm">ColumnsToZeroMean</a></td><td>
            This will center the matrix so that the mean of each column is null.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnsToZeroMeanAndUnitVariance.htm">ColumnsToZeroMeanAndUnitVariance</a></td><td>
            This will center the matrix so that the mean of each column is null, and the variance of each column is one.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnToROVector__1.htm">ColumnToROVector<span id="LST32893F0D_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a read-only vector representing a matrix column by providing the matrix and the row number of that matrix that is wrapped.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ColumnToVector__1.htm">ColumnToVector<span id="LST32893F0D_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a vector representing a matrix column by providing the matrix and the row number of that matrix that is wrapped.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Copy.htm">Copy(IROMatrix<span id="LST32893F0D_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Copies matrix src to matrix dest. Both matrizes must have the same dimensions.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Copy_1.htm">Copy(IROMatrix<span id="LST32893F0D_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Int32)</a></td><td>
            Copies the matrix src into the matrix dest. Matrix dest must have equal or greater dimension than src.
            You can provide a destination row/column into the destination matrix where the origin of the copy operation is located.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_CopyColumn.htm">CopyColumn(IROMatrix<span id="LST32893F0D_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IVector<span id="LST32893F0D_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets the column of a matrix copied into a vector.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_CopyColumn_1.htm">CopyColumn(IROMatrix<span id="LST32893F0D_32" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, <span id="LST32893F0D_34" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST32893F0D_35" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Gets the column of a matrix copied into a vector.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_CopyColumn__1.htm">CopyColumn<span id="LST32893F0D_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_38" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IMatrix<span id="LST32893F0D_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Int32)</a></td><td>
            Copies one column of a source matrix into a destination matrix to a given row and column offset.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_CopyRow.htm">CopyRow(IROMatrix<span id="LST32893F0D_42" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IVector<span id="LST32893F0D_44" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_45" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets the row of a matrix copied into a vector.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_CopyRow_1.htm">CopyRow(IROMatrix<span id="LST32893F0D_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, <span id="LST32893F0D_48" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST32893F0D_49" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Gets the row of a matrix copied into a vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_DenseOfMatrix__1.htm">DenseOfMatrix<span id="LST32893F0D_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_DivideRow.htm">DivideRow</a></td><td>
            Divides all rows of matrix a by the row <span class="code">rowb</span> of matrix b (element by element).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_EnumerateElementsIndexed__1.htm">EnumerateElementsIndexed<span id="LST32893F0D_52" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_53" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_GetMatrixArray.htm">GetMatrixArray</a></td><td>
            Allocates an array of n x m values.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_GetSingularValueDecomposition.htm">GetSingularValueDecomposition(IMatrix<span id="LST32893F0D_54" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Returns the singular value decomposition for this matrix.</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_GetSingularValueDecomposition_1.htm">GetSingularValueDecomposition(IROMatrix<span id="LST32893F0D_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Returns the singular value decomposition for this matrix.</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Hypotenuse.htm">Hypotenuse</a></td><td>
            Calculates the hypotenuse length of a and b, i.e. the sqrt(a^2+b^2), avoiding overflow at large values.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_InvertDiagonalMatrix.htm">InvertDiagonalMatrix</a></td><td>
            This inverts the provided diagonal matrix. There is no check that the matrix is really
            diagonal, but the algorithm sets the elements outside the diagonal to zero, assuming
            that this are small arithmetic errors.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_IsEqual.htm">IsEqual</a></td><td>
            Compares matrix a and matrix b. Takes the norm of matrix b times accuracy as
            threshold basis for comparing the elements.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_IsZeroMatrix.htm">IsZeroMatrix</a></td><td>
            Tests if all elements of the matrix a are equal to zero.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_LengthOf.htm">LengthOf</a></td><td>
            Returns the square root of the sum of the squares of the matrix a.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Map_1.htm">Map(IROMatrix<span id="LST32893F0D_60" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_61" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST32893F0D_62" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double, Double<span id="LST32893F0D_63" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_64" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_65" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise application of a function to each element of a matrix. The result is stored in another matrix or in the same matrix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Map.htm">Map(IROMatrix<span id="LST32893F0D_66" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_67" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IROMatrix<span id="LST32893F0D_68" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_69" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST32893F0D_70" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double, Double, Double<span id="LST32893F0D_71" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_72" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_73" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise application of a function to each element of two matrices. The result is stored in another matrix or in the same matrix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MapIndexed_1.htm">MapIndexed(IROMatrix<span id="LST32893F0D_74" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_75" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST32893F0D_76" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, Double, Double<span id="LST32893F0D_77" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_78" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_79" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise application of a function to each element of a matrix. The result is stored in another matrix or in the same matrix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MapIndexed.htm">MapIndexed(IROMatrix<span id="LST32893F0D_80" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_81" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IROMatrix<span id="LST32893F0D_82" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_83" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST32893F0D_84" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, Double, Double, Double<span id="LST32893F0D_85" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_86" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_87" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise application of a function to each element of two matrices. The result is stored in another matrix or in the same matrix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MapIndexed__1.htm">MapIndexed<span id="LST32893F0D_88" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LST32893F0D_89" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_90" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_91" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, T1, Func<span id="LST32893F0D_92" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, Double, T1, Double<span id="LST32893F0D_93" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_94" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_95" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Elementwise application of a function to each element of a matrix. The result is stored in another matrix or in the same matrix.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MapIndexed__2.htm">MapIndexed<span id="LST32893F0D_96" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T1<span id="LST32893F0D_97" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_98" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_99" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, T1, Func<span id="LST32893F0D_100" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, T, T1, T<span id="LST32893F0D_101" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_102" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_103" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Zeros)</a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MatrixToString.htm">MatrixToString(String, IROComplexDoubleMatrix)</a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MatrixToString_1.htm">MatrixToString(String, IROComplexFloatMatrix)</a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MatrixToString_2.htm">MatrixToString(String, IROMatrix<span id="LST32893F0D_104" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Single<span id="LST32893F0D_105" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MatrixToString__1.htm">MatrixToString<span id="LST32893F0D_106" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_107" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String, IROMatrix<span id="LST32893F0D_108" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_109" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Max.htm">Max</a></td><td>
            Get the maximum value of all elements of the specified matrix <span class="parameter">a</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Min.htm">Min</a></td><td>
            Get the minimum value of all elements of the specified matrix <span class="parameter">a</span>.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Multiply.htm">Multiply(IROMatrix<span id="LST32893F0D_110" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_111" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IROMatrix<span id="LST32893F0D_112" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_113" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_114" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_115" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Multiplies matrix a with matrix b and stores the result in matrix c.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Multiply_1.htm">Multiply(IROMatrix<span id="LST32893F0D_116" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_117" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReadOnlyList<span id="LST32893F0D_118" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_119" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IVector<span id="LST32893F0D_120" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_121" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Multiplies matrix a with vector b and stores the result in vector c.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyFirstTransposed.htm">MultiplyFirstTransposed(IROMatrix<span id="LST32893F0D_122" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_123" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IROMatrix<span id="LST32893F0D_124" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_125" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_126" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_127" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Multiplies matrix a_transposed with matrix b and stores the result in matrix c.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyFirstTransposed_1.htm">MultiplyFirstTransposed(IROMatrix<span id="LST32893F0D_128" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_129" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReadOnlyList<span id="LST32893F0D_130" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_131" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IVector<span id="LST32893F0D_132" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_133" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Multiplies matrix a_transposed with vector b and stores the result in vector c.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyRow_1.htm">MultiplyRow(IROMatrix<span id="LST32893F0D_134" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_135" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReadOnlyList<span id="LST32893F0D_136" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_137" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_138" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_139" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Multiplies the row <span class="code">rowb</span> of matrix b element by element to all rows of matrix a.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyRow.htm">MultiplyRow(IROMatrix<span id="LST32893F0D_140" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_141" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IROMatrix<span id="LST32893F0D_142" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_143" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IMatrix<span id="LST32893F0D_144" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_145" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Multiplies the row <span class="code">rowb</span> of matrix b element by element to all rows of matrix a.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyScalar.htm">MultiplyScalar</a></td><td>
            Multiplies the matrix a with a scalar value b and stores the result in c. Matrix a and c are allowed to be the same matrix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplySecondTransposed.htm">MultiplySecondTransposed</a></td><td>
            Multiplies matrix a with matrix b_transposed and stores the result in matrix c.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_MultiplyVectorFromLeftAndRight.htm">MultiplyVectorFromLeftAndRight</a></td><td>
            Multiplies matrix a with vector b from left and right: b* A b.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_NIPALS_HO.htm">NIPALS_HO</a></td><td>
            Calculates eigenvectors (loads) and the corresponding eigenvalues (scores)
            by means of the NIPALS algorithm
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Norm.htm">Norm</a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_NormalizeCols.htm">NormalizeCols</a></td><td>
            Normalizes each column (each vertical vector) of the matrix. After
            normalization, each column has the norm 1, i.e. the sum of squares of the elements of each column is 1 (one).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_NormalizeOneColumn.htm">NormalizeOneColumn</a></td><td>
            Normalizes the column col of a matrix to unit length.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_NormalizeRows.htm">NormalizeRows</a></td><td>
            Normalizes each row (each horizontal vector) of the matrix. After
            normalization, each row has the norm 1, i.e. the sum of squares of the elements of each row is 1 (one).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_PseudoInverse.htm">PseudoInverse(IROMatrix<span id="LST32893F0D_146" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_147" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Calculates the pseudo inverse of the matrix <span class="code">input</span> by means of singular value decomposition.
            A relative value of <span class="code">100*DBL_EPSILON</span> is used to chop the singular values before calculation.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_PseudoInverse_1.htm">PseudoInverse(IROMatrix<span id="LST32893F0D_148" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_149" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32<span id="LST32893F0D_150" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Calculates the pseudo inverse of the matrix <span class="code">input</span> by means of singular value decomposition.
            A relative value of <span class="code">100*DBL_EPSILON</span> is used to chop the singular values before calculation.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ReplaceNaNAndInfiniteElementsWith.htm">ReplaceNaNAndInfiniteElementsWith</a></td><td>
            Replaces all matrix elements that are NaN (Not a Number) or infinite with the value of <span class="parameter">replacementValue</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ReplaceNaNElementsWith.htm">ReplaceNaNElementsWith</a></td><td>
            Replaces all matrix elements that are NaN (not a number) with the value of <span class="parameter">replacementValue</span>.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_RowToROVector__1.htm">RowToROVector<span id="LST32893F0D_151" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_152" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_153" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_154" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Returns a vector representing a matrix row by providing the matrix and the row number of that matrix that is wrapped.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_RowToROVector__1_1.htm">RowToROVector<span id="LST32893F0D_155" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_156" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_157" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_158" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Int32, Int32)</a></td><td>
            Returns a vector representing a matrix row by providing the matrix and the row number of that matrix that is wrapped.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_RowToVector__1.htm">RowToVector<span id="LST32893F0D_159" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_160" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IMatrix<span id="LST32893F0D_161" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_162" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Returns a vector representing a matrix row by providing the matrix and the row number of that matrix that is wrapped.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_RowToVector__1_1.htm">RowToVector<span id="LST32893F0D_163" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_164" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IMatrix<span id="LST32893F0D_165" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_166" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Int32, Int32)</a></td><td>
            Returns a vector representing a matrix row by providing the matrix and the row number of that matrix that is wrapped.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetColumn.htm">SetColumn(IMatrix<span id="LST32893F0D_167" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_168" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IReadOnlyList<span id="LST32893F0D_169" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_170" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets the column of a matrix copied into a vector.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetColumn_1.htm">SetColumn(IMatrix<span id="LST32893F0D_171" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_172" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, <span id="LST32893F0D_173" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST32893F0D_174" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Gets the column of a matrix copied into a vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetColumn_4.htm">SetColumn(IReadOnlyList<span id="LST32893F0D_175" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_176" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_177" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_178" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Sets one row in the destination matrix equal to the vector provided by src.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetColumn_2.htm">SetColumn(IROMatrix<span id="LST32893F0D_179" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_180" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_181" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_182" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Sets one column in the destination matrix equal to the vertical vector provided by src matix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetColumn_3.htm">SetColumn(IROMatrix<span id="LST32893F0D_183" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_184" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IMatrix<span id="LST32893F0D_185" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_186" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Sets one column in the destination matrix equal to the vertical vector provided by src matix.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetMatrixElements.htm">SetMatrixElements(IMatrix<span id="LST32893F0D_187" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_188" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Double)</a></td><td>
            Set all matrix elements to the provided value <span class="parameter">scalar</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetMatrixElements_1.htm">SetMatrixElements(IMatrix<span id="LST32893F0D_189" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_190" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST32893F0D_191" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, Double<span id="LST32893F0D_192" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Sets the matrix elements to the value provided by a setter function <span class="parameter">Setter</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetRow.htm">SetRow(IMatrix<span id="LST32893F0D_193" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_194" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IReadOnlyList<span id="LST32893F0D_195" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_196" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets the row of a matrix copied into a vector.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetRow_1.htm">SetRow(IMatrix<span id="LST32893F0D_197" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_198" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, <span id="LST32893F0D_199" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST32893F0D_200" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Gets the row of a matrix copied into a vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetRow_3.htm">SetRow(IReadOnlyList<span id="LST32893F0D_201" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_202" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_203" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_204" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Sets one row in the destination matrix equal to the vector provided by src.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SetRow_2.htm">SetRow(IROMatrix<span id="LST32893F0D_205" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_206" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IMatrix<span id="LST32893F0D_207" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_208" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Sets one row in the destination matrix equal to the horizontal vector provided by src matix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Square.htm">Square</a></td><td>
            Calculates the Square of the value x.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Submatrix.htm">Submatrix(IROMatrix<span id="LST32893F0D_209" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_210" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_211" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_212" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets a submatrix out of the source matrix a. The dimensions of the submatrix are given by the provided matrix dest.
            The origin of the submatrix in the source matrix is (0,0), i.e. the left upper corner.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Submatrix_1.htm">Submatrix(IROMatrix<span id="LST32893F0D_213" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_214" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_215" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_216" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Int32)</a></td><td>
            Gets a submatrix out of the source matrix a. The dimensions of the submatrix are given by the provided matrix dest.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubMatrix__1.htm">SubMatrix<span id="LST32893F0D_217" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_218" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_219" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_220" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LST32893F0D_221" data-languageSpecificText="cpp=array&lt;"></span>Boolean<span id="LST32893F0D_222" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST32893F0D_223" data-languageSpecificText="cpp=array&lt;"></span>Boolean<span id="LST32893F0D_224" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Func<span id="LST32893F0D_225" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, T<span id="LST32893F0D_226" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets a new submatrix, i.e. a matrix containing selected elements of the original matrix <span class="parameter">a</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubMatrix__1_1.htm">SubMatrix<span id="LST32893F0D_227" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_228" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_229" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_230" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LST32893F0D_231" data-languageSpecificText="cpp=array&lt;"></span>Boolean<span id="LST32893F0D_232" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Func<span id="LST32893F0D_233" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, T<span id="LST32893F0D_234" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets a new submatrix, i.e. a matrix containing selected elements of the original matrix <span class="parameter">a</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubMatrix__1_2.htm">SubMatrix<span id="LST32893F0D_235" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_236" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_237" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_238" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LST32893F0D_239" data-languageSpecificText="cpp=array&lt;"></span>Boolean<span id="LST32893F0D_240" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST32893F0D_241" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST32893F0D_242" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Func<span id="LST32893F0D_243" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, T<span id="LST32893F0D_244" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets a new submatrix, i.e. a matrix containing selected elements of the original matrix <span class="parameter">a</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubMatrix__1_3.htm">SubMatrix<span id="LST32893F0D_245" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_246" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_247" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_248" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, <span id="LST32893F0D_249" data-languageSpecificText="cpp=array&lt;"></span>Boolean<span id="LST32893F0D_250" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Func<span id="LST32893F0D_251" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, T<span id="LST32893F0D_252" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets a new submatrix, i.e. a matrix containing selected elements of the original matrix <span class="parameter">a</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubMatrix__1_4.htm">SubMatrix<span id="LST32893F0D_253" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_254" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_255" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_256" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LST32893F0D_257" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST32893F0D_258" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST32893F0D_259" data-languageSpecificText="cpp=array&lt;"></span>Boolean<span id="LST32893F0D_260" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Func<span id="LST32893F0D_261" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, T<span id="LST32893F0D_262" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets a new submatrix, i.e. a matrix containing selected elements of the original matrix <span class="parameter">a</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubMatrix__1_5.htm">SubMatrix<span id="LST32893F0D_263" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_264" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IROMatrix<span id="LST32893F0D_265" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_266" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LST32893F0D_267" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST32893F0D_268" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST32893F0D_269" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LST32893F0D_270" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Func<span id="LST32893F0D_271" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, T<span id="LST32893F0D_272" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets a new submatrix, i.e. a matrix containing selected elements of the original matrix <span class="parameter">a</span>.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Subtract.htm">Subtract</a></td><td>
            Calculates a-b and stores the result in matrix c.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractColumn.htm">SubtractColumn</a></td><td>
            Subtracts the column <span class="code">bcol</span> of matrix b from all columns of matrix a.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractProductFromSelf.htm">SubtractProductFromSelf(IROMatrix<span id="LST32893F0D_273" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_274" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IROMatrix<span id="LST32893F0D_275" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_276" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_277" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_278" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Calculates c = c - ab
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractProductFromSelf_1.htm">SubtractProductFromSelf(IROMatrix<span id="LST32893F0D_279" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_280" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Double, IMatrix<span id="LST32893F0D_281" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_282" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Calculates c = c - ab
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractRow_1.htm">SubtractRow(IROMatrix<span id="LST32893F0D_283" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_284" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReadOnlyList<span id="LST32893F0D_285" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_286" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IMatrix<span id="LST32893F0D_287" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_288" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Subtracts the row <span class="code">rowb</span> of matrix b from all rows of matrix a.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SubtractRow.htm">SubtractRow(IROMatrix<span id="LST32893F0D_289" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_290" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IROMatrix<span id="LST32893F0D_291" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_292" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IMatrix<span id="LST32893F0D_293" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_294" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Subtracts the row <span class="code">rowb</span> of matrix b from all rows of matrix a.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SumOfSquaredDifferences.htm">SumOfSquaredDifferences</a></td><td>
            Returns the sum of the squares of differences of elements of a and b.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_SumOfSquares.htm">SumOfSquares</a></td><td>
            Returns the sum of the squares of all elements.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrix__1.htm">ToMatrix<span id="LST32893F0D_295" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_296" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(MatrixWrapperStructForColumnMajorOrderLinearArray<span id="LST32893F0D_297" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_298" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Wraps a linear array (column major order) into a read-write matrix.
            The array is packed in column major order, i.e. the first elements belong to the first column of the matrix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrix__1_1.htm">ToMatrix<span id="LST32893F0D_299" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_300" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(MatrixWrapperStructForLeftSpineJaggedArray<span id="LST32893F0D_301" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_302" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrix__1_2.htm">ToMatrix<span id="LST32893F0D_303" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_304" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(MatrixWrapperStructForTopSpineJaggedArray<span id="LST32893F0D_305" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_306" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Constructs an RE matrix from an array of double vectors. Attention! The double vectors (the second) dimensions are here
            the columns (!) of the matrix. The data is not copied.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrix__1_3.htm">ToMatrix<span id="LST32893F0D_307" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_308" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST32893F0D_309" data-languageSpecificText="cpp=array&lt;"></span>T<span id="LST32893F0D_310" data-languageSpecificText="cpp=,2&gt;|cs=[,]|vb=(,)|nu=[,]|fs=[,]"></span>)</a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrixFromColumnMajorLinearArray__1.htm">ToMatrixFromColumnMajorLinearArray<span id="LST32893F0D_311" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_312" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Wraps a linear array into a read-write matrix. The array is packed column-wise, i.e. the first elements belong to the first column of the matrix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrixFromLeftSpineJaggedArray__1.htm">ToMatrixFromLeftSpineJaggedArray<span id="LST32893F0D_313" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_314" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            This wraps a jagged double array to the <a href="T_Altaxo_Calc_LinearAlgebra_IMatrix_1.htm">IMatrix<span id="LST32893F0D_315" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST32893F0D_316" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> interface. The data is not copied!
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToMatrixFromTopSpineJaggedArray__1.htm">ToMatrixFromTopSpineJaggedArray<span id="LST32893F0D_317" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_318" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Constructs an RE matrix from an array of double vectors. Attention! The double vectors (the second) dimensions are here
            the columns (!) of the matrix. The data is not copied.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToRODiagonalMatrix__1.htm">ToRODiagonalMatrix<span id="LST32893F0D_319" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_320" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Wraps a read-only vector to a read-only diagonal matrix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrix__1.htm">ToROMatrix<span id="LST32893F0D_321" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_322" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(MatrixWrapperStructForColumnMajorOrderLinearArray<span id="LST32893F0D_323" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_324" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Wraps a linear array (column major order) into a read-only matrix.
            The array is packed in column major order, i.e. the first elements belong to the first column of the matrix.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrix__1_1.htm">ToROMatrix<span id="LST32893F0D_325" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_326" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LST32893F0D_327" data-languageSpecificText="cpp=array&lt;"></span>T<span id="LST32893F0D_328" data-languageSpecificText="cpp=,2&gt;|cs=[,]|vb=(,)|nu=[,]|fs=[,]"></span>)</a></td><td> </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixFromColumnMajorLinearArray__1.htm">ToROMatrixFromColumnMajorLinearArray<span id="LST32893F0D_329" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_330" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Wraps a linear array (column major order) into a read-only matrix.
            The array is packed in column major order, i.e. the first elements belong to the first column of the matrix.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixFromLeftSpineJaggedArray__1.htm">ToROMatrixFromLeftSpineJaggedArray<span id="LST32893F0D_331" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_332" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            This wraps a jagged double array to the <a href="T_Altaxo_Calc_LinearAlgebra_IROMatrix_1.htm">IROMatrix<span id="LST32893F0D_333" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST32893F0D_334" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> interface. The data is not copied!
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixFromTopSpineJaggedArray__1.htm">ToROMatrixFromTopSpineJaggedArray<span id="LST32893F0D_335" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_336" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Constructs an RE matrix from an array of double vectors. Attention! The double vectors (the second) dimensions are here
            the columns (!) of the matrix. The data is not copied.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixWithOneColumn__1.htm">ToROMatrixWithOneColumn<span id="LST32893F0D_337" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_338" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Wraps a read-only vector, so that it becomes a matrix with one column, and as many rows as the vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROMatrixWithOneRow__1.htm">ToROMatrixWithOneRow<span id="LST32893F0D_339" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_340" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Wraps a read-only vector, so that it becomes a matrix with one row, and as many columns as elements in the vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToROSubMatrix__1.htm">ToROSubMatrix<span id="LST32893F0D_341" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_342" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Wraps a submatrix part, so that this part can be used as a matrix in operations (read-only).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToSubMatrix__1.htm">ToSubMatrix<span id="LST32893F0D_343" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST32893F0D_344" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Wraps a submatrix part, so that this part can be used as a matrix in operations.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToZeroMean.htm">ToZeroMean(IMatrix<span id="LST32893F0D_345" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_346" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Calculates the mean value of all matrix elements and then subtracts the mean value from each matrix element, so that the mean value of the resulting matrix is zero.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ToZeroMean_1.htm">ToZeroMean(IMatrix<span id="LST32893F0D_347" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST32893F0D_348" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Double<span id="LST32893F0D_349" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Calculates the mean value of all matrix elements and then subtracts the mean value from each matrix element, so that the mean value of the resulting matrix is zero.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_Trace.htm">Trace</a></td><td>
            Get the trace of square matrix <span class="parameter">a</span>, i.e. the sum of diagonal elements.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_MatrixMath_ZeroMatrix.htm">ZeroMatrix</a></td><td>
            Set all elements in the matrix to 0 (zero)
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_Altaxo_Calc_LinearAlgebra_MatrixMath.htm">MatrixMath Class</a></div><div><a href="N_Altaxo_Calc_LinearAlgebra.htm">Altaxo.Calc.LinearAlgebra Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter">Altaxo can be downloaded from <a href="https://sourceforge.net/projects/altaxo/files/Altaxo/">SourceForge</a>. Source code available on <a href="https://github.com/Altaxo/Altaxo">Github</a>.
<br /><a href="https://sourceforge.net/u/dlellinger/profile/">(C) Dr. Dirk Lellinger and all contributors to the source code 2002 - <script>document.write(new Date().getFullYear()); </script></a><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dlellinger%40users.sourceforge.net?Subject=Altaxo%20user%20manual%20and%20class%20reference">dlellinger@users.sourceforge.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>