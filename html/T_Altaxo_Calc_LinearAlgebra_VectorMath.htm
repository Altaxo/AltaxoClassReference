<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>VectorMath Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="VectorMath class" /><meta name="System.Keywords" content="Altaxo.Calc.LinearAlgebra.VectorMath class" /><meta name="Microsoft.Help.F1" content="Altaxo.Calc.LinearAlgebra.VectorMath" /><meta name="Microsoft.Help.Id" content="T:Altaxo.Calc.LinearAlgebra.VectorMath" /><meta name="Description" content="VectorMath provides common static functions concerning vectors." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Altaxo.Calc.LinearAlgebra" /><meta name="file" content="T_Altaxo_Calc_LinearAlgebra_VectorMath" /><meta name="guid" content="T_Altaxo_Calc_LinearAlgebra_VectorMath" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Altaxo user manual and class reference<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1B7FE024E7E614BFA13DAA1FD005CB2E.htm" title="Altaxo user manual and class reference" tocid="roottoc">Altaxo user manual and class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Altaxo class reference" tocid="R_Project_Documentation">Altaxo class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo.htm" title="Altaxo Namespaces" tocid="G_Altaxo">Altaxo Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo_Calc.htm" title="Altaxo.Calc Namespaces" tocid="G_Altaxo_Calc">Altaxo.Calc Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Altaxo_Calc_LinearAlgebra.htm" title="Altaxo.Calc.LinearAlgebra" tocid="N_Altaxo_Calc_LinearAlgebra">Altaxo.Calc.LinearAlgebra</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_LinearAlgebra_VectorMath.htm" title="VectorMath Class" tocid="T_Altaxo_Calc_LinearAlgebra_VectorMath">VectorMath Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Altaxo_Calc_LinearAlgebra_VectorMath.htm" title="VectorMath Methods" tocid="Methods_T_Altaxo_Calc_LinearAlgebra_VectorMath">VectorMath Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>VectorMath Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            VectorMath provides common static functions concerning vectors.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST1E44DE20_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Altaxo.Calc.LinearAlgebra<span id="LST1E44DE20_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VectorMath</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Altaxo_Calc_LinearAlgebra.htm">Altaxo.Calc.LinearAlgebra</a><br />
    <strong>Assembly:</strong>
   AltaxoCore (in AltaxoCore.dll) Version: 4.8.2867.0 (4.8.2867.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">VectorMath</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">VectorMath</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Add_2.htm">Add(<span id="LST1E44DE20_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_2?cpp=array&lt;");</script>Double<span id="LST1E44DE20_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_4?cpp=array&lt;");</script>Double<span id="LST1E44DE20_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_5?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_6?cpp=array&lt;");</script>Double<span id="LST1E44DE20_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_7?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Add_3.htm">Add(<span id="LST1E44DE20_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_8?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_9?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_10?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_11?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_12?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_13?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Add.htm">Add(IReadOnlyList<span id="LST1E44DE20_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_19?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Add_1.htm">Add(IReadOnlyList<span id="LST1E44DE20_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_20?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_22?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_23?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_24?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_25?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Add_4.htm">Add(<span id="LST1E44DE20_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_26?cpp=array&lt;");</script>Single<span id="LST1E44DE20_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_27?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_28?cpp=array&lt;");</script>Single<span id="LST1E44DE20_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_29?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_30?cpp=array&lt;");</script>Single<span id="LST1E44DE20_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_31?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AddScaled_2.htm">AddScaled(<span id="LST1E44DE20_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_32?cpp=array&lt;");</script>Double<span id="LST1E44DE20_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_33?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_34?cpp=array&lt;");</script>Double<span id="LST1E44DE20_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_35?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, <span id="LST1E44DE20_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_36?cpp=array&lt;");</script>Double<span id="LST1E44DE20_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_37?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and (b scaled with scaleb) and stores the result in c, i.e. c = a + b * scaleb. All vectors must have the same length.
            The vectors a or b may be identical (the same instance) as c. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AddScaled_3.htm">AddScaled(<span id="LST1E44DE20_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_38?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_39?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_40?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_41?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST1E44DE20_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_42?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_43?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and (b scaled with scaleb) and stores the result in c, i.e. c = a + b * scaleb. All vectors must have the same length.
            The vectors a or b may be identical (the same instance) as c. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AddScaled.htm">AddScaled(IReadOnlyList<span id="LST1E44DE20_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_44?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_45?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_46?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_47?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, IVector<span id="LST1E44DE20_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_48?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_49?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and (b scaled with scaleb) and stores the result in c, i.e. c = a + b * scaleb. All vectors must have the same length.
            The vectors a or b may be identical (the same instance) as c. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AddScaled_1.htm">AddScaled(IReadOnlyList<span id="LST1E44DE20_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_50?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_51?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_52?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_53?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Single, IVector<span id="LST1E44DE20_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_54?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_55?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and (b scaled with scaleb) and stores the result in c, i.e. c = a + b * scaleb. All vectors must have the same length.
            The vectors a or b may be identical (the same instance) as c. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AddScaled_4.htm">AddScaled(<span id="LST1E44DE20_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_56?cpp=array&lt;");</script>Single<span id="LST1E44DE20_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_57?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_58?cpp=array&lt;");</script>Single<span id="LST1E44DE20_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_59?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Single, <span id="LST1E44DE20_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_60?cpp=array&lt;");</script>Single<span id="LST1E44DE20_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_61?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Adds (elementwise) two vectors a and (b scaled with scaleb) and stores the result in c, i.e. c = a + b * scaleb. All vectors must have the same length.
            The vectors a or b may be identical (the same instance) as c. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_6.htm">Any(<span id="LST1E44DE20_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_62?cpp=array&lt;");</script>Double<span id="LST1E44DE20_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_63?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Determines whether the given <span class="parameter">vector</span> contains any elements.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_9.htm">Any(<span id="LST1E44DE20_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_64?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_65?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Determines whether the given <span class="parameter">vector</span> contains any elements.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any.htm">Any(IReadOnlyList<span id="LST1E44DE20_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_66?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_67?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Determines whether the given <span class="parameter">vector</span> contains any elements.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_3.htm">Any(IReadOnlyList<span id="LST1E44DE20_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_68?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_69?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Determines whether the given <span class="parameter">vector</span> contains any elements.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_12.htm">Any(<span id="LST1E44DE20_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_70?cpp=array&lt;");</script>Single<span id="LST1E44DE20_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_71?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Determines whether the given <span class="parameter">vector</span> contains any elements.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_7.htm">Any(<span id="LST1E44DE20_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_72?cpp=array&lt;");</script>Double<span id="LST1E44DE20_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_73?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_74?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Boolean<span id="LST1E44DE20_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_75?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_10.htm">Any(<span id="LST1E44DE20_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_76?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_77?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_78?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Boolean<span id="LST1E44DE20_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_79?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_1.htm">Any(IReadOnlyList<span id="LST1E44DE20_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_80?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_81?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_82?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Boolean<span id="LST1E44DE20_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_83?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_4.htm">Any(IReadOnlyList<span id="LST1E44DE20_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_84?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_85?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_86?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Boolean<span id="LST1E44DE20_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_87?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_13.htm">Any(<span id="LST1E44DE20_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_88?cpp=array&lt;");</script>Single<span id="LST1E44DE20_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_89?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_90?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Boolean<span id="LST1E44DE20_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_91?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_8.htm">Any(<span id="LST1E44DE20_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_92?cpp=array&lt;");</script>Double<span id="LST1E44DE20_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_93?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_94?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Boolean<span id="LST1E44DE20_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_95?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32<span id="LST1E44DE20_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_96?cpp=%");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_11.htm">Any(<span id="LST1E44DE20_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_97?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_98?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_99?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Boolean<span id="LST1E44DE20_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_100?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32<span id="LST1E44DE20_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_101?cpp=%");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_2.htm">Any(IReadOnlyList<span id="LST1E44DE20_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_102?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_103?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_104?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Boolean<span id="LST1E44DE20_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_105?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32<span id="LST1E44DE20_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_106?cpp=%");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_5.htm">Any(IReadOnlyList<span id="LST1E44DE20_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_107?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_108?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_109?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Boolean<span id="LST1E44DE20_110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_110?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32<span id="LST1E44DE20_111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_111?cpp=%");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Any_14.htm">Any(<span id="LST1E44DE20_112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_112?cpp=array&lt;");</script>Single<span id="LST1E44DE20_113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_113?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_114?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Boolean<span id="LST1E44DE20_115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_115?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32<span id="LST1E44DE20_116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_116?cpp=%");</script>)</a></td><td><div class="summary">
            Determines whether any element of the <span class="parameter">vector</span> satisfies a condition.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AreValuesEqual_2.htm">AreValuesEqual(<span id="LST1E44DE20_117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_117?cpp=array&lt;");</script>Double<span id="LST1E44DE20_118"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_118?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_119"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_119?cpp=array&lt;");</script>Double<span id="LST1E44DE20_120"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_120?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if and only if both vectors contain the same elements. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AreValuesEqual_3.htm">AreValuesEqual(<span id="LST1E44DE20_121"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_121?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_122"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_122?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_123"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_123?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_124"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_124?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if and only if both vectors contain the same elements. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AreValuesEqual.htm">AreValuesEqual(IReadOnlyList<span id="LST1E44DE20_125"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_125?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_126"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_126?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_127"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_127?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_128"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_128?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns true if and only if both vectors contain the same elements. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AreValuesEqual_1.htm">AreValuesEqual(IReadOnlyList<span id="LST1E44DE20_129"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_129?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_130"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_130?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_131"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_131?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_132"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_132?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns true if and only if both vectors contain the same elements. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_AreValuesEqual_4.htm">AreValuesEqual(<span id="LST1E44DE20_133"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_133?cpp=array&lt;");</script>Single<span id="LST1E44DE20_134"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_134?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_135"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_135?cpp=array&lt;");</script>Single<span id="LST1E44DE20_136"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_136?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if and only if both vectors contain the same elements. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Average_2.htm">Average(<span id="LST1E44DE20_137"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_137?cpp=array&lt;");</script>Double<span id="LST1E44DE20_138"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_138?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Average_3.htm">Average(<span id="LST1E44DE20_139"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_139?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_140"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_140?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Average.htm">Average(IReadOnlyList<span id="LST1E44DE20_141"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_141?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_142"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_142?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Average_1.htm">Average(IReadOnlyList<span id="LST1E44DE20_143"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_143?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_144"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_144?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Average_4.htm">Average(<span id="LST1E44DE20_145"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_145?cpp=array&lt;");</script>Single<span id="LST1E44DE20_146"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_146?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Clone.htm">Clone(<span id="LST1E44DE20_147"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_147?cpp=array&lt;");</script>Double<span id="LST1E44DE20_148"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_148?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns a clone of the source vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Clone_1.htm">Clone(<span id="LST1E44DE20_149"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_149?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_150"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_150?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns a clone of the source vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Clone_2.htm">Clone(<span id="LST1E44DE20_151"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_151?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_152"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_152?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns a clone of the source vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Clone_3.htm">Clone(<span id="LST1E44DE20_153"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_153?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_154"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_154?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns a clone of the source vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Clone_4.htm">Clone(<span id="LST1E44DE20_155"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_155?cpp=array&lt;");</script>Single<span id="LST1E44DE20_156"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_156?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns a clone of the source vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy.htm">Copy(<span id="LST1E44DE20_157"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_157?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_158"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_158?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, IVector<span id="LST1E44DE20_159"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_159?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_160"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_160?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_1.htm">Copy(<span id="LST1E44DE20_161"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_161?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_162"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_162?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_163"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_163?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_164"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_164?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_32.htm">Copy(<span id="LST1E44DE20_165"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_165?cpp=array&lt;");</script>Double<span id="LST1E44DE20_166"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_166?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, IVector<span id="LST1E44DE20_167"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_167?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_168"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_168?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_33.htm">Copy(<span id="LST1E44DE20_169"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_169?cpp=array&lt;");</script>Double<span id="LST1E44DE20_170"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_170?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_171"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_171?cpp=array&lt;");</script>Double<span id="LST1E44DE20_172"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_172?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_36.htm">Copy(<span id="LST1E44DE20_173"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_173?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_174"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_174?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, IVector<span id="LST1E44DE20_175"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_175?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_176"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_176?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_37.htm">Copy(<span id="LST1E44DE20_177"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_177?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_178"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_178?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, IVector<span id="LST1E44DE20_179"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_179?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_180"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_180?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_38.htm">Copy(<span id="LST1E44DE20_181"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_181?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_182"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_182?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, IVector<span id="LST1E44DE20_183"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_183?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_184"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_184?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_39.htm">Copy(<span id="LST1E44DE20_185"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_185?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_186"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_186?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_187"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_187?cpp=array&lt;");</script>Double<span id="LST1E44DE20_188"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_188?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_46.htm">Copy(<span id="LST1E44DE20_189"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_189?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_190"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_190?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_191"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_191?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_192"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_192?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_47.htm">Copy(<span id="LST1E44DE20_193"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_193?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_194"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_194?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_195"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_195?cpp=array&lt;");</script>Single<span id="LST1E44DE20_196"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_196?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_4.htm">Copy(IReadOnlyList<span id="LST1E44DE20_197"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_197?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_198"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_198?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_199"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_199?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_200"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_200?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_5.htm">Copy(IReadOnlyList<span id="LST1E44DE20_201"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_201?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_202"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_202?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_203"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_203?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_204"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_204?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_8.htm">Copy(IReadOnlyList<span id="LST1E44DE20_205"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_205?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_206"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_206?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_207"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_207?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_208"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_208?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_9.htm">Copy(IReadOnlyList<span id="LST1E44DE20_209"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_209?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_210"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_210?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_211"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_211?cpp=array&lt;");</script>Double<span id="LST1E44DE20_212"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_212?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_12.htm">Copy(IReadOnlyList<span id="LST1E44DE20_213"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_213?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_214"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_214?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_215"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_215?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_216"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_216?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_13.htm">Copy(IReadOnlyList<span id="LST1E44DE20_217"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_217?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_218"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_218?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_219"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_219?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_220"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_220?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_14.htm">Copy(IReadOnlyList<span id="LST1E44DE20_221"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_221?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_222"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_222?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_223"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_223?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_224"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_224?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_15.htm">Copy(IReadOnlyList<span id="LST1E44DE20_225"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_225?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_226"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_226?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_227"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_227?cpp=array&lt;");</script>Double<span id="LST1E44DE20_228"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_228?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_22.htm">Copy(IReadOnlyList<span id="LST1E44DE20_229"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_229?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_230"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_230?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_231"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_231?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_232"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_232?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_23.htm">Copy(IReadOnlyList<span id="LST1E44DE20_233"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_233?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_234"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_234?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_235"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_235?cpp=array&lt;");</script>Single<span id="LST1E44DE20_236"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_236?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_24.htm">Copy(IReadOnlyList<span id="LST1E44DE20_237"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_237?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_238"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_238?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_239"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_239?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_240"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_240?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_25.htm">Copy(IReadOnlyList<span id="LST1E44DE20_241"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_241?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_242"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_242?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_243"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_243?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_244"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_244?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_26.htm">Copy(IReadOnlyList<span id="LST1E44DE20_245"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_245?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_246"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_246?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_247"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_247?cpp=array&lt;");</script>Double<span id="LST1E44DE20_248"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_248?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_31.htm">Copy(IReadOnlyList<span id="LST1E44DE20_249"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_249?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_250"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_250?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_251"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_251?cpp=array&lt;");</script>Single<span id="LST1E44DE20_252"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_252?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_48.htm">Copy(<span id="LST1E44DE20_253"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_253?cpp=array&lt;");</script>Single<span id="LST1E44DE20_254"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_254?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, IVector<span id="LST1E44DE20_255"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_255?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_256"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_256?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_49.htm">Copy(<span id="LST1E44DE20_257"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_257?cpp=array&lt;");</script>Single<span id="LST1E44DE20_258"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_258?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, IVector<span id="LST1E44DE20_259"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_259?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_260"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_260?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_50.htm">Copy(<span id="LST1E44DE20_261"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_261?cpp=array&lt;");</script>Single<span id="LST1E44DE20_262"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_262?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_263"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_263?cpp=array&lt;");</script>Double<span id="LST1E44DE20_264"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_264?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_55.htm">Copy(<span id="LST1E44DE20_265"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_265?cpp=array&lt;");</script>Single<span id="LST1E44DE20_266"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_266?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_267"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_267?cpp=array&lt;");</script>Single<span id="LST1E44DE20_268"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_268?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Copies the source vector to the destination vector. Both vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_2.htm">Copy(<span id="LST1E44DE20_269"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_269?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_270"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_270?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, IVector<span id="LST1E44DE20_271"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_271?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_272"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_272?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_3.htm">Copy(<span id="LST1E44DE20_273"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_273?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_274"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_274?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST1E44DE20_275"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_275?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_276"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_276?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_34.htm">Copy(<span id="LST1E44DE20_277"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_277?cpp=array&lt;");</script>Double<span id="LST1E44DE20_278"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_278?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, IVector<span id="LST1E44DE20_279"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_279?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_280"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_280?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_35.htm">Copy(<span id="LST1E44DE20_281"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_281?cpp=array&lt;");</script>Double<span id="LST1E44DE20_282"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_282?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST1E44DE20_283"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_283?cpp=array&lt;");</script>Double<span id="LST1E44DE20_284"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_284?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_40.htm">Copy(<span id="LST1E44DE20_285"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_285?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_286"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_286?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, IVector<span id="LST1E44DE20_287"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_287?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_288"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_288?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_41.htm">Copy(<span id="LST1E44DE20_289"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_289?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_290"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_290?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, IVector<span id="LST1E44DE20_291"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_291?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_292"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_292?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_42.htm">Copy(<span id="LST1E44DE20_293"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_293?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_294"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_294?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, IVector<span id="LST1E44DE20_295"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_295?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_296"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_296?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_43.htm">Copy(<span id="LST1E44DE20_297"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_297?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_298"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_298?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST1E44DE20_299"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_299?cpp=array&lt;");</script>Double<span id="LST1E44DE20_300"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_300?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_44.htm">Copy(<span id="LST1E44DE20_301"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_301?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_302"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_302?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST1E44DE20_303"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_303?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_304"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_304?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_45.htm">Copy(<span id="LST1E44DE20_305"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_305?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_306"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_306?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST1E44DE20_307"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_307?cpp=array&lt;");</script>Single<span id="LST1E44DE20_308"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_308?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_6.htm">Copy(IReadOnlyList<span id="LST1E44DE20_309"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_309?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_310"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_310?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, IVector<span id="LST1E44DE20_311"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_311?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_312"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_312?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_7.htm">Copy(IReadOnlyList<span id="LST1E44DE20_313"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_313?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_314"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_314?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, <span id="LST1E44DE20_315"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_315?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_316"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_316?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_10.htm">Copy(IReadOnlyList<span id="LST1E44DE20_317"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_317?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_318"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_318?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, IVector<span id="LST1E44DE20_319"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_319?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_320"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_320?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_11.htm">Copy(IReadOnlyList<span id="LST1E44DE20_321"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_321?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_322"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_322?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, <span id="LST1E44DE20_323"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_323?cpp=array&lt;");</script>Double<span id="LST1E44DE20_324"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_324?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_16.htm">Copy(IReadOnlyList<span id="LST1E44DE20_325"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_325?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_326"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_326?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, IVector<span id="LST1E44DE20_327"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_327?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_328"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_328?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_17.htm">Copy(IReadOnlyList<span id="LST1E44DE20_329"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_329?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_330"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_330?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, IVector<span id="LST1E44DE20_331"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_331?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_332"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_332?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_18.htm">Copy(IReadOnlyList<span id="LST1E44DE20_333"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_333?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_334"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_334?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, IVector<span id="LST1E44DE20_335"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_335?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_336"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_336?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_19.htm">Copy(IReadOnlyList<span id="LST1E44DE20_337"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_337?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_338"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_338?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, <span id="LST1E44DE20_339"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_339?cpp=array&lt;");</script>Double<span id="LST1E44DE20_340"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_340?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_20.htm">Copy(IReadOnlyList<span id="LST1E44DE20_341"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_341?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_342"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_342?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, <span id="LST1E44DE20_343"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_343?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_344"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_344?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_21.htm">Copy(IReadOnlyList<span id="LST1E44DE20_345"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_345?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_346"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_346?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, <span id="LST1E44DE20_347"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_347?cpp=array&lt;");</script>Single<span id="LST1E44DE20_348"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_348?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_27.htm">Copy(IReadOnlyList<span id="LST1E44DE20_349"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_349?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_350"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_350?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, IVector<span id="LST1E44DE20_351"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_351?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_352"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_352?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_28.htm">Copy(IReadOnlyList<span id="LST1E44DE20_353"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_353?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_354"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_354?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, IVector<span id="LST1E44DE20_355"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_355?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_356"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_356?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_29.htm">Copy(IReadOnlyList<span id="LST1E44DE20_357"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_357?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_358"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_358?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, <span id="LST1E44DE20_359"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_359?cpp=array&lt;");</script>Double<span id="LST1E44DE20_360"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_360?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_30.htm">Copy(IReadOnlyList<span id="LST1E44DE20_361"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_361?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_362"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_362?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, <span id="LST1E44DE20_363"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_363?cpp=array&lt;");</script>Single<span id="LST1E44DE20_364"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_364?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_51.htm">Copy(<span id="LST1E44DE20_365"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_365?cpp=array&lt;");</script>Single<span id="LST1E44DE20_366"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_366?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, IVector<span id="LST1E44DE20_367"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_367?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_368"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_368?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_52.htm">Copy(<span id="LST1E44DE20_369"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_369?cpp=array&lt;");</script>Single<span id="LST1E44DE20_370"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_370?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, IVector<span id="LST1E44DE20_371"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_371?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_372"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_372?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_53.htm">Copy(<span id="LST1E44DE20_373"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_373?cpp=array&lt;");</script>Single<span id="LST1E44DE20_374"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_374?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST1E44DE20_375"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_375?cpp=array&lt;");</script>Double<span id="LST1E44DE20_376"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_376?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Copy_54.htm">Copy(<span id="LST1E44DE20_377"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_377?cpp=array&lt;");</script>Single<span id="LST1E44DE20_378"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_378?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST1E44DE20_379"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_379?cpp=array&lt;");</script>Single<span id="LST1E44DE20_380"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_380?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Copies elements of a source vector to a destination vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartEndLength.htm">CreateEquidistantSequenceByStartEndLength(Double, Double, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant element values from start to end. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartEndLength_1.htm">CreateEquidistantSequenceByStartEndLength(Int16, Int16, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant element values from start to end. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartEndLength_2.htm">CreateEquidistantSequenceByStartEndLength(Int32, Int32, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant element values from start to end. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartEndLength_3.htm">CreateEquidistantSequenceByStartEndLength(SByte, SByte, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant element values from start to end. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartEndLength_4.htm">CreateEquidistantSequenceByStartEndLength(Single, Single, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant element values from start to end. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartStepLength.htm">CreateEquidistantSequenceByStartStepLength(Double, Double, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements with values from start to start+(length-1)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartStepLength_1.htm">CreateEquidistantSequenceByStartStepLength(Int16, Int16, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements with values from start to start+(length-1)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartStepLength_2.htm">CreateEquidistantSequenceByStartStepLength(Int32, Int32, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements with values from start to start+(length-1)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartStepLength_3.htm">CreateEquidistantSequenceByStartStepLength(SByte, SByte, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements with values from start to start+(length-1)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequenceByStartStepLength_4.htm">CreateEquidistantSequenceByStartStepLength(Single, Single, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements with values from start to start+(length-1)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequencyByStartAtOffsetStepLength.htm">CreateEquidistantSequencyByStartAtOffsetStepLength(Double, Int32, Double, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements from start - startOffset*step to start + (length - 1 -startOffset)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequencyByStartAtOffsetStepLength_1.htm">CreateEquidistantSequencyByStartAtOffsetStepLength(Int16, Int32, Int16, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements from start - startOffset*step to start + (length - 1 -startOffset)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequencyByStartAtOffsetStepLength_2.htm">CreateEquidistantSequencyByStartAtOffsetStepLength(Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements from start - startOffset*step to start + (length - 1 -startOffset)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequencyByStartAtOffsetStepLength_3.htm">CreateEquidistantSequencyByStartAtOffsetStepLength(SByte, Int32, SByte, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements from start - startOffset*step to start + (length - 1 -startOffset)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateEquidistantSequencyByStartAtOffsetStepLength_4.htm">CreateEquidistantSequencyByStartAtOffsetStepLength(Single, Int32, Single, Int32)</a></td><td><div class="summary">
            Creates a read-only vector with equidistant elements from start - startOffset*step to start + (length - 1 -startOffset)*step. The created vector
            consumes memory only for the three variables, independent of its length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_CreateExtensibleVector__1.htm">CreateExtensibleVector<span id="LST1E44DE20_381"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_381?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_382"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_382?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            Creates a new extensible vector of length <span class="code">length</span></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Divide.htm">Divide(Double, IVector<span id="LST1E44DE20_383"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_383?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_384"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_384?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Sets the element of the vector to the result of scalar x divided by each element y[i].
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Divide_1.htm">Divide(Double, <span id="LST1E44DE20_385"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_385?cpp=array&lt;");</script>Double<span id="LST1E44DE20_386"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_386?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Sets the element of the vector to the result of scalar x divided by each element y[i].
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Divide_2.htm">Divide(Int32, <span id="LST1E44DE20_387"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_387?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_388"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_388?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Sets the element of the vector to the result of scalar x divided by each element y[i].
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Divide_3.htm">Divide(Single, IVector<span id="LST1E44DE20_389"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_389?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_390"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_390?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Sets the element of the vector to the result of scalar x divided by each element y[i].
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Divide_4.htm">Divide(Single, <span id="LST1E44DE20_391"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_391?cpp=array&lt;");</script>Single<span id="LST1E44DE20_392"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_392?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Sets the element of the vector to the result of scalar x divided by each element y[i].
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_DotProduct_2.htm">DotProduct(<span id="LST1E44DE20_393"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_393?cpp=array&lt;");</script>Double<span id="LST1E44DE20_394"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_394?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_395"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_395?cpp=array&lt;");</script>Double<span id="LST1E44DE20_396"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_396?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the dot product of vector1 and vector2.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_DotProduct_3.htm">DotProduct(<span id="LST1E44DE20_397"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_397?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_398"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_398?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_399"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_399?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_400"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_400?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the dot product of vector1 and vector2.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_DotProduct.htm">DotProduct(IReadOnlyList<span id="LST1E44DE20_401"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_401?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_402"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_402?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_403"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_403?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_404"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_404?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the dot product of vector1 and vector2.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_DotProduct_1.htm">DotProduct(IReadOnlyList<span id="LST1E44DE20_405"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_405?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_406"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_406?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_407"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_407?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_408"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_408?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the dot product of vector1 and vector2.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_DotProduct_4.htm">DotProduct(<span id="LST1E44DE20_409"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_409?cpp=array&lt;");</script>Single<span id="LST1E44DE20_410"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_410?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_411"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_411?cpp=array&lt;");</script>Single<span id="LST1E44DE20_412"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_412?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the dot product of vector1 and vector2.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ElementsAt__1_1.htm">ElementsAt<span id="LST1E44DE20_413"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_413?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_414"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_414?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_415"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_415?cpp=array&lt;");</script>T<span id="LST1E44DE20_416"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_416?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_417"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_417?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_418"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_418?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ElementsAt__1.htm">ElementsAt<span id="LST1E44DE20_419"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_419?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_420"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_420?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IReadOnlyList<span id="LST1E44DE20_421"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_421?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_422"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_422?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_423"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_423?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_424"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_424?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ElementsWhere__1_2.htm">ElementsWhere<span id="LST1E44DE20_425"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_425?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_426"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_426?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_427"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_427?cpp=array&lt;");</script>T<span id="LST1E44DE20_428"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_428?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_429"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_429?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_430"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_430?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ElementsWhere__1_3.htm">ElementsWhere<span id="LST1E44DE20_431"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_431?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_432"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_432?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_433"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_433?cpp=array&lt;");</script>T<span id="LST1E44DE20_434"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_434?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, IEnumerable<span id="LST1E44DE20_435"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_435?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_436"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_436?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ElementsWhere__1.htm">ElementsWhere<span id="LST1E44DE20_437"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_437?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_438"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_438?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IReadOnlyList<span id="LST1E44DE20_439"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_439?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_440"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_440?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_441"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_441?cpp=array&lt;");</script>Boolean<span id="LST1E44DE20_442"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_442?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ElementsWhere__1_1.htm">ElementsWhere<span id="LST1E44DE20_443"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_443?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_444"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_444?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IReadOnlyList<span id="LST1E44DE20_445"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_445?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_446"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_446?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LST1E44DE20_447"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_447?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1E44DE20_448"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_448?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanDistance_2.htm">EuclideanDistance(<span id="LST1E44DE20_449"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_449?cpp=array&lt;");</script>Double<span id="LST1E44DE20_450"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_450?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_451"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_451?cpp=array&lt;");</script>Double<span id="LST1E44DE20_452"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_452?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the Euclidean distance of two vectors, i.e. the L2-norm of the difference of the two vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanDistance_3.htm">EuclideanDistance(<span id="LST1E44DE20_453"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_453?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_454"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_454?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_455"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_455?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_456"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_456?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the Euclidean distance of two vectors, i.e. the L2-norm of the difference of the two vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanDistance.htm">EuclideanDistance(IReadOnlyList<span id="LST1E44DE20_457"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_457?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_458"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_458?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_459"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_459?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_460"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_460?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the Euclidean distance of two vectors, i.e. the L2-norm of the difference of the two vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanDistance_1.htm">EuclideanDistance(IReadOnlyList<span id="LST1E44DE20_461"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_461?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_462"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_462?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_463"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_463?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_464"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_464?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the Euclidean distance of two vectors, i.e. the L2-norm of the difference of the two vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanDistance_4.htm">EuclideanDistance(<span id="LST1E44DE20_465"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_465?cpp=array&lt;");</script>Single<span id="LST1E44DE20_466"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_466?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_467"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_467?cpp=array&lt;");</script>Single<span id="LST1E44DE20_468"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_468?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the Euclidean distance of two vectors, i.e. the L2-norm of the difference of the two vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanNorm_2.htm">EuclideanNorm(<span id="LST1E44DE20_469"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_469?cpp=array&lt;");</script>Double<span id="LST1E44DE20_470"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_470?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanNorm_3.htm">EuclideanNorm(<span id="LST1E44DE20_471"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_471?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_472"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_472?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanNorm.htm">EuclideanNorm(IReadOnlyList<span id="LST1E44DE20_473"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_473?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_474"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_474?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanNorm_1.htm">EuclideanNorm(IReadOnlyList<span id="LST1E44DE20_475"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_475?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_476"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_476?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_EuclideanNorm_4.htm">EuclideanNorm(<span id="LST1E44DE20_477"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_477?cpp=array&lt;");</script>Single<span id="LST1E44DE20_478"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_478?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ExcessKurtosisOfNormalized_2.htm">ExcessKurtosisOfNormalized(<span id="LST1E44DE20_479"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_479?cpp=array&lt;");</script>Double<span id="LST1E44DE20_480"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_480?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the excess kurtosis of the elements in <span class="parameter">vector</span>. The excess kurtosis is defined as
            excesskurtosis(X) = E{X^4} - 3(E{X²})². 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ExcessKurtosisOfNormalized_3.htm">ExcessKurtosisOfNormalized(<span id="LST1E44DE20_481"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_481?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_482"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_482?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the excess kurtosis of the elements in <span class="parameter">vector</span>. The excess kurtosis is defined as
            excesskurtosis(X) = E{X^4} - 3(E{X²})². 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ExcessKurtosisOfNormalized.htm">ExcessKurtosisOfNormalized(IReadOnlyList<span id="LST1E44DE20_483"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_483?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_484"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_484?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the excess kurtosis of the elements in <span class="parameter">vector</span>. The excess kurtosis is defined as
            excesskurtosis(X) = E{X^4} - 3(E{X²})². 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ExcessKurtosisOfNormalized_1.htm">ExcessKurtosisOfNormalized(IReadOnlyList<span id="LST1E44DE20_485"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_485?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_486"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_486?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the excess kurtosis of the elements in <span class="parameter">vector</span>. The excess kurtosis is defined as
            excesskurtosis(X) = E{X^4} - 3(E{X²})². 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ExcessKurtosisOfNormalized_4.htm">ExcessKurtosisOfNormalized(<span id="LST1E44DE20_487"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_487?cpp=array&lt;");</script>Single<span id="LST1E44DE20_488"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_488?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the excess kurtosis of the elements in <span class="parameter">vector</span>. The excess kurtosis is defined as
            excesskurtosis(X) = E{X^4} - 3(E{X²})². 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWith_2.htm">FillWith(<span id="LST1E44DE20_489"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_489?cpp=array&lt;");</script>Double<span id="LST1E44DE20_490"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_490?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double)</a></td><td><div class="summary">
            Fills a vector with a certain value. so that all elements are equal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWith_3.htm">FillWith(<span id="LST1E44DE20_491"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_491?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_492"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_492?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Fills a vector with a certain value. so that all elements are equal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWith.htm">FillWith(IVector<span id="LST1E44DE20_493"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_493?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_494"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_494?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Fills a vector with a certain value. so that all elements are equal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWith_1.htm">FillWith(IVector<span id="LST1E44DE20_495"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_495?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_496"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_496?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Single)</a></td><td><div class="summary">
            Fills a vector with a certain value. so that all elements are equal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWith_4.htm">FillWith(<span id="LST1E44DE20_497"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_497?cpp=array&lt;");</script>Single<span id="LST1E44DE20_498"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_498?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Single)</a></td><td><div class="summary">
            Fills a vector with a certain value. so that all elements are equal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWith__1.htm">FillWith<span id="LST1E44DE20_499"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_499?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_500"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_500?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Vector<span id="LST1E44DE20_501"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_501?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_502"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_502?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, T)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWithLinearSequenceGivenByStartAndEnd_2.htm">FillWithLinearSequenceGivenByStartAndEnd(<span id="LST1E44DE20_503"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_503?cpp=array&lt;");</script>Double<span id="LST1E44DE20_504"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_504?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, Double)</a></td><td><div class="summary">
            Fills the vector v with a linear sequence beginning from start (first element) until end (last element).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWithLinearSequenceGivenByStartAndEnd_3.htm">FillWithLinearSequenceGivenByStartAndEnd(<span id="LST1E44DE20_505"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_505?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_506"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_506?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Fills the vector v with a linear sequence beginning from start (first element) until end (last element).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWithLinearSequenceGivenByStartAndEnd.htm">FillWithLinearSequenceGivenByStartAndEnd(IVector<span id="LST1E44DE20_507"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_507?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_508"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_508?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, Double)</a></td><td><div class="summary">
            Fills the vector v with a linear sequence beginning from start (first element) until end (last element).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWithLinearSequenceGivenByStartAndEnd_1.htm">FillWithLinearSequenceGivenByStartAndEnd(IVector<span id="LST1E44DE20_509"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_509?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_510"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_510?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Single, Single)</a></td><td><div class="summary">
            Fills the vector v with a linear sequence beginning from start (first element) until end (last element).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_FillWithLinearSequenceGivenByStartAndEnd_4.htm">FillWithLinearSequenceGivenByStartAndEnd(<span id="LST1E44DE20_511"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_511?cpp=array&lt;");</script>Single<span id="LST1E44DE20_512"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_512?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Single, Single)</a></td><td><div class="summary">
            Fills the vector v with a linear sequence beginning from start (first element) until end (last element).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetConstantVector.htm">GetConstantVector(Double, Int32)</a></td><td><div class="summary">
            Gets a vector with all elements equal to a provided value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetConstantVector_1.htm">GetConstantVector(Int16, Int32)</a></td><td><div class="summary">
            Gets a vector with all elements equal to a provided value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetConstantVector_2.htm">GetConstantVector(Int32, Int32)</a></td><td><div class="summary">
            Gets a vector with all elements equal to a provided value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetConstantVector_3.htm">GetConstantVector(SByte, Int32)</a></td><td><div class="summary">
            Gets a vector with all elements equal to a provided value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetConstantVector_4.htm">GetConstantVector(Single, Int32)</a></td><td><div class="summary">
            Gets a vector with all elements equal to a provided value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetUsedLength_4.htm">GetUsedLength(<span id="LST1E44DE20_513"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_513?cpp=array&lt;");</script>Double<span id="LST1E44DE20_514"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_514?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the used length of the vector. This is one more than the highest index of the element that is different from NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetUsedLength.htm">GetUsedLength(IReadOnlyList<span id="LST1E44DE20_515"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_515?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_516"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_516?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the used length of the vector. This is one more than the highest index of the element that is different from NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetUsedLength_2.htm">GetUsedLength(IReadOnlyList<span id="LST1E44DE20_517"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_517?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_518"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_518?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the used length of the vector. This is one more than the highest index of the element that is different from NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetUsedLength_6.htm">GetUsedLength(<span id="LST1E44DE20_519"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_519?cpp=array&lt;");</script>Single<span id="LST1E44DE20_520"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_520?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the used length of the vector. This is one more than the highest index of the element that is different from NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetUsedLength_5.htm">GetUsedLength(<span id="LST1E44DE20_521"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_521?cpp=array&lt;");</script>Double<span id="LST1E44DE20_522"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_522?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Returns the used length of the vector. This is one more than the highest index of the element that is different from Double.NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetUsedLength_1.htm">GetUsedLength(IReadOnlyList<span id="LST1E44DE20_523"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_523?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_524"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_524?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Returns the used length of the vector. This is one more than the highest index of the element that is different from Double.NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetUsedLength_3.htm">GetUsedLength(IReadOnlyList<span id="LST1E44DE20_525"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_525?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_526"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_526?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Returns the used length of the vector. This is one more than the highest index of the element that is different from Double.NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_GetUsedLength_7.htm">GetUsedLength(<span id="LST1E44DE20_527"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_527?cpp=array&lt;");</script>Single<span id="LST1E44DE20_528"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_528?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Returns the used length of the vector. This is one more than the highest index of the element that is different from Double.NaN.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxAbsoluteValue_2.htm">IndexOfMaxAbsoluteValue(<span id="LST1E44DE20_529"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_529?cpp=array&lt;");</script>Double<span id="LST1E44DE20_530"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_530?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxAbsoluteValue_3.htm">IndexOfMaxAbsoluteValue(<span id="LST1E44DE20_531"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_531?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_532"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_532?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxAbsoluteValue.htm">IndexOfMaxAbsoluteValue(IReadOnlyList<span id="LST1E44DE20_533"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_533?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_534"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_534?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxAbsoluteValue_1.htm">IndexOfMaxAbsoluteValue(IReadOnlyList<span id="LST1E44DE20_535"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_535?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_536"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_536?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxAbsoluteValue_4.htm">IndexOfMaxAbsoluteValue(<span id="LST1E44DE20_537"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_537?cpp=array&lt;");</script>Single<span id="LST1E44DE20_538"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_538?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxValue_2.htm">IndexOfMaxValue(<span id="LST1E44DE20_539"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_539?cpp=array&lt;");</script>Double<span id="LST1E44DE20_540"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_540?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum  value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxValue_3.htm">IndexOfMaxValue(<span id="LST1E44DE20_541"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_541?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_542"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_542?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum  value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxValue.htm">IndexOfMaxValue(IReadOnlyList<span id="LST1E44DE20_543"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_543?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_544"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_544?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum  value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxValue_1.htm">IndexOfMaxValue(IReadOnlyList<span id="LST1E44DE20_545"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_545?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_546"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_546?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum  value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMaxValue_4.htm">IndexOfMaxValue(<span id="LST1E44DE20_547"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_547?cpp=array&lt;");</script>Single<span id="LST1E44DE20_548"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_548?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the maximum  value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinAbsoluteValue_2.htm">IndexOfMinAbsoluteValue(<span id="LST1E44DE20_549"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_549?cpp=array&lt;");</script>Double<span id="LST1E44DE20_550"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_550?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinAbsoluteValue_3.htm">IndexOfMinAbsoluteValue(<span id="LST1E44DE20_551"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_551?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_552"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_552?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinAbsoluteValue.htm">IndexOfMinAbsoluteValue(IReadOnlyList<span id="LST1E44DE20_553"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_553?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_554"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_554?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinAbsoluteValue_1.htm">IndexOfMinAbsoluteValue(IReadOnlyList<span id="LST1E44DE20_555"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_555?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_556"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_556?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinAbsoluteValue_4.htm">IndexOfMinAbsoluteValue(<span id="LST1E44DE20_557"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_557?cpp=array&lt;");</script>Single<span id="LST1E44DE20_558"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_558?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum absolute value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinValue_2.htm">IndexOfMinValue(<span id="LST1E44DE20_559"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_559?cpp=array&lt;");</script>Double<span id="LST1E44DE20_560"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_560?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinValue_3.htm">IndexOfMinValue(<span id="LST1E44DE20_561"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_561?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_562"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_562?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinValue.htm">IndexOfMinValue(IReadOnlyList<span id="LST1E44DE20_563"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_563?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_564"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_564?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinValue_1.htm">IndexOfMinValue(IReadOnlyList<span id="LST1E44DE20_565"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_565?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_566"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_566?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IndexOfMinValue_4.htm">IndexOfMinValue(<span id="LST1E44DE20_567"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_567?cpp=array&lt;");</script>Single<span id="LST1E44DE20_568"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_568?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Return the index of the first element with the minimum value in a vector</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyDecreasing_2.htm">IsStrictlyDecreasing(<span id="LST1E44DE20_569"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_569?cpp=array&lt;");</script>Double<span id="LST1E44DE20_570"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_570?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyDecreasing_3.htm">IsStrictlyDecreasing(<span id="LST1E44DE20_571"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_571?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_572"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_572?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyDecreasing.htm">IsStrictlyDecreasing(IReadOnlyList<span id="LST1E44DE20_573"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_573?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_574"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_574?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyDecreasing_1.htm">IsStrictlyDecreasing(IReadOnlyList<span id="LST1E44DE20_575"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_575?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_576"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_576?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyDecreasing_4.htm">IsStrictlyDecreasing(<span id="LST1E44DE20_577"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_577?cpp=array&lt;");</script>Single<span id="LST1E44DE20_578"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_578?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasing_2.htm">IsStrictlyIncreasing(<span id="LST1E44DE20_579"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_579?cpp=array&lt;");</script>Double<span id="LST1E44DE20_580"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_580?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasing_3.htm">IsStrictlyIncreasing(<span id="LST1E44DE20_581"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_581?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_582"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_582?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasing.htm">IsStrictlyIncreasing(IReadOnlyList<span id="LST1E44DE20_583"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_583?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_584"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_584?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasing_1.htm">IsStrictlyIncreasing(IReadOnlyList<span id="LST1E44DE20_585"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_585?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_586"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_586?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasing_4.htm">IsStrictlyIncreasing(<span id="LST1E44DE20_587"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_587?cpp=array&lt;");</script>Single<span id="LST1E44DE20_588"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_588?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing_4.htm">IsStrictlyIncreasingOrDecreasing(<span id="LST1E44DE20_589"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_589?cpp=array&lt;");</script>Double<span id="LST1E44DE20_590"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_590?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing_6.htm">IsStrictlyIncreasingOrDecreasing(<span id="LST1E44DE20_591"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_591?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_592"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_592?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing.htm">IsStrictlyIncreasingOrDecreasing(IReadOnlyList<span id="LST1E44DE20_593"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_593?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_594"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_594?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing_2.htm">IsStrictlyIncreasingOrDecreasing(IReadOnlyList<span id="LST1E44DE20_595"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_595?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_596"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_596?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing_8.htm">IsStrictlyIncreasingOrDecreasing(<span id="LST1E44DE20_597"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_597?cpp=array&lt;");</script>Single<span id="LST1E44DE20_598"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_598?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing_5.htm">IsStrictlyIncreasingOrDecreasing(<span id="LST1E44DE20_599"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_599?cpp=array&lt;");</script>Double<span id="LST1E44DE20_600"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_600?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Boolean<span id="LST1E44DE20_601"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_601?cpp=%");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing_7.htm">IsStrictlyIncreasingOrDecreasing(<span id="LST1E44DE20_602"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_602?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_603"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_603?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Boolean<span id="LST1E44DE20_604"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_604?cpp=%");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing_1.htm">IsStrictlyIncreasingOrDecreasing(IReadOnlyList<span id="LST1E44DE20_605"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_605?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_606"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_606?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean<span id="LST1E44DE20_607"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_607?cpp=%");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing_3.htm">IsStrictlyIncreasingOrDecreasing(IReadOnlyList<span id="LST1E44DE20_608"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_608?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_609"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_609?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean<span id="LST1E44DE20_610"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_610?cpp=%");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_IsStrictlyIncreasingOrDecreasing_9.htm">IsStrictlyIncreasingOrDecreasing(<span id="LST1E44DE20_611"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_611?cpp=array&lt;");</script>Single<span id="LST1E44DE20_612"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_612?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Boolean<span id="LST1E44DE20_613"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_613?cpp=%");</script>)</a></td><td><div class="summary">
            Returns true if the sequence given by the vector argument is strictly increasing or decreasing.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Kurtosis_2.htm">Kurtosis(<span id="LST1E44DE20_614"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_614?cpp=array&lt;");</script>Double<span id="LST1E44DE20_615"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_615?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the kurtosis of the elements in <span class="parameter">vector</span>. The kurtosis is defined as
            kurtosis(X) = E{(X-µ)^4}/((E{(X-µ)²})².
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Kurtosis_3.htm">Kurtosis(<span id="LST1E44DE20_616"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_616?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_617"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_617?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the kurtosis of the elements in <span class="parameter">vector</span>. The kurtosis is defined as
            kurtosis(X) = E{(X-µ)^4}/((E{(X-µ)²})².
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Kurtosis.htm">Kurtosis(IReadOnlyList<span id="LST1E44DE20_618"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_618?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_619"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_619?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the kurtosis of the elements in <span class="parameter">vector</span>. The kurtosis is defined as
            kurtosis(X) = E{(X-µ)^4}/((E{(X-µ)²})².
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Kurtosis_1.htm">Kurtosis(IReadOnlyList<span id="LST1E44DE20_620"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_620?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_621"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_621?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the kurtosis of the elements in <span class="parameter">vector</span>. The kurtosis is defined as
            kurtosis(X) = E{(X-µ)^4}/((E{(X-µ)²})².
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Kurtosis_4.htm">Kurtosis(<span id="LST1E44DE20_622"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_622?cpp=array&lt;");</script>Single<span id="LST1E44DE20_623"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_623?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the kurtosis of the elements in <span class="parameter">vector</span>. The kurtosis is defined as
            kurtosis(X) = E{(X-µ)^4}/((E{(X-µ)²})².
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L1Norm_2.htm">L1Norm(<span id="LST1E44DE20_624"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_624?cpp=array&lt;");</script>Double<span id="LST1E44DE20_625"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_625?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Calculates the L1 norm of the vector (as the sum of the absolute values of the elements).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L1Norm_3.htm">L1Norm(<span id="LST1E44DE20_626"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_626?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_627"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_627?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Calculates the L1 norm of the vector (as the sum of the absolute values of the elements).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L1Norm.htm">L1Norm(IReadOnlyList<span id="LST1E44DE20_628"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_628?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_629"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_629?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Calculates the L1 norm of the vector (as the sum of the absolute values of the elements).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L1Norm_1.htm">L1Norm(IReadOnlyList<span id="LST1E44DE20_630"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_630?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_631"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_631?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Calculates the L1 norm of the vector (as the sum of the absolute values of the elements).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L1Norm_4.htm">L1Norm(<span id="LST1E44DE20_632"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_632?cpp=array&lt;");</script>Single<span id="LST1E44DE20_633"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_633?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Calculates the L1 norm of the vector (as the sum of the absolute values of the elements).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm_4.htm">L2Norm(<span id="LST1E44DE20_634"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_634?cpp=array&lt;");</script>Double<span id="LST1E44DE20_635"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_635?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm_6.htm">L2Norm(<span id="LST1E44DE20_636"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_636?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_637"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_637?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm.htm">L2Norm(IReadOnlyList<span id="LST1E44DE20_638"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_638?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_639"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_639?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm_2.htm">L2Norm(IReadOnlyList<span id="LST1E44DE20_640"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_640?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_641"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_641?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm_8.htm">L2Norm(<span id="LST1E44DE20_642"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_642?cpp=array&lt;");</script>Single<span id="LST1E44DE20_643"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_643?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm_5.htm">L2Norm(<span id="LST1E44DE20_644"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_644?cpp=array&lt;");</script>Double<span id="LST1E44DE20_645"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_645?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm_7.htm">L2Norm(<span id="LST1E44DE20_646"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_646?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_647"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_647?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm_1.htm">L2Norm(IReadOnlyList<span id="LST1E44DE20_648"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_648?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_649"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_649?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm_3.htm">L2Norm(IReadOnlyList<span id="LST1E44DE20_650"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_650?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_651"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_651?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_L2Norm_9.htm">L2Norm(<span id="LST1E44DE20_652"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_652?cpp=array&lt;");</script>Single<span id="LST1E44DE20_653"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_653?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">Given an n-vector x, this function calculates the euclidean norm of x.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Lerp.htm">Lerp(Double, Double, IReadOnlyList<span id="LST1E44DE20_654"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_654?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_655"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_655?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, IReadOnlyList<span id="LST1E44DE20_656"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_656?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_657"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_657?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_658"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_658?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_659"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_659?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Performs linear interpolation between two vectors at specified points.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Lerp_1.htm">Lerp(Double, Double, IReadOnlyList<span id="LST1E44DE20_660"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_660?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_661"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_661?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, IReadOnlyList<span id="LST1E44DE20_662"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_662?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_663"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_663?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_664"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_664?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_665"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_665?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Performs linear interpolation between two vectors at specified points.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Lerp_2.htm">Lerp(Double, Double, <span id="LST1E44DE20_666"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_666?cpp=array&lt;");</script>Double<span id="LST1E44DE20_667"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_667?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, <span id="LST1E44DE20_668"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_668?cpp=array&lt;");</script>Double<span id="LST1E44DE20_669"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_669?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_670"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_670?cpp=array&lt;");</script>Double<span id="LST1E44DE20_671"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_671?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Performs linear interpolation between two vectors at specified points.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Lerp_3.htm">Lerp(Double, Double, <span id="LST1E44DE20_672"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_672?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_673"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_673?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, <span id="LST1E44DE20_674"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_674?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_675"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_675?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_676"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_676?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_677"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_677?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Performs linear interpolation between two vectors at specified points.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Lerp_4.htm">Lerp(Double, Double, <span id="LST1E44DE20_678"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_678?cpp=array&lt;");</script>Single<span id="LST1E44DE20_679"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_679?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, <span id="LST1E44DE20_680"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_680?cpp=array&lt;");</script>Single<span id="LST1E44DE20_681"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_681?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_682"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_682?cpp=array&lt;");</script>Single<span id="LST1E44DE20_683"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_683?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">Performs linear interpolation between two vectors at specified points.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm_4.htm">LInfinityNorm(<span id="LST1E44DE20_684"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_684?cpp=array&lt;");</script>Double<span id="LST1E44DE20_685"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_685?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the provided <span class="parameter">vector</span> (as is the maximum of the absolute value of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm_6.htm">LInfinityNorm(<span id="LST1E44DE20_686"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_686?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_687"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_687?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the provided <span class="parameter">vector</span> (as is the maximum of the absolute value of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm.htm">LInfinityNorm(IReadOnlyList<span id="LST1E44DE20_688"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_688?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_689"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_689?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the provided <span class="parameter">vector</span> (as is the maximum of the absolute value of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm_2.htm">LInfinityNorm(IReadOnlyList<span id="LST1E44DE20_690"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_690?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_691"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_691?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the provided <span class="parameter">vector</span> (as is the maximum of the absolute value of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm_8.htm">LInfinityNorm(<span id="LST1E44DE20_692"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_692?cpp=array&lt;");</script>Single<span id="LST1E44DE20_693"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_693?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the provided <span class="parameter">vector</span> (as is the maximum of the absolute value of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm_5.htm">LInfinityNorm(<span id="LST1E44DE20_694"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_694?cpp=array&lt;");</script>Double<span id="LST1E44DE20_695"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_695?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_696"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_696?cpp=array&lt;");</script>Double<span id="LST1E44DE20_697"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_697?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the difference of <span class="parameter">vector1</span> and <span class="parameter">vector2</span> (as is the maximum of the absolute value of the differences of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm_7.htm">LInfinityNorm(<span id="LST1E44DE20_698"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_698?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_699"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_699?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_700"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_700?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_701"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_701?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the difference of <span class="parameter">vector1</span> and <span class="parameter">vector2</span> (as is the maximum of the absolute value of the differences of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm_1.htm">LInfinityNorm(IReadOnlyList<span id="LST1E44DE20_702"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_702?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_703"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_703?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_704"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_704?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_705"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_705?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the difference of <span class="parameter">vector1</span> and <span class="parameter">vector2</span> (as is the maximum of the absolute value of the differences of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm_3.htm">LInfinityNorm(IReadOnlyList<span id="LST1E44DE20_706"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_706?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_707"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_707?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_708"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_708?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_709"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_709?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the difference of <span class="parameter">vector1</span> and <span class="parameter">vector2</span> (as is the maximum of the absolute value of the differences of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LInfinityNorm_9.htm">LInfinityNorm(<span id="LST1E44DE20_710"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_710?cpp=array&lt;");</script>Single<span id="LST1E44DE20_711"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_711?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_712"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_712?cpp=array&lt;");</script>Single<span id="LST1E44DE20_713"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_713?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the L-infinity norm of the difference of <span class="parameter">vector1</span> and <span class="parameter">vector2</span> (as is the maximum of the absolute value of the differences of the elements). If one
            of the elements of the vector is invalid, the return value is also invalid (for the floating point types).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LpNorm_2.htm">LpNorm(<span id="LST1E44DE20_714"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_714?cpp=array&lt;");</script>Double<span id="LST1E44DE20_715"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_715?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double)</a></td><td><div class="summary">Compute the p Norm of this vector.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LpNorm_3.htm">LpNorm(<span id="LST1E44DE20_716"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_716?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_717"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_717?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double)</a></td><td><div class="summary">Compute the p Norm of this vector.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LpNorm.htm">LpNorm(IReadOnlyList<span id="LST1E44DE20_718"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_718?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_719"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_719?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">Compute the p Norm of this vector.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LpNorm_1.htm">LpNorm(IReadOnlyList<span id="LST1E44DE20_720"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_720?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_721"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_721?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">Compute the p Norm of this vector.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_LpNorm_4.htm">LpNorm(<span id="LST1E44DE20_722"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_722?cpp=array&lt;");</script>Single<span id="LST1E44DE20_723"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_723?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double)</a></td><td><div class="summary">Compute the p Norm of this vector.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_10.htm">Map(<span id="LST1E44DE20_724"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_724?cpp=array&lt;");</script>Double<span id="LST1E44DE20_725"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_725?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_726"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_726?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double<span id="LST1E44DE20_727"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_727?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_12.htm">Map(<span id="LST1E44DE20_728"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_728?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_729"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_729?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_730"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_730?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32<span id="LST1E44DE20_731"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_731?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map.htm">Map(IVector<span id="LST1E44DE20_732"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_732?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_733"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_733?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_734"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_734?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double<span id="LST1E44DE20_735"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_735?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_1.htm">Map(IVector<span id="LST1E44DE20_736"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_736?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_737"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_737?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_738"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_738?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single<span id="LST1E44DE20_739"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_739?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_16.htm">Map(<span id="LST1E44DE20_740"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_740?cpp=array&lt;");</script>Single<span id="LST1E44DE20_741"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_741?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_742"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_742?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single<span id="LST1E44DE20_743"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_743?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_11.htm">Map(<span id="LST1E44DE20_744"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_744?cpp=array&lt;");</script>Double<span id="LST1E44DE20_745"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_745?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_746"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_746?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double<span id="LST1E44DE20_747"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_747?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_748"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_748?cpp=array&lt;");</script>Double<span id="LST1E44DE20_749"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_749?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_13.htm">Map(<span id="LST1E44DE20_750"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_750?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_751"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_751?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_752"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_752?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32<span id="LST1E44DE20_753"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_753?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_754"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_754?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_755"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_755?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_4.htm">Map(IReadOnlyList<span id="LST1E44DE20_756"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_756?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_757"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_757?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_758"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_758?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double<span id="LST1E44DE20_759"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_759?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_760"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_760?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_761"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_761?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_7.htm">Map(IReadOnlyList<span id="LST1E44DE20_762"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_762?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_763"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_763?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_764"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_764?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single<span id="LST1E44DE20_765"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_765?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_766"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_766?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_767"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_767?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_17.htm">Map(<span id="LST1E44DE20_768"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_768?cpp=array&lt;");</script>Single<span id="LST1E44DE20_769"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_769?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_770"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_770?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single<span id="LST1E44DE20_771"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_771?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_772"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_772?cpp=array&lt;");</script>Single<span id="LST1E44DE20_773"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_773?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_9.htm">Map(<span id="LST1E44DE20_774"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_774?cpp=array&lt;");</script>Double<span id="LST1E44DE20_775"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_775?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_776"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_776?cpp=array&lt;");</script>Double<span id="LST1E44DE20_777"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_777?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_778"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_778?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double, Double<span id="LST1E44DE20_779"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_779?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_780"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_780?cpp=array&lt;");</script>Double<span id="LST1E44DE20_781"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_781?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_14.htm">Map(<span id="LST1E44DE20_782"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_782?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_783"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_783?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_784"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_784?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_785"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_785?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_786"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_786?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32, Int32<span id="LST1E44DE20_787"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_787?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_788"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_788?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_789"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_789?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_3.htm">Map(IReadOnlyList<span id="LST1E44DE20_790"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_790?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_791"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_791?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_792"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_792?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_793"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_793?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_794"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_794?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double, Double<span id="LST1E44DE20_795"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_795?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_796"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_796?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_797"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_797?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_6.htm">Map(IReadOnlyList<span id="LST1E44DE20_798"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_798?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_799"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_799?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_800"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_800?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_801"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_801?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_802"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_802?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single, Single<span id="LST1E44DE20_803"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_803?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_804"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_804?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_805"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_805?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_18.htm">Map(<span id="LST1E44DE20_806"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_806?cpp=array&lt;");</script>Single<span id="LST1E44DE20_807"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_807?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_808"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_808?cpp=array&lt;");</script>Single<span id="LST1E44DE20_809"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_809?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_810"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_810?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single, Single<span id="LST1E44DE20_811"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_811?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_812"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_812?cpp=array&lt;");</script>Single<span id="LST1E44DE20_813"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_813?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_8.htm">Map(<span id="LST1E44DE20_814"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_814?cpp=array&lt;");</script>Double<span id="LST1E44DE20_815"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_815?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_816"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_816?cpp=array&lt;");</script>Double<span id="LST1E44DE20_817"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_817?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_818"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_818?cpp=array&lt;");</script>Double<span id="LST1E44DE20_819"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_819?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_820"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_820?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double, Double, Double<span id="LST1E44DE20_821"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_821?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_822"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_822?cpp=array&lt;");</script>Double<span id="LST1E44DE20_823"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_823?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_15.htm">Map(<span id="LST1E44DE20_824"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_824?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_825"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_825?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_826"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_826?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_827"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_827?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_828"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_828?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_829"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_829?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_830"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_830?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32, Int32, Int32<span id="LST1E44DE20_831"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_831?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_832"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_832?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_833"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_833?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_2.htm">Map(IReadOnlyList<span id="LST1E44DE20_834"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_834?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_835"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_835?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_836"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_836?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_837"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_837?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_838"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_838?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_839"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_839?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_840"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_840?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double, Double, Double<span id="LST1E44DE20_841"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_841?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_842"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_842?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_843"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_843?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_5.htm">Map(IReadOnlyList<span id="LST1E44DE20_844"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_844?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_845"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_845?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_846"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_846?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_847"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_847?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_848"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_848?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_849"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_849?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_850"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_850?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single, Single, Single<span id="LST1E44DE20_851"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_851?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_852"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_852?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_853"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_853?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map_19.htm">Map(<span id="LST1E44DE20_854"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_854?cpp=array&lt;");</script>Single<span id="LST1E44DE20_855"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_855?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_856"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_856?cpp=array&lt;");</script>Single<span id="LST1E44DE20_857"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_857?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_858"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_858?cpp=array&lt;");</script>Single<span id="LST1E44DE20_859"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_859?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_860"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_860?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single, Single, Single<span id="LST1E44DE20_861"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_861?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_862"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_862?cpp=array&lt;");</script>Single<span id="LST1E44DE20_863"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_863?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_8.htm">Map<span id="LST1E44DE20_864"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_864?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_865"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_865?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_866"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_866?cpp=array&lt;");</script>Double<span id="LST1E44DE20_867"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_867?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, T1, Func<span id="LST1E44DE20_868"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_868?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, T1, Double<span id="LST1E44DE20_869"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_869?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_870"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_870?cpp=array&lt;");</script>Double<span id="LST1E44DE20_871"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_871?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_11.htm">Map<span id="LST1E44DE20_872"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_872?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_873"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_873?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_874"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_874?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_875"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_875?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, T1, Func<span id="LST1E44DE20_876"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_876?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, T1, Int32<span id="LST1E44DE20_877"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_877?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_878"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_878?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_879"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_879?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_2.htm">Map<span id="LST1E44DE20_880"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_880?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_881"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_881?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IReadOnlyList<span id="LST1E44DE20_882"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_882?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_883"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_883?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, T1, Func<span id="LST1E44DE20_884"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_884?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, T1, Double<span id="LST1E44DE20_885"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_885?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_886"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_886?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_887"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_887?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_5.htm">Map<span id="LST1E44DE20_888"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_888?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_889"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_889?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IReadOnlyList<span id="LST1E44DE20_890"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_890?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_891"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_891?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, T1, Func<span id="LST1E44DE20_892"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_892?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, T1, Single<span id="LST1E44DE20_893"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_893?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_894"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_894?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_895"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_895?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_14.htm">Map<span id="LST1E44DE20_896"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_896?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_897"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_897?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_898"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_898?cpp=array&lt;");</script>Single<span id="LST1E44DE20_899"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_899?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, T1, Func<span id="LST1E44DE20_900"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_900?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, T1, Single<span id="LST1E44DE20_901"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_901?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_902"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_902?cpp=array&lt;");</script>Single<span id="LST1E44DE20_903"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_903?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_7.htm">Map<span id="LST1E44DE20_904"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_904?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_905"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_905?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_906"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_906?cpp=array&lt;");</script>Double<span id="LST1E44DE20_907"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_907?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_908"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_908?cpp=array&lt;");</script>Double<span id="LST1E44DE20_909"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_909?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, T1, Func<span id="LST1E44DE20_910"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_910?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double, T1, Double<span id="LST1E44DE20_911"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_911?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_912"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_912?cpp=array&lt;");</script>Double<span id="LST1E44DE20_913"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_913?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_10.htm">Map<span id="LST1E44DE20_914"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_914?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_915"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_915?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_916"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_916?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_917"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_917?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_918"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_918?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_919"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_919?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, T1, Func<span id="LST1E44DE20_920"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_920?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32, T1, Int32<span id="LST1E44DE20_921"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_921?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_922"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_922?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_923"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_923?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_1.htm">Map<span id="LST1E44DE20_924"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_924?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_925"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_925?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IReadOnlyList<span id="LST1E44DE20_926"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_926?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_927"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_927?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_928"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_928?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_929"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_929?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, T1, Func<span id="LST1E44DE20_930"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_930?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double, T1, Double<span id="LST1E44DE20_931"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_931?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_932"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_932?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_933"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_933?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_4.htm">Map<span id="LST1E44DE20_934"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_934?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_935"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_935?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IReadOnlyList<span id="LST1E44DE20_936"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_936?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_937"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_937?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_938"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_938?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_939"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_939?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, T1, Func<span id="LST1E44DE20_940"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_940?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single, T1, Single<span id="LST1E44DE20_941"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_941?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_942"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_942?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_943"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_943?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_13.htm">Map<span id="LST1E44DE20_944"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_944?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_945"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_945?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_946"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_946?cpp=array&lt;");</script>Single<span id="LST1E44DE20_947"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_947?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_948"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_948?cpp=array&lt;");</script>Single<span id="LST1E44DE20_949"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_949?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, T1, Func<span id="LST1E44DE20_950"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_950?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single, T1, Single<span id="LST1E44DE20_951"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_951?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_952"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_952?cpp=array&lt;");</script>Single<span id="LST1E44DE20_953"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_953?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_6.htm">Map<span id="LST1E44DE20_954"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_954?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_955"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_955?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_956"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_956?cpp=array&lt;");</script>Double<span id="LST1E44DE20_957"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_957?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_958"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_958?cpp=array&lt;");</script>Double<span id="LST1E44DE20_959"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_959?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_960"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_960?cpp=array&lt;");</script>Double<span id="LST1E44DE20_961"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_961?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, T1, Func<span id="LST1E44DE20_962"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_962?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double, Double, T1, Double<span id="LST1E44DE20_963"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_963?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_964"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_964?cpp=array&lt;");</script>Double<span id="LST1E44DE20_965"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_965?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_9.htm">Map<span id="LST1E44DE20_966"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_966?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_967"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_967?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_968"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_968?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_969"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_969?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_970"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_970?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_971"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_971?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_972"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_972?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_973"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_973?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, T1, Func<span id="LST1E44DE20_974"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_974?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32, Int32, T1, Int32<span id="LST1E44DE20_975"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_975?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_976"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_976?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_977"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_977?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1.htm">Map<span id="LST1E44DE20_978"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_978?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_979"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_979?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IReadOnlyList<span id="LST1E44DE20_980"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_980?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_981"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_981?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_982"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_982?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_983"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_983?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_984"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_984?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_985"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_985?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, T1, Func<span id="LST1E44DE20_986"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_986?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double, Double, Double, T1, Double<span id="LST1E44DE20_987"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_987?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_988"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_988?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_989"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_989?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_3.htm">Map<span id="LST1E44DE20_990"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_990?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_991"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_991?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IReadOnlyList<span id="LST1E44DE20_992"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_992?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_993"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_993?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_994"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_994?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_995"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_995?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_996"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_996?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_997"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_997?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, T1, Func<span id="LST1E44DE20_998"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_998?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single, Single, T1, Single<span id="LST1E44DE20_999"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_999?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1000"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1000?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1001"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1001?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Map__1_12.htm">Map<span id="LST1E44DE20_1002"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1002?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1<span id="LST1E44DE20_1003"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1003?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST1E44DE20_1004"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1004?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1005"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1005?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1006"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1006?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1007"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1007?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1008"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1008?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1009"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1009?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, T1, Func<span id="LST1E44DE20_1010"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1010?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single, Single, Single, T1, Single<span id="LST1E44DE20_1011"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1011?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1012"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1012?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1013"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1013?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_8.htm">MapIndexed(<span id="LST1E44DE20_1014"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1014?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1015"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1015?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_1016"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1016?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Double, Double<span id="LST1E44DE20_1017"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1017?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1018"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1018?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1019"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1019?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_9.htm">MapIndexed(<span id="LST1E44DE20_1020"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1020?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1021"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1021?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_1022"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1022?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32, Int32<span id="LST1E44DE20_1023"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1023?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1024"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1024?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1025"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1025?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_2.htm">MapIndexed(IReadOnlyList<span id="LST1E44DE20_1026"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1026?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1027"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1027?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_1028"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1028?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Double, Double<span id="LST1E44DE20_1029"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1029?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1030"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1030?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1031"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1031?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_5.htm">MapIndexed(IReadOnlyList<span id="LST1E44DE20_1032"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1032?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1033"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1033?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_1034"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1034?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Single, Single<span id="LST1E44DE20_1035"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1035?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1036"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1036?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1037"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1037?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_12.htm">MapIndexed(<span id="LST1E44DE20_1038"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1038?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1039"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1039?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_1040"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1040?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Single, Single<span id="LST1E44DE20_1041"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1041?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1042"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1042?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1043"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1043?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to each element of a vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_7.htm">MapIndexed(<span id="LST1E44DE20_1044"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1044?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1045"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1045?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1046"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1046?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1047"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1047?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_1048"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1048?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Double, Double, Double<span id="LST1E44DE20_1049"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1049?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1050"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1050?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1051"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1051?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_10.htm">MapIndexed(<span id="LST1E44DE20_1052"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1052?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1053"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1053?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1054"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1054?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1055"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1055?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_1056"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1056?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32, Int32, Int32<span id="LST1E44DE20_1057"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1057?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1058"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1058?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1059"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1059?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_1.htm">MapIndexed(IReadOnlyList<span id="LST1E44DE20_1060"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1060?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1061"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1061?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1062"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1062?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1063"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1063?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_1064"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1064?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Double, Double, Double<span id="LST1E44DE20_1065"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1065?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1066"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1066?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1067"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1067?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_4.htm">MapIndexed(IReadOnlyList<span id="LST1E44DE20_1068"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1068?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1069"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1069?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1070"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1070?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1071"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1071?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_1072"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1072?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Single, Single, Single<span id="LST1E44DE20_1073"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1073?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1074"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1074?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1075"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1075?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_13.htm">MapIndexed(<span id="LST1E44DE20_1076"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1076?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1077"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1077?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1078"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1078?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1079"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1079?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_1080"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1080?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Single, Single, Single<span id="LST1E44DE20_1081"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1081?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1082"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1082?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1083"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1083?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of two vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_6.htm">MapIndexed(<span id="LST1E44DE20_1084"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1084?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1085"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1085?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1086"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1086?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1087"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1087?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1088"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1088?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1089"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1089?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_1090"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1090?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Double, Double, Double, Double<span id="LST1E44DE20_1091"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1091?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1092"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1092?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1093"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1093?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_11.htm">MapIndexed(<span id="LST1E44DE20_1094"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1094?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1095"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1095?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1096"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1096?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1097"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1097?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1098"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1098?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1099"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1099?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_1100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1100?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Int32, Int32, Int32, Int32<span id="LST1E44DE20_1101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1101?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1102?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1103?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed.htm">MapIndexed(IReadOnlyList<span id="LST1E44DE20_1104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1104?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1105?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1106?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1107?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1108?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1109?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_1110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1110?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Double, Double, Double, Double<span id="LST1E44DE20_1111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1111?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1112?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1113?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_3.htm">MapIndexed(IReadOnlyList<span id="LST1E44DE20_1114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1114?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1115?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1116?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1117?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1118"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1118?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1119"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1119?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST1E44DE20_1120"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1120?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Single, Single, Single, Single<span id="LST1E44DE20_1121"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1121?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1122"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1122?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1123"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1123?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MapIndexed_14.htm">MapIndexed(<span id="LST1E44DE20_1124"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1124?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1125"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1125?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1126"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1126?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1127"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1127?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1128"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1128?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1129"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1129?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Func<span id="LST1E44DE20_1130"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1130?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32, Single, Single, Single, Single<span id="LST1E44DE20_1131"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1131?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST1E44DE20_1132"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1132?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1133"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1133?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Elementwise application of a function to corresponding elements of three vectors. The result is stored in another vector or in the same vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max_4.htm">Max(<span id="LST1E44DE20_1134"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1134?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1135"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1135?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max_6.htm">Max(<span id="LST1E44DE20_1136"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1136?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1137"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1137?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max.htm">Max(IReadOnlyList<span id="LST1E44DE20_1138"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1138?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1139"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1139?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max_2.htm">Max(IReadOnlyList<span id="LST1E44DE20_1140"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1140?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1141"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1141?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max_8.htm">Max(<span id="LST1E44DE20_1142"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1142?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1143"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1143?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max_5.htm">Max(<span id="LST1E44DE20_1144"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1144?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1145"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1145?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max_7.htm">Max(<span id="LST1E44DE20_1146"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1146?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1147"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1147?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max_1.htm">Max(IReadOnlyList<span id="LST1E44DE20_1148"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1148?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1149"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1149?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max_3.htm">Max(IReadOnlyList<span id="LST1E44DE20_1150"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1150?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1151"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1151?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Max_9.htm">Max(<span id="LST1E44DE20_1152"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1152?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1153"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1153?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the maximum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf_4.htm">MaxOf(<span id="LST1E44DE20_1154"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1154?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1155"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1155?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, <span id="LST1E44DE20_1156"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1156?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1157"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1157?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Creates a new vector, whose elements are the maximum of the elements of a given input vector and a given number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf_5.htm">MaxOf(<span id="LST1E44DE20_1158"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1158?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1159"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1159?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1160"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1160?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1161"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1161?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1162"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1162?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1163"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1163?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Gives the parallel maximum of vector a and b. The first element of the resulting vector
            is the maximum of the first element of a and the first element of b. The second element of the
            resulting vector is the maximum of the second element of a and the second element of b, and so on.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf_6.htm">MaxOf(<span id="LST1E44DE20_1164"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1164?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1165"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1165?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, <span id="LST1E44DE20_1166"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1166?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1167"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1167?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Creates a new vector, whose elements are the maximum of the elements of a given input vector and a given number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf_7.htm">MaxOf(<span id="LST1E44DE20_1168"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1168?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1169"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1169?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1170"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1170?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1171"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1171?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1172"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1172?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1173"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1173?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Gives the parallel maximum of vector a and b. The first element of the resulting vector
            is the maximum of the first element of a and the first element of b. The second element of the
            resulting vector is the maximum of the second element of a and the second element of b, and so on.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf.htm">MaxOf(IReadOnlyList<span id="LST1E44DE20_1174"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1174?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1175"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1175?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1176"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1176?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1177"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1177?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1178"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1178?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1179"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1179?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Gives the parallel maximum of vector a and b. The first element of the resulting vector
            is the maximum of the first element of a and the first element of b. The second element of the
            resulting vector is the maximum of the second element of a and the second element of b, and so on.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf_1.htm">MaxOf(IReadOnlyList<span id="LST1E44DE20_1180"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1180?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1181"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1181?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, IVector<span id="LST1E44DE20_1182"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1182?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1183"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1183?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Creates a new vector, whose elements are the maximum of the elements of a given input vector and a given number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf_2.htm">MaxOf(IReadOnlyList<span id="LST1E44DE20_1184"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1184?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1185"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1185?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1186"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1186?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1187"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1187?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1188"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1188?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1189"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1189?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Gives the parallel maximum of vector a and b. The first element of the resulting vector
            is the maximum of the first element of a and the first element of b. The second element of the
            resulting vector is the maximum of the second element of a and the second element of b, and so on.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf_3.htm">MaxOf(IReadOnlyList<span id="LST1E44DE20_1190"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1190?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1191"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1191?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Single, IVector<span id="LST1E44DE20_1192"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1192?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1193"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1193?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Creates a new vector, whose elements are the maximum of the elements of a given input vector and a given number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf_8.htm">MaxOf(<span id="LST1E44DE20_1194"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1194?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1195"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1195?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Single, <span id="LST1E44DE20_1196"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1196?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1197"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1197?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Creates a new vector, whose elements are the maximum of the elements of a given input vector and a given number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOf_9.htm">MaxOf(<span id="LST1E44DE20_1198"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1198?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1199"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1199?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1200"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1200?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1201"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1201?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1202"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1202?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1203"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1203?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Gives the parallel maximum of vector a and b. The first element of the resulting vector
            is the maximum of the first element of a and the first element of b. The second element of the
            resulting vector is the maximum of the second element of a and the second element of b, and so on.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOfValidElements_2.htm">MaxOfValidElements(<span id="LST1E44DE20_1204"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1204?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1205"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1205?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the maximum value of all the valid elements in x (nonvalid elements, i.e. NaN values are not considered).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOfValidElements.htm">MaxOfValidElements(IReadOnlyList<span id="LST1E44DE20_1206"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1206?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1207"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1207?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the maximum value of all the valid elements in x (nonvalid elements, i.e. NaN values are not considered).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOfValidElements_1.htm">MaxOfValidElements(IReadOnlyList<span id="LST1E44DE20_1208"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1208?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1209"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1209?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the maximum value of all the valid elements in x (nonvalid elements, i.e. NaN values are not considered).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MaxOfValidElements_3.htm">MaxOfValidElements(<span id="LST1E44DE20_1210"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1210?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1211"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1211?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the maximum value of all the valid elements in x (nonvalid elements, i.e. NaN values are not considered).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Mean_2.htm">Mean(<span id="LST1E44DE20_1212"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1212?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1213"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1213?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Mean_3.htm">Mean(<span id="LST1E44DE20_1214"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1214?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1215"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1215?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Mean.htm">Mean(IReadOnlyList<span id="LST1E44DE20_1216"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1216?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1217"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1217?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Mean_1.htm">Mean(IReadOnlyList<span id="LST1E44DE20_1218"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1218?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1219"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1219?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Mean_4.htm">Mean(<span id="LST1E44DE20_1220"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1220?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1221"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1221?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MeanAndVariance_2.htm">MeanAndVariance(<span id="LST1E44DE20_1222"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1222?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1223"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1223?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>, as well as the variance (sum of squares of the mean centered values divided by length of the vector).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MeanAndVariance_3.htm">MeanAndVariance(<span id="LST1E44DE20_1224"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1224?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1225"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1225?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>, as well as the variance (sum of squares of the mean centered values divided by length of the vector).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MeanAndVariance.htm">MeanAndVariance(IReadOnlyList<span id="LST1E44DE20_1226"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1226?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1227"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1227?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>, as well as the variance (sum of squares of the mean centered values divided by length of the vector).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MeanAndVariance_1.htm">MeanAndVariance(IReadOnlyList<span id="LST1E44DE20_1228"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1228?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1229"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1229?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>, as well as the variance (sum of squares of the mean centered values divided by length of the vector).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MeanAndVariance_4.htm">MeanAndVariance(<span id="LST1E44DE20_1230"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1230?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1231"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1231?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the average (=sum/N) of the elements in <span class="parameter">vector</span>, as well as the variance (sum of squares of the mean centered values divided by length of the vector).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min_4.htm">Min(<span id="LST1E44DE20_1232"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1232?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1233"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1233?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min_6.htm">Min(<span id="LST1E44DE20_1234"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1234?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1235"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1235?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min.htm">Min(IReadOnlyList<span id="LST1E44DE20_1236"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1236?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1237"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1237?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min_2.htm">Min(IReadOnlyList<span id="LST1E44DE20_1238"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1238?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1239"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1239?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min_8.htm">Min(<span id="LST1E44DE20_1240"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1240?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1241"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1241?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min_5.htm">Min(<span id="LST1E44DE20_1242"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1242?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1243"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1243?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min_7.htm">Min(<span id="LST1E44DE20_1244"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1244?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1245"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1245?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min_1.htm">Min(IReadOnlyList<span id="LST1E44DE20_1246"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1246?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1247"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1247?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min_3.htm">Min(IReadOnlyList<span id="LST1E44DE20_1248"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1248?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1249"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1249?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Min_9.htm">Min(<span id="LST1E44DE20_1250"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1250?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1251"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1251?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Returns the minimum of the elements in <span class="parameter">vector</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MinOfValidElements_2.htm">MinOfValidElements(<span id="LST1E44DE20_1252"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1252?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1253"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1253?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the minimum value of all the valid elements in x (nonvalid elements, i.e. NaN values are not considered).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MinOfValidElements.htm">MinOfValidElements(IReadOnlyList<span id="LST1E44DE20_1254"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1254?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1255"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1255?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the minimum value of all the valid elements in x (nonvalid elements, i.e. NaN values are not considered).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MinOfValidElements_1.htm">MinOfValidElements(IReadOnlyList<span id="LST1E44DE20_1256"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1256?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1257"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1257?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the minimum value of all the valid elements in x (nonvalid elements, i.e. NaN values are not considered).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_MinOfValidElements_3.htm">MinOfValidElements(<span id="LST1E44DE20_1258"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1258?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1259"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1259?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the minimum value of all the valid elements in x (nonvalid elements, i.e. NaN values are not considered).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply_4.htm">Multiply(<span id="LST1E44DE20_1260"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1260?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1261"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1261?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double)</a></td><td><div class="summary">
            Multiplies all vector elements with a constant.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply_6.htm">Multiply(<span id="LST1E44DE20_1262"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1262?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1263"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1263?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Multiplies all vector elements with a constant.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply.htm">Multiply(IVector<span id="LST1E44DE20_1264"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1264?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1265"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1265?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Multiplies all vector elements with a constant.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply_1.htm">Multiply(IVector<span id="LST1E44DE20_1266"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1266?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1267"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1267?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Single)</a></td><td><div class="summary">
            Multiplies all vector elements with a constant.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply_8.htm">Multiply(<span id="LST1E44DE20_1268"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1268?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1269"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1269?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Single)</a></td><td><div class="summary">
            Multiplies all vector elements with a constant.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply_5.htm">Multiply(<span id="LST1E44DE20_1270"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1270?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1271"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1271?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1272"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1272?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1273"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1273?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1274"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1274?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1275"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1275?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Multiplies (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply_7.htm">Multiply(<span id="LST1E44DE20_1276"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1276?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1277"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1277?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1278"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1278?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1279"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1279?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1280"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1280?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1281"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1281?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Multiplies (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply_2.htm">Multiply(IReadOnlyList<span id="LST1E44DE20_1282"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1282?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1283"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1283?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1284"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1284?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1285"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1285?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1286"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1286?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1287"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1287?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Multiplies (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply_3.htm">Multiply(IReadOnlyList<span id="LST1E44DE20_1288"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1288?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1289"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1289?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1290"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1290?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1291"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1291?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IVector<span id="LST1E44DE20_1292"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1292?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1293"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1293?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Multiplies (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Multiply_9.htm">Multiply(<span id="LST1E44DE20_1294"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1294?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1295"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1295?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1296"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1296?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1297"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1297?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1298"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1298?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1299"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1299?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Multiplies (elementwise) two vectors a and b and stores the result in c. All vectors must have the same length.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Rotate_2.htm">Rotate(<span id="LST1E44DE20_1300"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1300?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1301"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1301?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Shifts the element of this vector by moving them from index i to index i+<span class="code">increment</span>.
            The elements at the end of the vector are wrapped back to the start of the vector. Thus, effectively, the elements of the vector are rotated.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Rotate_3.htm">Rotate(<span id="LST1E44DE20_1302"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1302?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1303"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1303?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Shifts the element of this vector by moving them from index i to index i+<span class="code">increment</span>.
            The elements at the end of the vector are wrapped back to the start of the vector. Thus, effectively, the elements of the vector are rotated.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Rotate.htm">Rotate(IVector<span id="LST1E44DE20_1304"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1304?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1305"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1305?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Shifts the element of this vector by moving them from index i to index i+<span class="code">increment</span>.
            The elements at the end of the vector are wrapped back to the start of the vector. Thus, effectively, the elements of the vector are rotated.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Rotate_1.htm">Rotate(IVector<span id="LST1E44DE20_1306"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1306?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1307"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1307?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Shifts the element of this vector by moving them from index i to index i+<span class="code">increment</span>.
            The elements at the end of the vector are wrapped back to the start of the vector. Thus, effectively, the elements of the vector are rotated.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_Rotate_4.htm">Rotate(<span id="LST1E44DE20_1308"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1308?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1309"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1309?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Shifts the element of this vector by moving them from index i to index i+<span class="code">increment</span>.
            The elements at the end of the vector are wrapped back to the start of the vector. Thus, effectively, the elements of the vector are rotated.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_SetValues__1.htm">SetValues<span id="LST1E44DE20_1310"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1310?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1E44DE20_1311"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1311?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_SumOfSquaredDifferences_2.htm">SumOfSquaredDifferences(<span id="LST1E44DE20_1312"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1312?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1313"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1313?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1314"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1314?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1315"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1315?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the sum of squared differences of the elements of xarray and yarray.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_SumOfSquaredDifferences_3.htm">SumOfSquaredDifferences(<span id="LST1E44DE20_1316"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1316?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1317"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1317?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1318"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1318?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1319"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1319?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the sum of squared differences of the elements of xarray and yarray.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_SumOfSquaredDifferences.htm">SumOfSquaredDifferences(IReadOnlyList<span id="LST1E44DE20_1320"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1320?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1321"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1321?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1322"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1322?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1323"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1323?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the sum of squared differences of the elements of xarray and yarray.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_SumOfSquaredDifferences_1.htm">SumOfSquaredDifferences(IReadOnlyList<span id="LST1E44DE20_1324"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1324?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1325"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1325?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IReadOnlyList<span id="LST1E44DE20_1326"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1326?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1327"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1327?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns the sum of squared differences of the elements of xarray and yarray.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_SumOfSquaredDifferences_4.htm">SumOfSquaredDifferences(<span id="LST1E44DE20_1328"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1328?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1329"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1329?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1E44DE20_1330"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1330?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1331"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1331?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Returns the sum of squared differences of the elements of xarray and yarray.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1332"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1332?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1333"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1333?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Wraps a double[] array to get an  <span class="nolink">[!:IROVector&lt;double&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector_2.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1334"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1334?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int16<span id="LST1E44DE20_1335"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1335?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Wraps a Int16[] array to get an  <span class="nolink">[!:IROVector&lt;Int16&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector_4.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1336"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1336?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_1337"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1337?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Wraps a Int32[] array to get an  <span class="nolink">[!:IROVector&lt;Int32&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector_6.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1338"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1338?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>SByte<span id="LST1E44DE20_1339"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1339?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Wraps a SByte[] array to get an  <span class="nolink">[!:IROVector&lt;SByte&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector_8.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1340"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1340?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1341"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1341?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Wraps a float[] array to get an  <span class="nolink">[!:IROVector&lt;float&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector_1.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1342"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1342?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1343"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1343?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Wraps a double[] array till a given length to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector_3.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1344"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1344?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int16<span id="LST1E44DE20_1345"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1345?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Wraps a Int16[] array till a given length to get an <span class="nolink">[!:IROVector&lt;Int16&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector_5.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1346"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1346?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_1347"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1347?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Wraps a Int32[] array till a given length to get an <span class="nolink">[!:IROVector&lt;Int32&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector_7.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1348"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1348?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>SByte<span id="LST1E44DE20_1349"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1349?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Wraps a SByte[] array till a given length to get an <span class="nolink">[!:IROVector&lt;SByte&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToInverseROVector_9.htm">ToInverseROVector(IReadOnlyList<span id="LST1E44DE20_1350"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1350?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1351"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1351?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            Wraps a float[] array till a given length to get an <span class="nolink">[!:IROVector&lt;float&gt;]</span> with elements = 1 / elements of the original vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector.htm">ToRODoubleVector(<span id="LST1E44DE20_1352"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1352?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1353"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1353?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a double[] array to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector_2.htm">ToRODoubleVector(<span id="LST1E44DE20_1354"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1354?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1355"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1355?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a Int16[] array to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector_4.htm">ToRODoubleVector(<span id="LST1E44DE20_1356"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1356?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1357"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1357?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a Int32[] array to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector_6.htm">ToRODoubleVector(<span id="LST1E44DE20_1358"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1358?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1359"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1359?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a SByte[] array to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector_8.htm">ToRODoubleVector(<span id="LST1E44DE20_1360"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1360?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1361"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1361?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a float[] array to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector_1.htm">ToRODoubleVector(<span id="LST1E44DE20_1362"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1362?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1363"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1363?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a double[] array till a given length to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector_3.htm">ToRODoubleVector(<span id="LST1E44DE20_1364"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1364?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1365"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1365?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a Int16[] array till a given length to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector_5.htm">ToRODoubleVector(<span id="LST1E44DE20_1366"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1366?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1367"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1367?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a Int32[] array till a given length to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector_7.htm">ToRODoubleVector(<span id="LST1E44DE20_1368"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1368?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1369"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1369?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a SByte[] array till a given length to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToRODoubleVector_9.htm">ToRODoubleVector(<span id="LST1E44DE20_1370"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1370?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1371"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1371?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a float[] array till a given length to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_5.htm">ToROVector(<span id="LST1E44DE20_1372"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1372?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1373"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1373?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a double[] array to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_8.htm">ToROVector(<span id="LST1E44DE20_1374"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1374?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1375"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1375?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a Int16[] array to get an <span class="nolink">[!:IROVector&lt;Int16&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_11.htm">ToROVector(<span id="LST1E44DE20_1376"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1376?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1377"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1377?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a Int32[] array to get an <span class="nolink">[!:IROVector&lt;Int32&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_14.htm">ToROVector(<span id="LST1E44DE20_1378"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1378?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1379"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1379?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a SByte[] array to get an <span class="nolink">[!:IROVector&lt;SByte&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_17.htm">ToROVector(<span id="LST1E44DE20_1380"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1380?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1381"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1381?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps a float[] array to get an <span class="nolink">[!:IROVector&lt;float&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_6.htm">ToROVector(<span id="LST1E44DE20_1382"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1382?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1383"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1383?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a double[] array till a given length to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_9.htm">ToROVector(<span id="LST1E44DE20_1384"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1384?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1385"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1385?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a Int16[] array till a given length to get an <span class="nolink">[!:IROVector&lt;Int16&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_12.htm">ToROVector(<span id="LST1E44DE20_1386"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1386?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1387"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1387?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a Int32[] array till a given length to get an <span class="nolink">[!:IROVector&lt;Int32&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_15.htm">ToROVector(<span id="LST1E44DE20_1388"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1388?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1389"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1389?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a SByte[] array till a given length to get an <span class="nolink">[!:IROVector&lt;SByte&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_18.htm">ToROVector(<span id="LST1E44DE20_1390"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1390?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1391"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1391?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps a float[] array till a given length to get an <span class="nolink">[!:IROVector&lt;float&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_7.htm">ToROVector(<span id="LST1E44DE20_1392"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1392?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1393"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1393?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps an array to an <span class="nolink">[!:IROVector&lt;double&gt;]</span>. Start and length of the used section of the array are specified in the parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_10.htm">ToROVector(<span id="LST1E44DE20_1394"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1394?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1395"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1395?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps an array to an <span class="nolink">[!:IROVector&lt;Int16&gt;]</span>. Start and length of the used section of the array are specified in the parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_13.htm">ToROVector(<span id="LST1E44DE20_1396"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1396?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1397"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1397?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps an array to an <span class="nolink">[!:IROVector&lt;Int32&gt;]</span>. Start and length of the used section of the array are specified in the parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector.htm">ToROVector(IReadOnlyList<span id="LST1E44DE20_1398"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1398?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1399"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1399?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_1.htm">ToROVector(IReadOnlyList<span id="LST1E44DE20_1400"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1400?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int16<span id="LST1E44DE20_1401"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1401?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_2.htm">ToROVector(IReadOnlyList<span id="LST1E44DE20_1402"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1402?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_1403"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1403?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_3.htm">ToROVector(IReadOnlyList<span id="LST1E44DE20_1404"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1404?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>SByte<span id="LST1E44DE20_1405"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1405?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_4.htm">ToROVector(IReadOnlyList<span id="LST1E44DE20_1406"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1406?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1407"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1407?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_16.htm">ToROVector(<span id="LST1E44DE20_1408"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1408?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1409"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1409?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps an array to an <span class="nolink">[!:IROVector&lt;SByte&gt;]</span>. Start and length of the used section of the array are specified in the parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVector_19.htm">ToROVector(<span id="LST1E44DE20_1410"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1410?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1411"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1411?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps an array to an <span class="nolink">[!:IROVector&lt;float&gt;]</span>. Start and length of the used section of the array are specified in the parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1412"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1412?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1413"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1413?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, Int32, Double, Int32)</a></td><td><div class="summary">
            Wraps a double[] array to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted_2.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1414"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1414?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1415"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1415?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int16, Int32, Int16, Int32)</a></td><td><div class="summary">
            Wraps a Int16[] array to get an <span class="nolink">[!:IROVector&lt;Int16&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted_4.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1416"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1416?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1417"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1417?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Wraps a Int32[] array to get an <span class="nolink">[!:IROVector&lt;Int32&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted_7.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1418"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1418?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1419"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1419?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, SByte, Int32, SByte, Int32)</a></td><td><div class="summary">
            Wraps a SByte[] array to get an <span class="nolink">[!:IROVector&lt;SByte&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted_9.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1420"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1420?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1421"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1421?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Single, Int32, Single, Int32)</a></td><td><div class="summary">
            Wraps a float[] array to get an <span class="nolink">[!:IROVector&lt;float&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted_1.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1422"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1422?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1423"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1423?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Double, Int32, Double, Int32)</a></td><td><div class="summary">
            Wraps a double[] array till a given length to get an <span class="nolink">[!:IROVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted_3.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1424"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1424?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1425"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1425?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int16, Int32, Int16, Int32)</a></td><td><div class="summary">
            Wraps a Int16[] array till a given length to get an <span class="nolink">[!:IROVector&lt;Int16&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted_5.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1426"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1426?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1427"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1427?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Wraps a Int32[] array till a given length to get an <span class="nolink">[!:IROVector&lt;Int32&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted_6.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1428"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1428?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1429"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1429?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, SByte, Int32, SByte, Int32)</a></td><td><div class="summary">
            Wraps a SByte[] array till a given length to get an <span class="nolink">[!:IROVector&lt;SByte&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorAmendedShifted_8.htm">ToROVectorAmendedShifted(<span id="LST1E44DE20_1430"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1430?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1431"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1431?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Single, Int32, Single, Int32)</a></td><td><div class="summary">
            Wraps a float[] array till a given length to get an <span class="nolink">[!:IROVector&lt;float&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1432"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1432?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1433"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1433?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, Double)</a></td><td><div class="summary">
            Wraps a double[] array to get a struct with an <span class="nolink">[!:IROVector&lt;double&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above Length, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted_2.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1434"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1434?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1435"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1435?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int16, Int16)</a></td><td><div class="summary">
            Wraps a Int16[] array to get a struct with an <span class="nolink">[!:IROVector&lt;Int16&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above Length, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted_4.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1436"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1436?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1437"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1437?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a Int32[] array to get a struct with an <span class="nolink">[!:IROVector&lt;Int32&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above Length, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted_7.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1438"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1438?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1439"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1439?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, SByte, SByte)</a></td><td><div class="summary">
            Wraps a SByte[] array to get a struct with an <span class="nolink">[!:IROVector&lt;SByte&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above Length, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted_9.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1440"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1440?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1441"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1441?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Single, Single)</a></td><td><div class="summary">
            Wraps a float[] array to get a struct with an <span class="nolink">[!:IROVector&lt;float&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above Length, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted_1.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1442"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1442?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1443"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1443?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Double, Double)</a></td><td><div class="summary">
            Wraps a double[] array till a given length to get a struct with an <span class="nolink">[!:IROVector&lt;double&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above <span class="parameter">usedlength</span>, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted_3.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1444"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1444?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1445"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1445?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int16, Int16)</a></td><td><div class="summary">
            Wraps a Int16[] array till a given length to get a struct with an <span class="nolink">[!:IROVector&lt;Int16&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above <span class="parameter">usedlength</span>, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted_5.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1446"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1446?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1447"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1447?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, Int32)</a></td><td><div class="summary">
            Wraps a Int32[] array till a given length to get a struct with an <span class="nolink">[!:IROVector&lt;Int32&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above <span class="parameter">usedlength</span>, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted_6.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1448"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1448?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1449"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1449?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, SByte, SByte)</a></td><td><div class="summary">
            Wraps a SByte[] array till a given length to get a struct with an <span class="nolink">[!:IROVector&lt;SByte&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above <span class="parameter">usedlength</span>, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToROVectorStructAmendedUnshifted_8.htm">ToROVectorStructAmendedUnshifted(<span id="LST1E44DE20_1450"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1450?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1451"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1451?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Single, Single)</a></td><td><div class="summary">
            Wraps a float[] array till a given length to get a struct with an <span class="nolink">[!:IROVector&lt;float&gt;]</span> implementation. The wrapping is done lazily, i.e. you can access elements with indices below zero and
            above <span class="parameter">usedlength</span>, which is normally forbidden. The values for that are given as parameters.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_5.htm">ToVector(<span id="LST1E44DE20_1452"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1452?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1453"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1453?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps an array to get an <span class="nolink">[!:IVector&lt;double&gt;]</span></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_8.htm">ToVector(<span id="LST1E44DE20_1454"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1454?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1455"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1455?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps an array to get an <a href="T_Altaxo_Calc_LinearAlgebra_IVector_1.htm">IVector<span id="LST1E44DE20_1456"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1456?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1E44DE20_1457"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1457?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_11.htm">ToVector(<span id="LST1E44DE20_1458"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1458?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1459"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1459?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps an array to get an <a href="T_Altaxo_Calc_LinearAlgebra_IVector_1.htm">IVector<span id="LST1E44DE20_1460"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1460?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1E44DE20_1461"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1461?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_14.htm">ToVector(<span id="LST1E44DE20_1462"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1462?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1463"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1463?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps an array to get an <a href="T_Altaxo_Calc_LinearAlgebra_IVector_1.htm">IVector<span id="LST1E44DE20_1464"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1464?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1E44DE20_1465"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1465?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_17.htm">ToVector(<span id="LST1E44DE20_1466"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1466?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1467"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1467?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Wraps an array to get an <span class="nolink">[!:IVector&lt;float&gt;]</span></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_6.htm">ToVector(<span id="LST1E44DE20_1468"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1468?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1469"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1469?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps an array to get an <span class="nolink">[!:IVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_9.htm">ToVector(<span id="LST1E44DE20_1470"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1470?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1471"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1471?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps an array to get an <a href="T_Altaxo_Calc_LinearAlgebra_IVector_1.htm">IVector<span id="LST1E44DE20_1472"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1472?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1E44DE20_1473"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1473?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_12.htm">ToVector(<span id="LST1E44DE20_1474"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1474?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1475"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1475?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps an array to get an <a href="T_Altaxo_Calc_LinearAlgebra_IVector_1.htm">IVector<span id="LST1E44DE20_1476"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1476?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1E44DE20_1477"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1477?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_15.htm">ToVector(<span id="LST1E44DE20_1478"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1478?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1479"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1479?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps an array to get an <a href="T_Altaxo_Calc_LinearAlgebra_IVector_1.htm">IVector<span id="LST1E44DE20_1480"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1480?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1E44DE20_1481"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1481?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_18.htm">ToVector(<span id="LST1E44DE20_1482"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1482?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1483"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1483?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
            Wraps an array to get an <span class="nolink">[!:IVector&lt;float&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_7.htm">ToVector(<span id="LST1E44DE20_1484"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1484?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1485"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1485?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an array to get a <span class="nolink">[!:IVector&lt;double&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_10.htm">ToVector(<span id="LST1E44DE20_1486"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1486?cpp=array&lt;");</script>Int16<span id="LST1E44DE20_1487"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1487?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an array to get a <a href="T_Altaxo_Calc_LinearAlgebra_IVector_1.htm">IVector<span id="LST1E44DE20_1488"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1488?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1E44DE20_1489"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1489?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_13.htm">ToVector(<span id="LST1E44DE20_1490"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1490?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1491"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1491?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an array to get a <a href="T_Altaxo_Calc_LinearAlgebra_IVector_1.htm">IVector<span id="LST1E44DE20_1492"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1492?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1E44DE20_1493"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1493?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector.htm">ToVector(IVector<span id="LST1E44DE20_1494"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1494?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1495"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1495?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_1.htm">ToVector(IVector<span id="LST1E44DE20_1496"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1496?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int16<span id="LST1E44DE20_1497"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1497?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_2.htm">ToVector(IVector<span id="LST1E44DE20_1498"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1498?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST1E44DE20_1499"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1499?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_3.htm">ToVector(IVector<span id="LST1E44DE20_1500"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1500?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>SByte<span id="LST1E44DE20_1501"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1501?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_4.htm">ToVector(IVector<span id="LST1E44DE20_1502"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1502?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1503"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1503?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an original vector into a new vector.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_16.htm">ToVector(<span id="LST1E44DE20_1504"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1504?cpp=array&lt;");</script>SByte<span id="LST1E44DE20_1505"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1505?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an array to get a <a href="T_Altaxo_Calc_LinearAlgebra_IVector_1.htm">IVector<span id="LST1E44DE20_1506"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1506?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST1E44DE20_1507"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1507?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToVector_19.htm">ToVector(<span id="LST1E44DE20_1508"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1508?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1509"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1509?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Wraps a section of an array to get a <span class="nolink">[!:IVector&lt;float&gt;]</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMean_2.htm">ToZeroMean(<span id="LST1E44DE20_1510"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1510?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1511"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1511?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMean_3.htm">ToZeroMean(<span id="LST1E44DE20_1512"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1512?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1513"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1513?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMean.htm">ToZeroMean(IVector<span id="LST1E44DE20_1514"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1514?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1515"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1515?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMean_1.htm">ToZeroMean(IVector<span id="LST1E44DE20_1516"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1516?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1517"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1517?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMean_4.htm">ToZeroMean(<span id="LST1E44DE20_1518"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1518?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1519"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1519?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMeanAndUnitVariance_2.htm">ToZeroMeanAndUnitVariance(<span id="LST1E44DE20_1520"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1520?cpp=array&lt;");</script>Double<span id="LST1E44DE20_1521"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1521?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMeanAndUnitVariance_3.htm">ToZeroMeanAndUnitVariance(<span id="LST1E44DE20_1522"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1522?cpp=array&lt;");</script>Int32<span id="LST1E44DE20_1523"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1523?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMeanAndUnitVariance.htm">ToZeroMeanAndUnitVariance(IVector<span id="LST1E44DE20_1524"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1524?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1E44DE20_1525"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1525?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMeanAndUnitVariance_1.htm">ToZeroMeanAndUnitVariance(IVector<span id="LST1E44DE20_1526"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1526?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Single<span id="LST1E44DE20_1527"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1527?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_LinearAlgebra_VectorMath_ToZeroMeanAndUnitVariance_4.htm">ToZeroMeanAndUnitVariance(<span id="LST1E44DE20_1528"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1528?cpp=array&lt;");</script>Single<span id="LST1E44DE20_1529"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1E44DE20_1529?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Normalizes the vector elements so that the mean of the elements is zero.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Altaxo_Calc_LinearAlgebra.htm">Altaxo.Calc.LinearAlgebra Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Altaxo can be downloaded from <a href="https://sourceforge.net/projects/altaxo/files/Altaxo/">SourceForge</a>. Source code available on <a href="https://github.com/Altaxo/Altaxo">Github</a>.
<br /><a href="https://sourceforge.net/u/dlellinger/profile/">(C) Dr. Dirk Lellinger 2002 - <script>document.write(new Date().getFullYear()); </script></a><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dlellinger%40users.sourceforge.net?Subject=Altaxo%20user%20manual%20and%20class%20reference">dlellinger@users.sourceforge.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>