<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>EnumerableExtensions Methods</title><meta name="Title" content="EnumerableExtensions Methods" /><meta name="Microsoft.Help.Id" content="Methods.T:Altaxo.Collections.EnumerableExtensions" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="EnumerableExtensions class, methods" /><meta name="container" content="Altaxo.Collections" /><meta name="file" content="Methods_T_Altaxo_Collections_EnumerableExtensions" /><meta name="guid" content="Methods_T_Altaxo_Collections_EnumerableExtensions" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Altaxo user manual and class reference<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1B7FE024E7E614BFA13DAA1FD005CB2E.htm" title="Altaxo user manual and class reference" tocid="roottoc">Altaxo user manual and class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Altaxo class reference" tocid="R_Project_Documentation">Altaxo class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo.htm" title="Altaxo Namespaces" tocid="G_Altaxo">Altaxo Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo_Collections.htm" title="Altaxo.Collections Namespaces" tocid="G_Altaxo_Collections">Altaxo.Collections Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Altaxo_Collections.htm" title="Altaxo.Collections" tocid="N_Altaxo_Collections">Altaxo.Collections</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Collections_EnumerableExtensions.htm" title="EnumerableExtensions Class" tocid="T_Altaxo_Collections_EnumerableExtensions">EnumerableExtensions Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Altaxo_Collections_EnumerableExtensions.htm" title="EnumerableExtensions Methods" tocid="Methods_T_Altaxo_Collections_EnumerableExtensions">EnumerableExtensions Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Collections_EnumerableExtensions_AreStructurallyEqual.htm" title="AreStructurallyEqual Method" tocid="Overload_Altaxo_Collections_EnumerableExtensions_AreStructurallyEqual">AreStructurallyEqual Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_AsEnumerable__1.htm" title="AsEnumerable&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_AsEnumerable__1">AsEnumerable&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_DisposeElements.htm" title="DisposeElements Method" tocid="M_Altaxo_Collections_EnumerableExtensions_DisposeElements">DisposeElements Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_Empty__1.htm" title="Empty&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_Empty__1">Empty&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_EquallySpacedByStartStepCount.htm" title="EquallySpacedByStartStepCount Method" tocid="M_Altaxo_Collections_EnumerableExtensions_EquallySpacedByStartStepCount">EquallySpacedByStartStepCount Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_FirstOr__1.htm" title="FirstOr&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_FirstOr__1">FirstOr&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Collections_EnumerableExtensions_FlattenFromRootToLeaves.htm" title="FlattenFromRootToLeaves Method" tocid="Overload_Altaxo_Collections_EnumerableExtensions_FlattenFromRootToLeaves">FlattenFromRootToLeaves Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_ForEachDo__1.htm" title="ForEachDo&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_ForEachDo__1">ForEachDo&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Collections_EnumerableExtensions_GetDifferences.htm" title="GetDifferences Method" tocid="Overload_Altaxo_Collections_EnumerableExtensions_GetDifferences">GetDifferences Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_HasSingleElement__1.htm" title="HasSingleElement&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_HasSingleElement__1">HasSingleElement&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_IndexOfMax__1.htm" title="IndexOfMax&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_IndexOfMax__1">IndexOfMax&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_IndexOfMin__1.htm" title="IndexOfMin&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_IndexOfMin__1">IndexOfMin&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Collections_EnumerableExtensions_IndicesInt32AndValuesWhere.htm" title="IndicesInt32AndValuesWhere Method" tocid="Overload_Altaxo_Collections_EnumerableExtensions_IndicesInt32AndValuesWhere">IndicesInt32AndValuesWhere Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Collections_EnumerableExtensions_IndicesInt32Where.htm" title="IndicesInt32Where Method" tocid="Overload_Altaxo_Collections_EnumerableExtensions_IndicesInt32Where">IndicesInt32Where Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_IndicesOfMinMax__1.htm" title="IndicesOfMinMax&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_IndicesOfMinMax__1">IndicesOfMinMax&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_IsEmpty__1.htm" title="IsEmpty&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_IsEmpty__1">IsEmpty&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Collections_EnumerableExtensions_JoinConditional.htm" title="JoinConditional Method" tocid="Overload_Altaxo_Collections_EnumerableExtensions_JoinConditional">JoinConditional Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_LastOr__1.htm" title="LastOr&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_LastOr__1">LastOr&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_MaxElement__2.htm" title="MaxElement&lt;T, M&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_MaxElement__2">MaxElement&lt;T, M&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Collections_EnumerableExtensions_MaxOrDefault.htm" title="MaxOrDefault Method" tocid="Overload_Altaxo_Collections_EnumerableExtensions_MaxOrDefault">MaxOrDefault Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_MinOrDefault__1.htm" title="MinOrDefault&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_MinOrDefault__1">MinOrDefault&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_RangeDouble.htm" title="RangeDouble Method" tocid="M_Altaxo_Collections_EnumerableExtensions_RangeDouble">RangeDouble Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_TakeAllButLast__1.htm" title="TakeAllButLast&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_TakeAllButLast__1">TakeAllButLast&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_TakeFromUpperIndexExclusiveDownToLowerIndexInclusive__1.htm" title="TakeFromUpperIndexExclusiveDownToLowerIndexInclusive&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_TakeFromUpperIndexExclusiveDownToLowerIndexInclusive__1">TakeFromUpperIndexExclusiveDownToLowerIndexInclusive&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_TakeFromUpperIndexInclusiveDownToLowerIndexInclusive__1.htm" title="TakeFromUpperIndexInclusiveDownToLowerIndexInclusive&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_TakeFromUpperIndexInclusiveDownToLowerIndexInclusive__1">TakeFromUpperIndexInclusiveDownToLowerIndexInclusive&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_ThisOrEmpty__1.htm" title="ThisOrEmpty&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_ThisOrEmpty__1">ThisOrEmpty&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_TryGetFirstAndLast__1.htm" title="TryGetFirstAndLast&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_TryGetFirstAndLast__1">TryGetFirstAndLast&lt;T&gt; Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Collections_EnumerableExtensions_TryGetSingleElement__1.htm" title="TryGetSingleElement&lt;T&gt; Method" tocid="M_Altaxo_Collections_EnumerableExtensions_TryGetSingleElement__1">TryGetSingleElement&lt;T&gt; Method</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Enumerable<wbr />Extensions Methods</h1></td></tr></table><p>The <a href="T_Altaxo_Collections_EnumerableExtensions.htm">EnumerableExtensions</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBDA')" onkeypress="SectionExpandCollapse_CheckKey('IDBDA', event)" tabindex="0"><img id="IDBDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDBDASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_AreStructurallyEqual__1.htm">AreStructurallyEqual<span id="LSTD256AE35_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTD256AE35_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Determines whether two enumerations are structural equivalent. They are structurally equivalent if i) both enumerations are null, ii) both enumerations are empty,
            or c) both enumerations have the same number of elements and contain the same elements in the same order.
            Please not that if one enumeration is null and the other is empty, they are not considered equivalent.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_AreStructurallyEqual__1_1.htm">AreStructurallyEqual<span id="LSTD256AE35_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTD256AE35_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTD256AE35_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Determines whether two enumerations are structural equivalent. They are structural equivalent if i) both enumerations are null, ii) both enumerations are empty,
            or c) both enumerations have the same number of elements and contain the same elements in the same order.
            Please not that if one enumeration is null and the other is empty, they are not considered equivalent.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_AsEnumerable__1.htm">AsEnumerable<span id="LSTD256AE35_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Presents the argument as IEnumerable with one element.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_DisposeElements.htm">DisposeElements</a></td><td>
            Disposes all elements of the enumeration.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_Empty__1.htm">Empty<span id="LSTD256AE35_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns an empty enumeration of T.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_EquallySpacedByStartStepCount.htm">EquallySpacedByStartStepCount</a></td><td>
            Gets an enumeration where the elements are given by start + i * step, i=[0, count-1].
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_FirstOr__1.htm">FirstOr<span id="LSTD256AE35_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the first value of the enumeration, or, if the enumeration is empty, the other value provided in the arguments.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_FlattenFromRootToLeaves__1.htm">FlattenFromRootToLeaves<span id="LSTD256AE35_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTD256AE35_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, IEnumerable<span id="LSTD256AE35_25" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_26" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTD256AE35_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Converts a recursive data structure into a flat list. The root element is enumerated before its corresponding child element(s).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_FlattenFromRootToLeaves__1_1.htm">FlattenFromRootToLeaves<span id="LSTD256AE35_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T, Func<span id="LSTD256AE35_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, IEnumerable<span id="LSTD256AE35_31" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_32" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTD256AE35_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Converts a recursive data structure into a flat list. The root element is enumerated before its corresponding child element(s).
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_ForEachDo__1.htm">ForEachDo<span id="LSTD256AE35_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Executes an action for each element of the sequence.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_GetDifferences.htm">GetDifferences(IEnumerable<span id="LSTD256AE35_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LSTD256AE35_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets the differences x[i+1] - x[i], for i = 0 .. x.Count-2.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_GetDifferences_1.htm">GetDifferences(ReadOnlyMemory<span id="LSTD256AE35_38" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LSTD256AE35_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Gets the differences x[i+1] - x[i], for i = 0 .. x.Count-2.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_HasSingleElement__1.htm">HasSingleElement<span id="LSTD256AE35_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the specified enumeration has exactly one element.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_IndexOfMax__1.htm">IndexOfMax<span id="LSTD256AE35_42" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>Return the index of the element with the maximum value in an enumerable.
            If multiple elements with the same minimal value exist, the index of the first element in the sequence is returned.</td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_IndexOfMin__1.htm">IndexOfMin<span id="LSTD256AE35_44" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_45" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>Return the index of the element with the minimum value in an enumerable.
            If multiple elements with the same minimal value exist, the index of the first element in the sequence is returned.</td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_IndicesInt32AndValuesWhere__1.htm">IndicesInt32AndValuesWhere<span id="LSTD256AE35_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_48" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTD256AE35_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Boolean<span id="LSTD256AE35_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns tuples of index and element of all elements in an enumeration which fullfill a given condition, given by the element's value.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_IndicesInt32AndValuesWhere__1_1.htm">IndicesInt32AndValuesWhere<span id="LSTD256AE35_52" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_53" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_54" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTD256AE35_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, T, Boolean<span id="LSTD256AE35_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns tuples of index and element of all elements in an enumeration which fullfill a given condition, given by the element's value and its index.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_IndicesInt32Where__1.htm">IndicesInt32Where<span id="LSTD256AE35_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_60" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_61" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTD256AE35_62" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Boolean<span id="LSTD256AE35_63" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the indices of the elements which fullfill a given condition, given by the element's value.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_IndicesInt32Where__1_1.htm">IndicesInt32Where<span id="LSTD256AE35_64" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_65" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_66" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_67" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTD256AE35_68" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, T, Boolean<span id="LSTD256AE35_69" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the indices of the elements which fullfill a given condition, given by the element's value and its index.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_IndicesOfMinMax__1.htm">IndicesOfMinMax<span id="LSTD256AE35_70" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_71" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>Return the index of the element with the minimum value in an enumerable.
            If multiple elements with the same minimal value exist, the index of the first element in the sequence is returned.</td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_IsEmpty__1.htm">IsEmpty<span id="LSTD256AE35_72" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_73" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the specified enumeration is empty.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_JoinConditional__2.htm">JoinConditional<span id="LSTD256AE35_74" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2<span id="LSTD256AE35_75" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_76" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTD256AE35_77" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTD256AE35_78" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTD256AE35_79" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTD256AE35_80" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, Boolean<span id="LSTD256AE35_81" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Takes a join of two sequences, but only takes into account those pair, which fulfill a given condition.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_JoinConditional__3.htm">JoinConditional<span id="LSTD256AE35_82" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, TResult<span id="LSTD256AE35_83" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_84" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTD256AE35_85" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTD256AE35_86" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTD256AE35_87" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTD256AE35_88" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, Boolean<span id="LSTD256AE35_89" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTD256AE35_90" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, TResult<span id="LSTD256AE35_91" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Takes a join of two sequences, but only takes into account those pair, which fulfill a given condition.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_LastOr__1.htm">LastOr<span id="LSTD256AE35_92" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_93" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the last value of the enumeration, or, if the enumeration is empty, the other value provided in the arguments.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_MaxElement__2.htm">MaxElement<span id="LSTD256AE35_94" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, M<span id="LSTD256AE35_95" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Gets the element of a IEnumerabe that evaluates by means of a conversion function to the maximal value.
            This is different from Select(x =&gt; conversion(x)).Max() insofar as it not returns the maximum value, but the original element x which converts to the maximum value.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_MaxOrDefault__1.htm">MaxOrDefault<span id="LSTD256AE35_96" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_97" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_98" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_99" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, T)</a></td><td>
            Evaluates the maximum of a enumeration of elements, or returns a default value if the series is empty.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_MaxOrDefault__2.htm">MaxOrDefault<span id="LSTD256AE35_100" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, M<span id="LSTD256AE35_101" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTD256AE35_102" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_103" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTD256AE35_104" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, M<span id="LSTD256AE35_105" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, M)</a></td><td>
            Evaluates the maximum of a enumeration of elements, or returns a default value if the series is empty.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_MinOrDefault__1.htm">MinOrDefault<span id="LSTD256AE35_106" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_107" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Evaluates the minimum of a enumeration of elements, or returns a default value if the series is empty.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_RangeDouble.htm">RangeDouble</a></td><td> </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_TakeAllButLast__1.htm">TakeAllButLast<span id="LSTD256AE35_108" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_109" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Takes all elements of the enumeration except the last element.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_TakeFromUpperIndexExclusiveDownToLowerIndexInclusive__1.htm">TakeFromUpperIndexExclusiveDownToLowerIndexInclusive<span id="LSTD256AE35_110" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_111" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Takes all elements of a list, starting from index <span class="parameter">upperIndexExclusive</span> - 1 down to the index <span class="parameter">lowerIndexInclusive</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_TakeFromUpperIndexInclusiveDownToLowerIndexInclusive__1.htm">TakeFromUpperIndexInclusiveDownToLowerIndexInclusive<span id="LSTD256AE35_112" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_113" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Takes all elements of a list, starting from index <span class="parameter">upperIndexInclusive</span> down to the index <span class="parameter">lowerIndexInclusive</span>.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_ThisOrEmpty__1.htm">ThisOrEmpty<span id="LSTD256AE35_114" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_115" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns either the provided enumeration, or if it is null, an empty enumeration.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_TryGetFirstAndLast__1.htm">TryGetFirstAndLast<span id="LSTD256AE35_116" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_117" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns true and the first and last value of the enumeration, or, if the enumeration is empty, returns false.
            </td></tr><tr><td><img src="../icons/pubExtension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Altaxo_Collections_EnumerableExtensions_TryGetSingleElement__1.htm">TryGetSingleElement<span id="LSTD256AE35_118" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD256AE35_119" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Try to get the one and only element of the collection.
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_Altaxo_Collections_EnumerableExtensions.htm">EnumerableExtensions Class</a></div><div><a href="N_Altaxo_Collections.htm">Altaxo.Collections Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter">Altaxo can be downloaded from <a href="https://sourceforge.net/projects/altaxo/files/Altaxo/">SourceForge</a>. Source code available on <a href="https://github.com/Altaxo/Altaxo">Github</a>.
<br /><a href="https://sourceforge.net/u/dlellinger/profile/">(C) Dr. Dirk Lellinger and all contributors to the source code 2002 - <script>document.write(new Date().getFullYear()); </script></a><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dlellinger%40users.sourceforge.net?Subject=Altaxo%20user%20manual%20and%20class%20reference">dlellinger@users.sourceforge.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>