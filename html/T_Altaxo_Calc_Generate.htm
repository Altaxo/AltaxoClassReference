<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Generate Class</title><meta name="Title" content="Generate Class" /><meta name="Microsoft.Help.Id" content="T:Altaxo.Calc.Generate" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Altaxo.Calc.Generate class" /><meta name="System.Keywords" content="Generate class" /><meta name="Microsoft.Help.F1" content="Altaxo.Calc.Generate" /><meta name="Microsoft.Help.F1" content="Generate" /><meta name="container" content="Altaxo.Calc" /><meta name="file" content="T_Altaxo_Calc_Generate" /><meta name="guid" content="T_Altaxo_Calc_Generate" /><meta name="Description" content="summaryT:Altaxo.Calc." /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Altaxo user manual and class reference<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1B7FE024E7E614BFA13DAA1FD005CB2E.htm" title="Altaxo user manual and class reference" tocid="roottoc">Altaxo user manual and class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Altaxo class reference" tocid="R_Project_Documentation">Altaxo class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo.htm" title="Altaxo Namespaces" tocid="G_Altaxo">Altaxo Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo_Calc.htm" title="Altaxo.Calc Namespaces" tocid="G_Altaxo_Calc">Altaxo.Calc Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Altaxo_Calc.htm" title="Altaxo.Calc" tocid="N_Altaxo_Calc">Altaxo.Calc</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Generate.htm" title="Generate Class" tocid="T_Altaxo_Calc_Generate">Generate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Altaxo_Calc_Generate.htm" title="Generate Methods" tocid="Methods_T_Altaxo_Calc_Generate">Generate Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Generate Class</h1></td></tr></table><div class="summary"><p class="missing">[Missing &lt;summary&gt; documentation for "T:Altaxo.Calc.Generate"]</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST27A8C5C4_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <span class="selflink">Altaxo.Calc<span id="LST27A8C5C4_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Generate</span><br /></div><br /><strong>Namespace:</strong> <a href="N_Altaxo_Calc.htm">Altaxo.Calc</a><br /><strong>Assembly:</strong> AltaxoCore (in AltaxoCore.dll) Version: 4.8.3261.0 (4.8.3261.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Generate</span></pre></div></div></div></div><p>The <span class="selflink">Generate</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAEA')" onkeypress="SectionExpandCollapse_CheckKey('IDAEA', event)" tabindex="0"><img id="IDAEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDAEASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Fibonacci.htm">Fibonacci</a></td><td>
            Generate a Fibonacci sequence, including zero as first value.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_FibonacciSequence.htm">FibonacciSequence</a></td><td>
            Generate an infinite Fibonacci sequence, including zero as first value.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Impulse.htm">Impulse</a></td><td>
            Create a Kronecker Delta impulse sample vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_ImpulseSequence.htm">ImpulseSequence</a></td><td>
            Create a Kronecker Delta impulse sample vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LinearRange_1.htm">LinearRange(Int32, Int32)</a></td><td>
            Generate a linearly spaced sample vector within the inclusive interval (start, stop) and step 1.
            Equivalent to MATLAB colon operator (:).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LinearRange.htm">LinearRange(Double, Double, Double)</a></td><td>
            Generate a linearly spaced sample vector within the inclusive interval (start, stop) and the provide step.
            The start value is aways included as first value, but stop is only included if it stop-start is a multiple of step.
            Equivalent to MATLAB double colon operator (::).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LinearRange_2.htm">LinearRange(Int32, Int32, Int32)</a></td><td>
            Generate a linearly spaced sample vector within the inclusive interval (start, stop) and the provided step.
            The start value is aways included as first value, but stop is only included if it stop-start is a multiple of step.
            Equivalent to MATLAB double colon operator (::).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LinearRangeInt32.htm">LinearRangeInt32(Int32, Int32)</a></td><td>
            Generate a linearly spaced sample vector within the inclusive interval (start, stop) and step 1.
            Equivalent to MATLAB colon operator (:).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LinearRangeInt32_1.htm">LinearRangeInt32(Int32, Int32, Int32)</a></td><td>
            Generate a linearly spaced sample vector within the inclusive interval (start, stop) and the provided step.
            The start value is aways included as first value, but stop is only included if it stop-start is a multiple of step.
            Equivalent to MATLAB double colon operator (::).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LinearRangeMap__1.htm">LinearRangeMap<span id="LST27A8C5C4_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate samples by sampling a function at linearly spaced points within the inclusive interval (start, stop) and the provide step.
            The start value is aways included as first value, but stop is only included if it stop-start is a multiple of step.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LinearSpaced.htm">LinearSpaced</a></td><td>
            Generate a linearly spaced sample vector of the given length between the specified values (inclusive).
            Equivalent to MATLAB linspace but with the length as first instead of last argument.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LinearSpacedMap__1.htm">LinearSpacedMap<span id="LST27A8C5C4_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate samples by sampling a function at linearly spaced points between the specified values (inclusive).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LogSpaced.htm">LogSpaced</a></td><td>
            Generate a base 10 logarithmically spaced sample vector of the given length between the specified decade exponents (inclusive).
            Equivalent to MATLAB logspace but with the length as first instead of last argument.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_LogSpacedMap__1.htm">LogSpacedMap<span id="LST27A8C5C4_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate samples by sampling a function at base 10 logarithmically spaced points between the specified decade exponents (inclusive).
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Map__2.htm">Map<span id="LST27A8C5C4_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TA, T<span id="LST27A8C5C4_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate samples by sampling a function at the provided points.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Map2__3.htm">Map2<span id="LST27A8C5C4_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TA, TB, T<span id="LST27A8C5C4_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate samples by sampling a function at the provided points.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Map2Sequence__3.htm">Map2Sequence<span id="LST27A8C5C4_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TA, TB, T<span id="LST27A8C5C4_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate a sample sequence by sampling a function at the provided point sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_MapSequence__2.htm">MapSequence<span id="LST27A8C5C4_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TA, T<span id="LST27A8C5C4_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate a sample sequence by sampling a function at the provided point sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Normal.htm">Normal</a></td><td>
            Create samples with independent amplitudes of normal distribution and a flat spectral density.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_NormalSequence.htm">NormalSequence</a></td><td>
            Create an infinite sample sequence with independent amplitudes of normal distribution and a flat spectral density.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Periodic.htm">Periodic</a></td><td>
            Create a periodic wave.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_PeriodicImpulse.htm">PeriodicImpulse</a></td><td>
            Create a periodic Kronecker Delta impulse sample vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_PeriodicImpulseSequence.htm">PeriodicImpulseSequence</a></td><td>
            Create a Kronecker Delta impulse sample vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_PeriodicMap__1.htm">PeriodicMap<span id="LST27A8C5C4_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Create a periodic wave.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_PeriodicMapSequence__1.htm">PeriodicMapSequence<span id="LST27A8C5C4_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Create an infinite periodic wave sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_PeriodicSequence.htm">PeriodicSequence</a></td><td>
            Create an infinite periodic wave sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Random.htm">Random(IContinuousDistribution)</a></td><td>
            Create an infinite random sample sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Random_1.htm">Random(Int32, IContinuousDistribution)</a></td><td>
            Create random samples.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomComplex.htm">RandomComplex(IContinuousDistribution)</a></td><td>
            Create an infinite random sample sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomComplex_1.htm">RandomComplex(Int32, IContinuousDistribution)</a></td><td>
            Create random samples.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomComplex32.htm">RandomComplex32(IContinuousDistribution)</a></td><td>
            Create an infinite random sample sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomComplex32_1.htm">RandomComplex32(Int32, IContinuousDistribution)</a></td><td>
            Create random samples.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomMap__1.htm">RandomMap<span id="LST27A8C5C4_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate samples by sampling a function at samples from a probability distribution.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomMap2__1.htm">RandomMap2<span id="LST27A8C5C4_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate samples by sampling a function at sample pairs from a probability distribution.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomMap2Sequence__1.htm">RandomMap2Sequence<span id="LST27A8C5C4_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate a sample sequence by sampling a function at sample pairs from a probability distribution.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomMapSequence__1.htm">RandomMapSequence<span id="LST27A8C5C4_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate a sample sequence by sampling a function at samples from a probability distribution.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomSingle.htm">RandomSingle(IContinuousDistribution)</a></td><td>
            Create an infinite random sample sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RandomSingle_1.htm">RandomSingle(Int32, IContinuousDistribution)</a></td><td>
            Create random samples.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Repeat__1.htm">Repeat<span id="LST27A8C5C4_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Create an array with each field set to the same value.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_RepeatSequence__1.htm">RepeatSequence<span id="LST27A8C5C4_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Create an infinite sequence where each element has the same value.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Sawtooth.htm">Sawtooth</a></td><td>
            Create a periodic sawtooth wave, starting with the lowest sample.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_SawtoothSequence.htm">SawtoothSequence</a></td><td>
            Create an infinite periodic sawtooth wave sequence, starting with the lowest sample.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Sinusoidal.htm">Sinusoidal</a></td><td>
            Create a Sine wave.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_SinusoidalSequence.htm">SinusoidalSequence</a></td><td>
            Create an infinite Sine wave sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Square.htm">Square</a></td><td>
            Create a periodic square wave, starting with the high phase.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_SquareSequence.htm">SquareSequence</a></td><td>
            Create an infinite periodic square wave sequence, starting with the high phase.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Standard.htm">Standard</a></td><td>
            Create samples with independent amplitudes of standard distribution.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_StandardSequence.htm">StandardSequence</a></td><td>
            Create an infinite sample sequence with independent amplitudes of standard distribution.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Step.htm">Step</a></td><td>
            Create a Heaviside Step sample vector.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_StepSequence.htm">StepSequence</a></td><td>
            Create an infinite Heaviside Step sample sequence.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Triangle.htm">Triangle</a></td><td>
            Create a periodic triangle wave, starting with the raise phase from the lowest sample.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_TriangleSequence.htm">TriangleSequence</a></td><td>
            Create an infinite periodic triangle wave sequence, starting with the raise phase from the lowest sample.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Unfold__2.htm">Unfold<span id="LST27A8C5C4_32" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST27A8C5C4_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Int32, Func<span id="LST27A8C5C4_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, Tuple<span id="LST27A8C5C4_35" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST27A8C5C4_36" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST27A8C5C4_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TState)</a></td><td>
            Generate samples generated by the given computation.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Unfold__2_1.htm">Unfold<span id="LST27A8C5C4_38" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST27A8C5C4_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Int32, Func<span id="LST27A8C5C4_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, ValueTuple<span id="LST27A8C5C4_41" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST27A8C5C4_42" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST27A8C5C4_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TState)</a></td><td>
            Generate samples generated by the given computation.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_UnfoldSequence__2.htm">UnfoldSequence<span id="LST27A8C5C4_44" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST27A8C5C4_45" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST27A8C5C4_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, Tuple<span id="LST27A8C5C4_47" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST27A8C5C4_48" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST27A8C5C4_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TState)</a></td><td>
            Generate an infinite sequence generated by the given computation.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_UnfoldSequence__2_1.htm">UnfoldSequence<span id="LST27A8C5C4_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST27A8C5C4_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST27A8C5C4_52" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, ValueTuple<span id="LST27A8C5C4_53" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST27A8C5C4_54" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST27A8C5C4_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TState)</a></td><td>
            Generate an infinite sequence generated by the given computation.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_Uniform.htm">Uniform</a></td><td>
            Create random samples, uniform between 0 and 1.
            Faster than other methods but with reduced guarantees on randomness.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_UniformMap__1.htm">UniformMap<span id="LST27A8C5C4_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate samples by sampling a function at samples from a probability distribution, uniform between 0 and 1.
            Faster than other methods but with reduced guarantees on randomness.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_UniformMap2__1.htm">UniformMap2<span id="LST27A8C5C4_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate samples by sampling a function at sample pairs from a probability distribution, uniform between 0 and 1.
            Faster than other methods but with reduced guarantees on randomness.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_UniformMap2Sequence__1.htm">UniformMap2Sequence<span id="LST27A8C5C4_60" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_61" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate a sample sequence by sampling a function at sample pairs from a probability distribution, uniform between 0 and 1.
            Faster than other methods but with reduced guarantees on randomness.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_UniformMapSequence__1.htm">UniformMapSequence<span id="LST27A8C5C4_62" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST27A8C5C4_63" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generate a sample sequence by sampling a function at samples from a probability distribution, uniform between 0 and 1.
            Faster than other methods but with reduced guarantees on randomness.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Generate_UniformSequence.htm">UniformSequence</a></td><td>
            Create an infinite random sample sequence, uniform between 0 and 1.
            Faster than other methods but with reduced guarantees on randomness.
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="N_Altaxo_Calc.htm">Altaxo.Calc Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter">Altaxo can be downloaded from <a href="https://sourceforge.net/projects/altaxo/files/Altaxo/">SourceForge</a>. Source code available on <a href="https://github.com/Altaxo/Altaxo">Github</a>.
<br /><a href="https://sourceforge.net/u/dlellinger/profile/">(C) Dr. Dirk Lellinger and all contributors to the source code 2002 - <script>document.write(new Date().getFullYear()); </script></a><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dlellinger%40users.sourceforge.net?Subject=Altaxo%20user%20manual%20and%20class%20reference">dlellinger@users.sourceforge.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>