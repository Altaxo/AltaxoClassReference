<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Altaxo.Calc.Ode.DVode Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Altaxo.Calc.Ode.DVode namespace" /><meta name="Microsoft.Help.F1" content="Altaxo.Calc.Ode.DVode" /><meta name="Microsoft.Help.Id" content="N:Altaxo.Calc.Ode.DVode" /><meta name="Description" content="summaryN:Altaxo.Calc.Ode.DVode" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Altaxo.Calc.Ode.DVode" /><meta name="file" content="N_Altaxo_Calc_Ode_DVode" /><meta name="guid" content="N_Altaxo_Calc_Ode_DVode" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Altaxo user manual and class reference<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\1B7FE024E7E614BFA13DAA1FD005CB2E.htm" title="Altaxo user manual and class reference" tocid="roottoc">Altaxo user manual and class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Altaxo class reference" tocid="R_Project_Documentation">Altaxo class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo.htm" title="Altaxo Namespaces" tocid="G_Altaxo">Altaxo Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo_Calc.htm" title="Altaxo.Calc Namespaces" tocid="G_Altaxo_Calc">Altaxo.Calc Namespaces</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Altaxo_Calc_Ode_DVode.htm" title="Altaxo.Calc.Ode.DVode" tocid="N_Altaxo_Calc_Ode_DVode">Altaxo.Calc.Ode.DVode</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DACOPY.htm" title="DACOPY Class" tocid="T_Altaxo_Calc_Ode_DVode_DACOPY">DACOPY Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DAXPY.htm" title="DAXPY Class" tocid="T_Altaxo_Calc_Ode_DVode_DAXPY">DAXPY Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DCOPY.htm" title="DCOPY Class" tocid="T_Altaxo_Calc_Ode_DVode_DCOPY">DCOPY Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DDOT.htm" title="DDOT Class" tocid="T_Altaxo_Calc_Ode_DVode_DDOT">DDOT Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DEWSET.htm" title="DEWSET Class" tocid="T_Altaxo_Calc_Ode_DVode_DEWSET">DEWSET Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DGBFA.htm" title="DGBFA Class" tocid="T_Altaxo_Calc_Ode_DVode_DGBFA">DGBFA Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DGBSL.htm" title="DGBSL Class" tocid="T_Altaxo_Calc_Ode_DVode_DGBSL">DGBSL Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DGEFA.htm" title="DGEFA Class" tocid="T_Altaxo_Calc_Ode_DVode_DGEFA">DGEFA Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DGESL.htm" title="DGESL Class" tocid="T_Altaxo_Calc_Ode_DVode_DGESL">DGESL Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DNRM2.htm" title="DNRM2 Class" tocid="T_Altaxo_Calc_Ode_DVode_DNRM2">DNRM2 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DSCAL.htm" title="DSCAL Class" tocid="T_Altaxo_Calc_Ode_DVode_DSCAL">DSCAL Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DUMACH.htm" title="DUMACH Class" tocid="T_Altaxo_Calc_Ode_DVode_DUMACH">DUMACH Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DUMSUM.htm" title="DUMSUM Class" tocid="T_Altaxo_Calc_Ode_DVode_DUMSUM">DUMSUM Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVHIN.htm" title="DVHIN Class" tocid="T_Altaxo_Calc_Ode_DVode_DVHIN">DVHIN Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVINDY.htm" title="DVINDY Class" tocid="T_Altaxo_Calc_Ode_DVode_DVINDY">DVINDY Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVJAC.htm" title="DVJAC Class" tocid="T_Altaxo_Calc_Ode_DVode_DVJAC">DVJAC Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVJUST.htm" title="DVJUST Class" tocid="T_Altaxo_Calc_Ode_DVode_DVJUST">DVJUST Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVNLSD.htm" title="DVNLSD Class" tocid="T_Altaxo_Calc_Ode_DVode_DVNLSD">DVNLSD Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVNORM.htm" title="DVNORM Class" tocid="T_Altaxo_Calc_Ode_DVode_DVNORM">DVNORM Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVODE.htm" title="DVODE Class" tocid="T_Altaxo_Calc_Ode_DVode_DVODE">DVODE Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVSET.htm" title="DVSET Class" tocid="T_Altaxo_Calc_Ode_DVode_DVSET">DVSET Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVSOL.htm" title="DVSOL Class" tocid="T_Altaxo_Calc_Ode_DVode_DVSOL">DVSOL Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVSRCO.htm" title="DVSRCO Class" tocid="T_Altaxo_Calc_Ode_DVode_DVSRCO">DVSRCO Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_DVSTEP.htm" title="DVSTEP Class" tocid="T_Altaxo_Calc_Ode_DVode_DVSTEP">DVSTEP Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_IDAMAX.htm" title="IDAMAX Class" tocid="T_Altaxo_Calc_Ode_DVode_IDAMAX">IDAMAX Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_IDVNLSD.htm" title="IDVNLSD Interface" tocid="T_Altaxo_Calc_Ode_DVode_IDVNLSD">IDVNLSD Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_IFEX.htm" title="IFEX Interface" tocid="T_Altaxo_Calc_Ode_DVode_IFEX">IFEX Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_IJEX.htm" title="IJEX Interface" tocid="T_Altaxo_Calc_Ode_DVode_IJEX">IJEX Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_IUMACH.htm" title="IUMACH Class" tocid="T_Altaxo_Calc_Ode_DVode_IUMACH">IUMACH Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_IXSAV.htm" title="IXSAV Class" tocid="T_Altaxo_Calc_Ode_DVode_IXSAV">IXSAV Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_xBaseOdeGearsAndAdamsMoulton.htm" title="xBaseOdeGearsAndAdamsMoulton Class" tocid="T_Altaxo_Calc_Ode_DVode_xBaseOdeGearsAndAdamsMoulton">xBaseOdeGearsAndAdamsMoulton Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_XERRWD.htm" title="XERRWD Class" tocid="T_Altaxo_Calc_Ode_DVode_XERRWD">XERRWD Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_XSETF.htm" title="XSETF Class" tocid="T_Altaxo_Calc_Ode_DVode_XSETF">XSETF Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Ode_DVode_XSETUN.htm" title="XSETUN Class" tocid="T_Altaxo_Calc_Ode_DVode_XSETUN">XSETUN Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Altaxo.Calc.Ode.DVode Namespace</h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "N:Altaxo.Calc.Ode.DVode"]</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="classList"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DACOPY.htm">DACOPY</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DAXPY.htm">DAXPY</a></td><td><div class="summary">
             ***PURPOSE  Compute a constant times a vector plus a vector.
             ***CATEGORY  D1A7
             ***TYPE      DOUBLE PRECISION (SAXPY-S, DAXPY-D, CAXPY-C)
             ***KEYWORDS  BLAS, LINEAR ALGEBRA, TRIAD, VECTOR
             ***AUTHOR  Lawson, C. L., (JPL)
             Hanson, R. J., (SNLA)
             Kincaid, D. R., (U. of Texas)
             Krogh, F. T., (JPL)
             ***DESCRIPTION
            
             B L A S  Subprogram
             Description of Parameters
            
             --Input--
             N  number of elements in input vector(s)
             DA  double precision scalar multiplier
             DX  double precision vector with N elements
             INCX  storage spacing between elements of DX
             DY  double precision vector with N elements
             INCY  storage spacing between elements of DY
            
             --Output--
             DY  double precision result (unchanged if N .LE. 0)
            
             Overwrite double precision DY with double precision DA*DX + DY.
             For I = 0 to N-1, replace  DY(LY+I*INCY) with DA*DX(LX+I*INCX) +
             DY(LY+I*INCY),
             where LX = 1 if INCX .GE. 0, else LX = 1+(1-N)*INCX, and LY is
             defined in a similar way using INCY.
            
             ***REFERENCES  C. L. Lawson, R. J. Hanson, D. R. Kincaid and F. T.
             Krogh, Basic linear algebra subprograms for Fortran
             usage, Algorithm No. 539, Transactions on Mathematical
             Software 5, 3 (September 1979), pp. 308-323.
             ***ROUTINES CALLED  (NONE)
             ***REVISION HISTORY  (YYMMDD)
             791001  DATE WRITTEN
             890831  Modified array declarations.  (WRB)
             890831  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             920310  Corrected definition of LX in DESCRIPTION.  (WRB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  DAXPY
             ***FIRST EXECUTABLE STATEMENT  DAXPY
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DCOPY.htm">DCOPY</a></td><td><div class="summary">
             ***PURPOSE  Copy a vector.
             ***CATEGORY  D1A5
             ***TYPE      DOUBLE PRECISION (SCOPY-S, DCOPY-D, CCOPY-C, ICOPY-I)
             ***KEYWORDS  BLAS, COPY, LINEAR ALGEBRA, VECTOR
             ***AUTHOR  Lawson, C. L., (JPL)
             Hanson, R. J., (SNLA)
             Kincaid, D. R., (U. of Texas)
             Krogh, F. T., (JPL)
             ***DESCRIPTION
            
             B L A S  Subprogram
             Description of Parameters
            
             --Input--
             N  number of elements in input vector(s)
             DX  double precision vector with N elements
             INCX  storage spacing between elements of DX
             DY  double precision vector with N elements
             INCY  storage spacing between elements of DY
            
             --Output--
             DY  copy of vector DX (unchanged if N .LE. 0)
            
             Copy double precision DX to double precision DY.
             For I = 0 to N-1, copy DX(LX+I*INCX) to DY(LY+I*INCY),
             where LX = 1 if INCX .GE. 0, else LX = 1+(1-N)*INCX, and LY is
             defined in a similar way using INCY.
            
             ***REFERENCES  C. L. Lawson, R. J. Hanson, D. R. Kincaid and F. T.
             Krogh, Basic linear algebra subprograms for Fortran
             usage, Algorithm No. 539, Transactions on Mathematical
             Software 5, 3 (September 1979), pp. 308-323.
             ***ROUTINES CALLED  (NONE)
             ***REVISION HISTORY  (YYMMDD)
             791001  DATE WRITTEN
             890831  Modified array declarations.  (WRB)
             890831  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             920310  Corrected definition of LX in DESCRIPTION.  (WRB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  DCOPY
             ***FIRST EXECUTABLE STATEMENT  DCOPY
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DDOT.htm">DDOT</a></td><td><div class="summary">
             ***PURPOSE  Compute the inner product of two vectors.
             ***CATEGORY  D1A4
             ***TYPE      DOUBLE PRECISION (SDOT-S, DDOT-D, CDOTU-C)
             ***KEYWORDS  BLAS, INNER PRODUCT, LINEAR ALGEBRA, VECTOR
             ***AUTHOR  Lawson, C. L., (JPL)
             Hanson, R. J., (SNLA)
             Kincaid, D. R., (U. of Texas)
             Krogh, F. T., (JPL)
             ***DESCRIPTION
            
             B L A S  Subprogram
             Description of Parameters
            
             --Input--
             N  number of elements in input vector(s)
             DX  double precision vector with N elements
             INCX  storage spacing between elements of DX
             DY  double precision vector with N elements
             INCY  storage spacing between elements of DY
            
             --Output--
             DDOT  double precision dot product (zero if N .LE. 0)
            
             Returns the dot product of double precision DX and DY.
             DDOT = sum for I = 0 to N-1 of  DX(LX+I*INCX) * DY(LY+I*INCY),
             where LX = 1 if INCX .GE. 0, else LX = 1+(1-N)*INCX, and LY is
             defined in a similar way using INCY.
            
             ***REFERENCES  C. L. Lawson, R. J. Hanson, D. R. Kincaid and F. T.
             Krogh, Basic linear algebra subprograms for Fortran
             usage, Algorithm No. 539, Transactions on Mathematical
             Software 5, 3 (September 1979), pp. 308-323.
             ***ROUTINES CALLED  (NONE)
             ***REVISION HISTORY  (YYMMDD)
             791001  DATE WRITTEN
             890831  Modified array declarations.  (WRB)
             890831  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             920310  Corrected definition of LX in DESCRIPTION.  (WRB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  DDOT
             ***FIRST EXECUTABLE STATEMENT  DDOT
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DEWSET.htm">DEWSET</a></td><td><div class="summary">
             ***PURPOSE  Set error weight vector.
             ***TYPE      DOUBLE PRECISION (SEWSET-S, DEWSET-D)
             ***AUTHOR  Hindmarsh, Alan C., (LLNL)
             ***DESCRIPTION
            
             This subroutine sets the error weight vector EWT according to
             EWT(i) = RTOL(i)*ABS(YCUR(i)) + ATOL(i),  i = 1,...,N,
             with the subscript on RTOL and/or ATOL possibly replaced by 1 above,
             depending on the value of ITOL.
            
             ***SEE ALSO  DLSODE
             ***ROUTINES CALLED  (NONE)
             ***REVISION HISTORY  (YYMMDD)
             791129  DATE WRITTEN
             890501  Modified prologue to SLATEC/LDOC format.  (FNF)
             890503  Minor cosmetic changes.  (FNF)
             930809  Renamed to allow single/double precision versions. (ACH)
             ***END PROLOGUE  DEWSET
             **End
            
             ***FIRST EXECUTABLE STATEMENT  DEWSET
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DGBFA.htm">DGBFA</a></td><td><div class="summary">
             ***PURPOSE  Factor a band matrix using Gaussian elimination.
             ***CATEGORY  D2A2
             ***TYPE      DOUBLE PRECISION (SGBFA-S, DGBFA-D, CGBFA-C)
             ***KEYWORDS  BANDED, LINEAR ALGEBRA, LINPACK, MATRIX FACTORIZATION
             ***AUTHOR  Moler, C. B., (U. of New Mexico)
             ***DESCRIPTION
            
             DGBFA factors a double precision band matrix by elimination.
            
             DGBFA is usually called by DGBCO, but it can be called
             directly with a saving in time if  RCOND  is not needed.
            
             On Entry
            
             ABD     DOUBLE PRECISION(LDA, N)
             contains the matrix in band storage.  The columns
             of the matrix are stored in the columns of  ABD  and
             the diagonals of the matrix are stored in rows
             ML+1 through 2*ML+MU+1 of  ABD .
             See the comments below for details.
            
             LDA     INTEGER
             the leading dimension of the array  ABD .
             LDA must be .GE. 2*ML + MU + 1 .
            
             N       INTEGER
             the order of the original matrix.
            
             ML      INTEGER
             number of diagonals below the main diagonal.
             0 .LE. ML .LT.  N .
            
             MU      INTEGER
             number of diagonals above the main diagonal.
             0 .LE. MU .LT.  N .
             More efficient if  ML .LE. MU .
             On Return
            
             ABD     an upper triangular matrix in band storage and
             the multipliers which were used to obtain it.
             The factorization can be written  A = L*U  where
             L  is a product of permutation and unit lower
             triangular matrices and  U  is upper triangular.
            
             IPVT    INTEGER(N)
             an integer vector of pivot indices.
            
             INFO    INTEGER
             = 0  normal value.
             = K  if  U(K,K) .EQ. 0.0 .  This is not an error
             condition for this subroutine, but it does
             indicate that DGBSL will divide by zero if
             called.  Use  RCOND  in DGBCO for a reliable
             indication of singularity.
            
             Band Storage
            
             If  A  is a band matrix, the following program segment
             will set up the input.
            
             ML = (band width below the diagonal)
             MU = (band width above the diagonal)
             M = ML + MU + 1
             DO 20 J = 1, N
             I1 = MAX(1, J-MU)
             I2 = MIN(N, J+ML)
             DO 10 I = I1, I2
             K = I - J + M
             ABD(K,J) = A(I,J)
             10    CONTINUE
             20 CONTINUE
            
             This uses rows  ML+1  through  2*ML+MU+1  of  ABD .
             In addition, the first  ML  rows in  ABD  are used for
             elements generated during the triangularization.
             The total number of rows needed in  ABD  is  2*ML+MU+1 .
             The  ML+MU by ML+MU  upper left triangle and the
             ML by ML  lower right triangle are not referenced.
            
             ***REFERENCES  J. J. Dongarra, J. R. Bunch, C. B. Moler, and G. W.
             Stewart, LINPACK Users' Guide, SIAM, 1979.
             ***ROUTINES CALLED  DAXPY, DSCAL, IDAMAX
             ***REVISION HISTORY  (YYMMDD)
             780814  DATE WRITTEN
             890531  Changed all specific intrinsics to generic.  (WRB)
             890831  Modified array declarations.  (WRB)
             890831  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             900326  Removed duplicate information from DESCRIPTION section.
             (WRB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  DGBFA
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DGBSL.htm">DGBSL</a></td><td><div class="summary">
             ***PURPOSE  Solve the real band system A*X=B or TRANS(A)*X=B using
             the factors computed by DGBCO or DGBFA.
             ***CATEGORY  D2A2
             ***TYPE      DOUBLE PRECISION (SGBSL-S, DGBSL-D, CGBSL-C)
             ***KEYWORDS  BANDED, LINEAR ALGEBRA, LINPACK, MATRIX, SOLVE
             ***AUTHOR  Moler, C. B., (U. of New Mexico)
             ***DESCRIPTION
            
             DGBSL solves the double precision band system
             A * X = B  or  TRANS(A) * X = B
             using the factors computed by DGBCO or DGBFA.
            
             On Entry
            
             ABD     DOUBLE PRECISION(LDA, N)
             the output from DGBCO or DGBFA.
            
             LDA     INTEGER
             the leading dimension of the array  ABD .
            
             N       INTEGER
             the order of the original matrix.
            
             ML      INTEGER
             number of diagonals below the main diagonal.
            
             MU      INTEGER
             number of diagonals above the main diagonal.
            
             IPVT    INTEGER(N)
             the pivot vector from DGBCO or DGBFA.
            
             B       DOUBLE PRECISION(N)
             the right hand side vector.
            
             JOB     INTEGER
             = 0         to solve  A*X = B ,
             = nonzero   to solve  TRANS(A)*X = B , where
             TRANS(A)  is the transpose.
            
             On Return
            
             B       the solution vector  X .
            
             Error Condition
            
             A division by zero will occur if the input factor contains a
             zero on the diagonal.  Technically this indicates singularity
             but it is often caused by improper arguments or improper
             setting of LDA .  It will not occur if the subroutines are
             called correctly and if DGBCO has set RCOND .GT. 0.0
             or DGBFA has set INFO .EQ. 0 .
            
             To compute  INVERSE(A) * C  where  C  is a matrix
             with  P  columns
             CALL DGBCO(ABD,LDA,N,ML,MU,IPVT,RCOND,Z)
             IF (RCOND is too small) GO TO ...
             DO 10 J = 1, P
             CALL DGBSL(ABD,LDA,N,ML,MU,IPVT,C(1,J),0)
             10 CONTINUE
            
             ***REFERENCES  J. J. Dongarra, J. R. Bunch, C. B. Moler, and G. W.
             Stewart, LINPACK Users' Guide, SIAM, 1979.
             ***ROUTINES CALLED  DAXPY, DDOT
             ***REVISION HISTORY  (YYMMDD)
             780814  DATE WRITTEN
             890531  Changed all specific intrinsics to generic.  (WRB)
             890831  Modified array declarations.  (WRB)
             890831  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             900326  Removed duplicate information from DESCRIPTION section.
             (WRB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  DGBSL
            
             ***FIRST EXECUTABLE STATEMENT  DGBSL
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DGEFA.htm">DGEFA</a></td><td><div class="summary">
             ***PURPOSE  Factor a matrix using Gaussian elimination.
             ***CATEGORY  D2A1
             ***TYPE      DOUBLE PRECISION (SGEFA-S, DGEFA-D, CGEFA-C)
             ***KEYWORDS  GENERAL MATRIX, LINEAR ALGEBRA, LINPACK,
             MATRIX FACTORIZATION
             ***AUTHOR  Moler, C. B., (U. of New Mexico)
             ***DESCRIPTION
            
             DGEFA factors a double precision matrix by Gaussian elimination.
            
             DGEFA is usually called by DGECO, but it can be called
             directly with a saving in time if  RCOND  is not needed.
             (Time for DGECO) = (1 + 9/N)*(Time for DGEFA) .
            
             On Entry
            
             A       DOUBLE PRECISION(LDA, N)
             the matrix to be factored.
            
             LDA     INTEGER
             the leading dimension of the array  A .
            
             N       INTEGER
             the order of the matrix  A .
            
             On Return
            
             A       an upper triangular matrix and the multipliers
             which were used to obtain it.
             The factorization can be written  A = L*U  where
             L  is a product of permutation and unit lower
             triangular matrices and  U  is upper triangular.
            
             IPVT    INTEGER(N)
             an integer vector of pivot indices.
            
             INFO    INTEGER
             = 0  normal value.
             = K  if  U(K,K) .EQ. 0.0 .  This is not an error
             condition for this subroutine, but it does
             indicate that DGESL or DGEDI will divide by zero
             if called.  Use  RCOND  in DGECO for a reliable
             indication of singularity.
            
             ***REFERENCES  J. J. Dongarra, J. R. Bunch, C. B. Moler, and G. W.
             Stewart, LINPACK Users' Guide, SIAM, 1979.
             ***ROUTINES CALLED  DAXPY, DSCAL, IDAMAX
             ***REVISION HISTORY  (YYMMDD)
             780814  DATE WRITTEN
             890831  Modified array declarations.  (WRB)
             890831  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             900326  Removed duplicate information from DESCRIPTION section.
             (WRB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  DGEFA
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DGESL.htm">DGESL</a></td><td><div class="summary">
             ***PURPOSE  Solve the real system A*X=B or TRANS(A)*X=B using the
             factors computed by DGECO or DGEFA.
             ***CATEGORY  D2A1
             ***TYPE      DOUBLE PRECISION (SGESL-S, DGESL-D, CGESL-C)
             ***KEYWORDS  LINEAR ALGEBRA, LINPACK, MATRIX, SOLVE
             ***AUTHOR  Moler, C. B., (U. of New Mexico)
             ***DESCRIPTION
            
             DGESL solves the double precision system
             A * X = B  or  TRANS(A) * X = B
             using the factors computed by DGECO or DGEFA.
            
             On Entry
            
             A       DOUBLE PRECISION(LDA, N)
             the output from DGECO or DGEFA.
            
             LDA     INTEGER
             the leading dimension of the array  A .
            
             N       INTEGER
             the order of the matrix  A .
            
             IPVT    INTEGER(N)
             the pivot vector from DGECO or DGEFA.
            
             B       DOUBLE PRECISION(N)
             the right hand side vector.
            
             JOB     INTEGER
             = 0         to solve  A*X = B ,
             = nonzero   to solve  TRANS(A)*X = B  where
             TRANS(A)  is the transpose.
            
             On Return
            
             B       the solution vector  X .
            
             Error Condition
            
             A division by zero will occur if the input factor contains a
             zero on the diagonal.  Technically this indicates singularity
             but it is often caused by improper arguments or improper
             setting of LDA .  It will not occur if the subroutines are
             called correctly and if DGECO has set RCOND .GT. 0.0
             or DGEFA has set INFO .EQ. 0 .
            
             To compute  INVERSE(A) * C  where  C  is a matrix
             with  P  columns
             CALL DGECO(A,LDA,N,IPVT,RCOND,Z)
             IF (RCOND is too small) GO TO ...
             DO 10 J = 1, P
             CALL DGESL(A,LDA,N,IPVT,C(1,J),0)
             10 CONTINUE
            
             ***REFERENCES  J. J. Dongarra, J. R. Bunch, C. B. Moler, and G. W.
             Stewart, LINPACK Users' Guide, SIAM, 1979.
             ***ROUTINES CALLED  DAXPY, DDOT
             ***REVISION HISTORY  (YYMMDD)
             780814  DATE WRITTEN
             890831  Modified array declarations.  (WRB)
             890831  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             900326  Removed duplicate information from DESCRIPTION section.
             (WRB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  DGESL
            
             ***FIRST EXECUTABLE STATEMENT  DGESL
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DNRM2.htm">DNRM2</a></td><td><div class="summary">
             ***PURPOSE  Compute the Euclidean length (L2 norm) of a vector.
             ***CATEGORY  D1A3B
             ***TYPE      DOUBLE PRECISION (SNRM2-S, DNRM2-D, SCNRM2-C)
             ***KEYWORDS  BLAS, EUCLIDEAN LENGTH, EUCLIDEAN NORM, L2,
             LINEAR ALGEBRA, UNITARY, VECTOR
             ***AUTHOR  Lawson, C. L., (JPL)
             Hanson, R. J., (SNLA)
             Kincaid, D. R., (U. of Texas)
             Krogh, F. T., (JPL)
             ***DESCRIPTION
            
             B L A S  Subprogram
             Description of parameters
            
             --Input--
             N  number of elements in input vector(s)
             DX  double precision vector with N elements
             INCX  storage spacing between elements of DX
            
             --Output--
             DNRM2  double precision result (zero if N .LE. 0)
            
             Euclidean norm of the N-vector stored in DX with storage
             increment INCX.
             If N .LE. 0, return with result = 0.
             If N .GE. 1, then INCX must be .GE. 1
            
             Four phase method using two built-in constants that are
             hopefully applicable to all machines.
             CUTLO = maximum of  SQRT(U/EPS)  over all known machines.
             CUTHI = minimum of  SQRT(V)      over all known machines.
             where
             EPS = smallest no. such that EPS + 1. .GT. 1.
             U   = smallest positive no.   (underflow limit)
             V   = largest  no.            (overflow  limit)
            
             Brief outline of algorithm.
            
             Phase 1 scans zero components.
             move to phase 2 when a component is nonzero and .LE. CUTLO
             move to phase 3 when a component is .GT. CUTLO
             move to phase 4 when a component is .GE. CUTHI/M
             where M = N for X() real and M = 2*N for complex.
            
             Values for CUTLO and CUTHI.
             From the environmental parameters listed in the IMSL converter
             document the limiting values are as follows:
             CUTLO, S.P.   U/EPS = 2**(-102) for  Honeywell.  Close seconds are
             Univac and DEC at 2**(-103)
             Thus CUTLO = 2**(-51) = 4.44089E-16
             CUTHI, S.P.   V = 2**127 for Univac, Honeywell, and DEC.
             Thus CUTHI = 2**(63.5) = 1.30438E19
             CUTLO, D.P.   U/EPS = 2**(-67) for Honeywell and DEC.
             Thus CUTLO = 2**(-33.5) = 8.23181D-11
             CUTHI, D.P.   same as S.P.  CUTHI = 1.30438D19
             DATA CUTLO, CUTHI /8.232D-11,  1.304D19/
             DATA CUTLO, CUTHI /4.441E-16,  1.304E19/
            
             ***REFERENCES  C. L. Lawson, R. J. Hanson, D. R. Kincaid and F. T.
             Krogh, Basic linear algebra subprograms for Fortran
             usage, Algorithm No. 539, Transactions on Mathematical
             Software 5, 3 (September 1979), pp. 308-323.
             ***ROUTINES CALLED  (NONE)
             ***REVISION HISTORY  (YYMMDD)
             791001  DATE WRITTEN
             890531  Changed all specific intrinsics to generic.  (WRB)
             890831  Modified array declarations.  (WRB)
             890831  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  DNRM2
            
             ***FIRST EXECUTABLE STATEMENT  DNRM2
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DSCAL.htm">DSCAL</a></td><td><div class="summary">
             ***PURPOSE  Multiply a vector by a constant.
             ***CATEGORY  D1A6
             ***TYPE      DOUBLE PRECISION (SSCAL-S, DSCAL-D, CSCAL-C)
             ***KEYWORDS  BLAS, LINEAR ALGEBRA, SCALE, VECTOR
             ***AUTHOR  Lawson, C. L., (JPL)
             Hanson, R. J., (SNLA)
             Kincaid, D. R., (U. of Texas)
             Krogh, F. T., (JPL)
             ***DESCRIPTION
            
             B L A S  Subprogram
             Description of Parameters
            
             --Input--
             N  number of elements in input vector(s)
             DA  double precision scale factor
             DX  double precision vector with N elements
             INCX  storage spacing between elements of DX
            
             --Output--
             DX  double precision result (unchanged if N.LE.0)
            
             Replace double precision DX by double precision DA*DX.
             For I = 0 to N-1, replace DX(IX+I*INCX) with  DA * DX(IX+I*INCX),
             where IX = 1 if INCX .GE. 0, else IX = 1+(1-N)*INCX.
            
             ***REFERENCES  C. L. Lawson, R. J. Hanson, D. R. Kincaid and F. T.
             Krogh, Basic linear algebra subprograms for Fortran
             usage, Algorithm No. 539, Transactions on Mathematical
             Software 5, 3 (September 1979), pp. 308-323.
             ***ROUTINES CALLED  (NONE)
             ***REVISION HISTORY  (YYMMDD)
             791001  DATE WRITTEN
             890831  Modified array declarations.  (WRB)
             890831  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             900821  Modified to correct problem with a negative increment.
             (WRB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  DSCAL
             ***FIRST EXECUTABLE STATEMENT  DSCAL
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DUMACH.htm">DUMACH</a></td><td><div class="summary">
             ***PURPOSE  Compute the unit roundoff of the machine.
             ***CATEGORY  R1
             ***TYPE      DOUBLE PRECISION (RUMACH-S, DUMACH-D)
             ***KEYWORDS  MACHINE CONSTANTS
             ***AUTHOR  Hindmarsh, Alan C., (LLNL)
             ***DESCRIPTION
             *Usage:
             DOUBLE PRECISION  A, DUMACH
             A = DUMACH()
            
             *Function Return Values:
             A : the unit roundoff of the machine.
            
             *Description:
             The unit roundoff is defined as the smallest positive machine
             number u such that  1.0 + u .ne. 1.0.  This is computed by DUMACH
             in a machine-independent manner.
            
             ***REFERENCES  (NONE)
             ***ROUTINES CALLED  DUMSUM
             ***REVISION HISTORY  (YYYYMMDD)
             19930216  DATE WRITTEN
             19930818  Added SLATEC-format prologue.  (FNF)
             20030707  Added DUMSUM to force normal storage of COMP.  (ACH)
             ***END PROLOGUE  DUMACH
            
             ***FIRST EXECUTABLE STATEMENT  DUMACH
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DUMSUM.htm">DUMSUM</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVHIN.htm">DVHIN</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVINDY.htm">DVINDY</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVJAC.htm">DVJAC</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVJUST.htm">DVJUST</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVNLSD.htm">DVNLSD</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVNORM.htm">DVNORM</a></td><td><div class="summary">
             ***PURPOSE  Weighted root-mean-square vector norm.
             ***TYPE      DOUBLE PRECISION (SVNORM-S, DVNORM-D)
             ***AUTHOR  Hindmarsh, Alan C., (LLNL)
             ***DESCRIPTION
            
             This function routine computes the weighted root-mean-square norm
             of the vector of length N contained in the array V, with weights
             contained in the array W of length N:
             DVNORM = SQRT( (1/N) * SUM( V(i)*W(i) )**2 )
            
             ***SEE ALSO  DLSODE
             ***ROUTINES CALLED  (NONE)
             ***REVISION HISTORY  (YYMMDD)
             791129  DATE WRITTEN
             890501  Modified prologue to SLATEC/LDOC format.  (FNF)
             890503  Minor cosmetic changes.  (FNF)
             930809  Renamed to allow single/double precision versions. (ACH)
             ***END PROLOGUE  DVNORM
             **End
            
             ***FIRST EXECUTABLE STATEMENT  DVNORM
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVODE.htm">DVODE</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVSET.htm">DVSET</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVSOL.htm">DVSOL</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVSRCO.htm">DVSRCO</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_DVSTEP.htm">DVSTEP</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_IDAMAX.htm">IDAMAX</a></td><td><div class="summary">
             ***PURPOSE  Find the smallest index of that component of a vector
             having the maximum magnitude.
             ***CATEGORY  D1A2
             ***TYPE      DOUBLE PRECISION (ISAMAX-S, IDAMAX-D, ICAMAX-C)
             ***KEYWORDS  BLAS, LINEAR ALGEBRA, MAXIMUM COMPONENT, VECTOR
             ***AUTHOR  Lawson, C. L., (JPL)
             Hanson, R. J., (SNLA)
             Kincaid, D. R., (U. of Texas)
             Krogh, F. T., (JPL)
             ***DESCRIPTION
            
             B L A S  Subprogram
             Description of Parameters
            
             --Input--
             N  number of elements in input vector(s)
             DX  double precision vector with N elements
             INCX  storage spacing between elements of DX
            
             --Output--
             IDAMAX  smallest index (zero if N .LE. 0)
            
             Find smallest index of maximum magnitude of double precision DX.
             IDAMAX = first I, I = 1 to N, to maximize ABS(DX(IX+(I-1)*INCX)),
             where IX = 1 if INCX .GE. 0, else IX = 1+(1-N)*INCX.
            
             ***REFERENCES  C. L. Lawson, R. J. Hanson, D. R. Kincaid and F. T.
             Krogh, Basic linear algebra subprograms for Fortran
             usage, Algorithm No. 539, Transactions on Mathematical
             Software 5, 3 (September 1979), pp. 308-323.
             ***ROUTINES CALLED  (NONE)
             ***REVISION HISTORY  (YYMMDD)
             791001  DATE WRITTEN
             890531  Changed all specific intrinsics to generic.  (WRB)
             890531  REVISION DATE from Version 3.2
             891214  Prologue converted to Version 4.0 format.  (BAB)
             900821  Modified to correct problem with a negative increment.
             (WRB)
             920501  Reformatted the REFERENCES section.  (WRB)
             ***END PROLOGUE  IDAMAX
             ***FIRST EXECUTABLE STATEMENT  IDAMAX
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_IUMACH.htm">IUMACH</a></td><td><div class="summary">
             ***PURPOSE  Provide standard output unit number.
             ***CATEGORY  R1
             ***TYPE      INTEGER (IUMACH-I)
             ***KEYWORDS  MACHINE CONSTANTS
             ***AUTHOR  Hindmarsh, Alan C., (LLNL)
             ***DESCRIPTION
             *Usage:
             INTEGER  LOUT, IUMACH
             LOUT = IUMACH()
            
             *Function Return Values:
             LOUT : the standard logical unit for Fortran output.
            
             ***REFERENCES  (NONE)
             ***ROUTINES CALLED  (NONE)
             ***REVISION HISTORY  (YYMMDD)
             930915  DATE WRITTEN
             930922  Made user-callable, and other cosmetic changes. (FNF)
             ***END PROLOGUE  IUMACH
            
             *Internal Notes:
             The built-in value of 6 is standard on a wide range of Fortran
             systems.  This may be machine-dependent.
             **End
             ***FIRST EXECUTABLE STATEMENT  IUMACH
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_IXSAV.htm">IXSAV</a></td><td><div class="summary">
             ***PURPOSE  Save and recall error message control parameters.
             ***CATEGORY  R3C
             ***TYPE      ALL (IXSAV-A)
             ***AUTHOR  Hindmarsh, Alan C., (LLNL)
             ***DESCRIPTION
            
             IXSAV saves and recalls one of two error message parameters:
             LUNIT, the logical unit number to which messages are printed, and
             MESFLG, the message print flag.
             This is a modification of the SLATEC library routine J4SAVE.
            
             Saved local variables..
             LUNIT  = Logical unit number for messages.  The default is obtained
             by a call to IUMACH (may be machine-dependent).
             MESFLG = Print control flag..
             1 means print all messages (the default).
             0 means no printing.
            
             On input..
             IPAR   = Parameter indicator (1 for LUNIT, 2 for MESFLG).
             IVALUE = The value to be set for the parameter, if ISET = .TRUE.
             ISET   = Logical flag to indicate whether to read or write.
             If ISET = .TRUE., the parameter will be given
             the value IVALUE.  If ISET = .FALSE., the parameter
             will be unchanged, and IVALUE is a dummy argument.
            
             On return..
             IXSAV = The (old) value of the parameter.
            
             ***SEE ALSO  XERRWD, XERRWV
             ***ROUTINES CALLED  IUMACH
             ***REVISION HISTORY  (YYMMDD)
             921118  DATE WRITTEN
             930329  Modified prologue to SLATEC format. (FNF)
             930915  Added IUMACH call to get default output unit.  (ACH)
             930922  Minor cosmetic changes. (FNF)
             010425  Type declaration for IUMACH added. (ACH)
             ***END PROLOGUE  IXSAV
            
             Subroutines called by IXSAV.. None
             Function routine called by IXSAV.. IUMACH
             -----------------------------------------------------------------------
             **End
             -----------------------------------------------------------------------
             -----------------------------------------------------------------------
             The following Fortran-77 declaration is to cause the values of the
             listed (local) variables to be saved between calls to this routine.
             -----------------------------------------------------------------------
            
             ***FIRST EXECUTABLE STATEMENT  IXSAV
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_xBaseOdeGearsAndAdamsMoulton.htm">xBaseOdeGearsAndAdamsMoulton</a></td><td><div class="summary">
            Represents a base class for the Adams-Moulton and Gear’s BDF classes.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_XERRWD.htm">XERRWD</a></td><td><div class="summary">
             ***PURPOSE  Write error message with values.
             ***CATEGORY  R3C
             ***TYPE      DOUBLE PRECISION (XERRWV-S, XERRWD-D)
             ***AUTHOR  Hindmarsh, Alan C., (LLNL)
             ***DESCRIPTION
            
             Subroutines XERRWD, XSETF, XSETUN, and the function routine IXSAV,
             as given here, constitute a simplified version of the SLATEC error
             handling package.
            
             All arguments are input arguments.
            
             MSG    = The message (character array).
             NMES   = The length of MSG (number of characters).
             NERR   = The error number (not used).
             LEVEL  = The error level..
             0 or 1 means recoverable (control returns to caller).
             2 means fatal (run is aborted--see note below).
             NI     = Number of integers (0, 1, or 2) to be printed with message.
             I1,I2  = Integers to be printed, depending on NI.
             NR     = Number of reals (0, 1, or 2) to be printed with message.
             R1,R2  = Reals to be printed, depending on NR.
            
             Note..  this routine is machine-dependent and specialized for use
             in limited context, in the following ways..
             1. The argument MSG is assumed to be of type CHARACTER, and
             the message is printed with a format of (1X,A).
             2. The message is assumed to take only one line.
             Multi-line messages are generated by repeated calls.
             3. If LEVEL = 2, control passes to the statement   STOP
             to abort the run.  This statement may be machine-dependent.
             4. R1 and R2 are assumed to be in double precision and are printed
             in D21.13 format.
            
             ***ROUTINES CALLED  IXSAV
             ***REVISION HISTORY  (YYMMDD)
             920831  DATE WRITTEN
             921118  Replaced MFLGSV/LUNSAV by IXSAV. (ACH)
             930329  Modified prologue to SLATEC format. (FNF)
             930407  Changed MSG from CHARACTER*1 array to variable. (FNF)
             930922  Minor cosmetic change. (FNF)
             ***END PROLOGUE  XERRWD
            
             *Internal Notes:
            
             For a different default logical unit number, IXSAV (or a subsidiary
             routine that it calls) will need to be modified.
             For a different run-abort command, change the statement following
             statement 100 at the end.
             -----------------------------------------------------------------------
             Subroutines called by XERRWD.. None
             Function routine called by XERRWD.. IXSAV
             -----------------------------------------------------------------------
             **End
            
             Declare arguments.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_XSETF.htm">XSETF</a></td><td><div class="summary">
             ***PURPOSE  Reset the error print control flag.
             ***CATEGORY  R3A
             ***TYPE      ALL (XSETF-A)
             ***KEYWORDS  ERROR CONTROL
             ***AUTHOR  Hindmarsh, Alan C., (LLNL)
             ***DESCRIPTION
            
             XSETF sets the error print control flag to MFLAG:
             MFLAG=1 means print all messages (the default).
             MFLAG=0 means no printing.
            
             ***SEE ALSO  XERRWD, XERRWV
             ***REFERENCES  (NONE)
             ***ROUTINES CALLED  IXSAV
             ***REVISION HISTORY  (YYMMDD)
             921118  DATE WRITTEN
             930329  Added SLATEC format prologue. (FNF)
             930407  Corrected SEE ALSO section. (FNF)
             930922  Made user-callable, and other cosmetic changes. (FNF)
             ***END PROLOGUE  XSETF
            
             Subroutines called by XSETF.. None
             Function routine called by XSETF.. IXSAV
             -----------------------------------------------------------------------
             **End
            
             ***FIRST EXECUTABLE STATEMENT  XSETF
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_XSETUN.htm">XSETUN</a></td><td><div class="summary">
             ***PURPOSE  Reset the logical unit number for error messages.
             ***CATEGORY  R3B
             ***TYPE      ALL (XSETUN-A)
             ***KEYWORDS  ERROR CONTROL
             ***DESCRIPTION
            
             XSETUN sets the logical unit number for error messages to LUN.
            
             ***AUTHOR  Hindmarsh, Alan C., (LLNL)
             ***SEE ALSO  XERRWD, XERRWV
             ***REFERENCES  (NONE)
             ***ROUTINES CALLED  IXSAV
             ***REVISION HISTORY  (YYMMDD)
             921118  DATE WRITTEN
             930329  Added SLATEC format prologue. (FNF)
             930407  Corrected SEE ALSO section. (FNF)
             930922  Made user-callable, and other cosmetic changes. (FNF)
             ***END PROLOGUE  XSETUN
            
             Subroutines called by XSETUN.. None
             Function routine called by XSETUN.. IXSAV
             -----------------------------------------------------------------------
             **End
            
             ***FIRST EXECUTABLE STATEMENT  XSETUN
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="interfaceList"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_IDVNLSD.htm">IDVNLSD</a></td><td /></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_IFEX.htm">IFEX</a></td><td /></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Altaxo_Calc_Ode_DVode_IJEX.htm">IJEX</a></td><td /></tr></table></div></div></div><div id="pageFooter" class="pageFooter">Altaxo can be downloaded from <a href="https://sourceforge.net/projects/altaxo/files/Altaxo/">SourceForge</a>. Source code available on <a href="https://github.com/Altaxo/Altaxo">Github</a>.
<br /><a href="https://sourceforge.net/u/dlellinger/profile/">(C) Dr. Dirk Lellinger 2002 - <script>document.write(new Date().getFullYear()); </script></a><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dlellinger%40users.sourceforge.net?Subject=Altaxo user manual and class reference">dlellinger@users.sourceforge.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>