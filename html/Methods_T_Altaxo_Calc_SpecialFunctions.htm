<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SpecialFunctions Methods</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SpecialFunctions class, methods" /><meta name="Microsoft.Help.Id" content="Methods.T:Altaxo.Calc.SpecialFunctions" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Altaxo.Calc" /><meta name="file" content="Methods_T_Altaxo_Calc_SpecialFunctions" /><meta name="guid" content="Methods_T_Altaxo_Calc_SpecialFunctions" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Altaxo user manual and class reference<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1B7FE024E7E614BFA13DAA1FD005CB2E.htm" title="Altaxo user manual and class reference" tocid="roottoc">Altaxo user manual and class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Altaxo class reference" tocid="R_Project_Documentation">Altaxo class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo.htm" title="Altaxo Namespaces" tocid="G_Altaxo">Altaxo Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo_Calc.htm" title="Altaxo.Calc Namespaces" tocid="G_Altaxo_Calc">Altaxo.Calc Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Altaxo_Calc.htm" title="Altaxo.Calc" tocid="N_Altaxo_Calc">Altaxo.Calc</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_SpecialFunctions.htm" title="SpecialFunctions Class" tocid="T_Altaxo_Calc_SpecialFunctions">SpecialFunctions Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Altaxo_Calc_SpecialFunctions.htm" title="SpecialFunctions Methods" tocid="Methods_T_Altaxo_Calc_SpecialFunctions">SpecialFunctions Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_AiryAi.htm" title="AiryAi Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_AiryAi">AiryAi Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_AiryAiPrime.htm" title="AiryAiPrime Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_AiryAiPrime">AiryAiPrime Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_AiryAiPrimeScaled.htm" title="AiryAiPrimeScaled Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_AiryAiPrimeScaled">AiryAiPrimeScaled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_AiryAiScaled.htm" title="AiryAiScaled Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_AiryAiScaled">AiryAiScaled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_AiryBi.htm" title="AiryBi Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_AiryBi">AiryBi Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_AiryBiPrime.htm" title="AiryBiPrime Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_AiryBiPrime">AiryBiPrime Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_AiryBiPrimeScaled.htm" title="AiryBiPrimeScaled Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_AiryBiPrimeScaled">AiryBiPrimeScaled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_AiryBiScaled.htm" title="AiryBiScaled Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_AiryBiScaled">AiryBiScaled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_BesselI.htm" title="BesselI Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_BesselI">BesselI Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BesselI0.htm" title="BesselI0 Method " tocid="M_Altaxo_Calc_SpecialFunctions_BesselI0">BesselI0 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BesselI0MStruveL0.htm" title="BesselI0MStruveL0 Method " tocid="M_Altaxo_Calc_SpecialFunctions_BesselI0MStruveL0">BesselI0MStruveL0 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BesselI1.htm" title="BesselI1 Method " tocid="M_Altaxo_Calc_SpecialFunctions_BesselI1">BesselI1 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BesselI1MStruveL1.htm" title="BesselI1MStruveL1 Method " tocid="M_Altaxo_Calc_SpecialFunctions_BesselI1MStruveL1">BesselI1MStruveL1 Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_BesselIScaled.htm" title="BesselIScaled Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_BesselIScaled">BesselIScaled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_BesselJ.htm" title="BesselJ Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_BesselJ">BesselJ Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_BesselJScaled.htm" title="BesselJScaled Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_BesselJScaled">BesselJScaled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_BesselK.htm" title="BesselK Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_BesselK">BesselK Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BesselK0.htm" title="BesselK0 Method " tocid="M_Altaxo_Calc_SpecialFunctions_BesselK0">BesselK0 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BesselK0e.htm" title="BesselK0e Method " tocid="M_Altaxo_Calc_SpecialFunctions_BesselK0e">BesselK0e Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BesselK1.htm" title="BesselK1 Method " tocid="M_Altaxo_Calc_SpecialFunctions_BesselK1">BesselK1 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BesselK1e.htm" title="BesselK1e Method " tocid="M_Altaxo_Calc_SpecialFunctions_BesselK1e">BesselK1e Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_BesselKScaled.htm" title="BesselKScaled Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_BesselKScaled">BesselKScaled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_BesselY.htm" title="BesselY Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_BesselY">BesselY Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_BesselYScaled.htm" title="BesselYScaled Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_BesselYScaled">BesselYScaled Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Beta.htm" title="Beta Method " tocid="M_Altaxo_Calc_SpecialFunctions_Beta">Beta Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BetaIncomplete.htm" title="BetaIncomplete Method " tocid="M_Altaxo_Calc_SpecialFunctions_BetaIncomplete">BetaIncomplete Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BetaLn.htm" title="BetaLn Method " tocid="M_Altaxo_Calc_SpecialFunctions_BetaLn">BetaLn Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BetaRegularized.htm" title="BetaRegularized Method " tocid="M_Altaxo_Calc_SpecialFunctions_BetaRegularized">BetaRegularized Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Binomial.htm" title="Binomial Method " tocid="M_Altaxo_Calc_SpecialFunctions_Binomial">Binomial Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_BinomialLn.htm" title="BinomialLn Method " tocid="M_Altaxo_Calc_SpecialFunctions_BinomialLn">BinomialLn Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_DiGamma.htm" title="DiGamma Method " tocid="M_Altaxo_Calc_SpecialFunctions_DiGamma">DiGamma Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_DiGammaInv.htm" title="DiGammaInv Method " tocid="M_Altaxo_Calc_SpecialFunctions_DiGammaInv">DiGammaInv Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Erf.htm" title="Erf Method " tocid="M_Altaxo_Calc_SpecialFunctions_Erf">Erf Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Erfc.htm" title="Erfc Method " tocid="M_Altaxo_Calc_SpecialFunctions_Erfc">Erfc Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_ErfcInv.htm" title="ErfcInv Method " tocid="M_Altaxo_Calc_SpecialFunctions_ErfcInv">ErfcInv Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_ErfInv.htm" title="ErfInv Method " tocid="M_Altaxo_Calc_SpecialFunctions_ErfInv">ErfInv Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Expm1.htm" title="Expm1 Method " tocid="M_Altaxo_Calc_SpecialFunctions_Expm1">Expm1 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_ExponentialIntegral.htm" title="ExponentialIntegral Method " tocid="M_Altaxo_Calc_SpecialFunctions_ExponentialIntegral">ExponentialIntegral Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_ExponentialMinusOne.htm" title="ExponentialMinusOne Method " tocid="M_Altaxo_Calc_SpecialFunctions_ExponentialMinusOne">ExponentialMinusOne Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_Factorial.htm" title="Factorial Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_Factorial">Factorial Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_FactorialLn.htm" title="FactorialLn Method " tocid="M_Altaxo_Calc_SpecialFunctions_FactorialLn">FactorialLn Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_FallingFactorial.htm" title="FallingFactorial Method " tocid="M_Altaxo_Calc_SpecialFunctions_FallingFactorial">FallingFactorial Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Gamma.htm" title="Gamma Method " tocid="M_Altaxo_Calc_SpecialFunctions_Gamma">Gamma Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_GammaLn.htm" title="GammaLn Method " tocid="M_Altaxo_Calc_SpecialFunctions_GammaLn">GammaLn Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_GammaLowerIncomplete.htm" title="GammaLowerIncomplete Method " tocid="M_Altaxo_Calc_SpecialFunctions_GammaLowerIncomplete">GammaLowerIncomplete Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_GammaLowerRegularized.htm" title="GammaLowerRegularized Method " tocid="M_Altaxo_Calc_SpecialFunctions_GammaLowerRegularized">GammaLowerRegularized Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_GammaLowerRegularizedInv.htm" title="GammaLowerRegularizedInv Method " tocid="M_Altaxo_Calc_SpecialFunctions_GammaLowerRegularizedInv">GammaLowerRegularizedInv Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_GammaUpperIncomplete.htm" title="GammaUpperIncomplete Method " tocid="M_Altaxo_Calc_SpecialFunctions_GammaUpperIncomplete">GammaUpperIncomplete Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_GammaUpperRegularized.htm" title="GammaUpperRegularized Method " tocid="M_Altaxo_Calc_SpecialFunctions_GammaUpperRegularized">GammaUpperRegularized Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_GeneralHarmonic.htm" title="GeneralHarmonic Method " tocid="M_Altaxo_Calc_SpecialFunctions_GeneralHarmonic">GeneralHarmonic Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_GeneralizedHypergeometric.htm" title="GeneralizedHypergeometric Method " tocid="M_Altaxo_Calc_SpecialFunctions_GeneralizedHypergeometric">GeneralizedHypergeometric Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_HankelH1.htm" title="HankelH1 Method " tocid="M_Altaxo_Calc_SpecialFunctions_HankelH1">HankelH1 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_HankelH1Scaled.htm" title="HankelH1Scaled Method " tocid="M_Altaxo_Calc_SpecialFunctions_HankelH1Scaled">HankelH1Scaled Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_HankelH2.htm" title="HankelH2 Method " tocid="M_Altaxo_Calc_SpecialFunctions_HankelH2">HankelH2 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_HankelH2Scaled.htm" title="HankelH2Scaled Method " tocid="M_Altaxo_Calc_SpecialFunctions_HankelH2Scaled">HankelH2Scaled Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Harmonic.htm" title="Harmonic Method " tocid="M_Altaxo_Calc_SpecialFunctions_Harmonic">Harmonic Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_Hypotenuse.htm" title="Hypotenuse Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_Hypotenuse">Hypotenuse Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_KelvinBe.htm" title="KelvinBe Method " tocid="M_Altaxo_Calc_SpecialFunctions_KelvinBe">KelvinBe Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_KelvinBei.htm" title="KelvinBei Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_KelvinBei">KelvinBei Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_KelvinBeiPrime.htm" title="KelvinBeiPrime Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_KelvinBeiPrime">KelvinBeiPrime Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_KelvinBer.htm" title="KelvinBer Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_KelvinBer">KelvinBer Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_KelvinBerPrime.htm" title="KelvinBerPrime Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_KelvinBerPrime">KelvinBerPrime Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_KelvinKe.htm" title="KelvinKe Method " tocid="M_Altaxo_Calc_SpecialFunctions_KelvinKe">KelvinKe Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_KelvinKei.htm" title="KelvinKei Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_KelvinKei">KelvinKei Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_KelvinKeiPrime.htm" title="KelvinKeiPrime Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_KelvinKeiPrime">KelvinKeiPrime Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_KelvinKer.htm" title="KelvinKer Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_KelvinKer">KelvinKer Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_KelvinKerPrime.htm" title="KelvinKerPrime Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_KelvinKerPrime">KelvinKerPrime Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Log1p.htm" title="Log1p Method " tocid="M_Altaxo_Calc_SpecialFunctions_Log1p">Log1p Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Logistic.htm" title="Logistic Method " tocid="M_Altaxo_Calc_SpecialFunctions_Logistic">Logistic Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Logit.htm" title="Logit Method " tocid="M_Altaxo_Calc_SpecialFunctions_Logit">Logit Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_MarcumQ.htm" title="MarcumQ Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_MarcumQ">MarcumQ Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_MittagLefflerE.htm" title="MittagLefflerE Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_MittagLefflerE">MittagLefflerE Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_Multinomial.htm" title="Multinomial Method " tocid="M_Altaxo_Calc_SpecialFunctions_Multinomial">Multinomial Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_RisingFactorial.htm" title="RisingFactorial Method " tocid="M_Altaxo_Calc_SpecialFunctions_RisingFactorial">RisingFactorial Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_SphericalBesselJ.htm" title="SphericalBesselJ Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_SphericalBesselJ">SphericalBesselJ Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_SpecialFunctions_SphericalBesselY.htm" title="SphericalBesselY Method " tocid="Overload_Altaxo_Calc_SpecialFunctions_SphericalBesselY">SphericalBesselY Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_StruveL0.htm" title="StruveL0 Method " tocid="M_Altaxo_Calc_SpecialFunctions_StruveL0">StruveL0 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_SpecialFunctions_StruveL1.htm" title="StruveL1 Method " tocid="M_Altaxo_Calc_SpecialFunctions_StruveL1">StruveL1 Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>SpecialFunctions Methods</h1></td></tr></table><span class="introStyle"></span> <p>The <a href="T_Altaxo_Calc_SpecialFunctions.htm">SpecialFunctions</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryAi_1.htm">AiryAi(Complex)</a></td><td><div class="summary">
            Returns the Airy function Ai.
            <p>AiryAi(z) is a solution to the Airy equation, y'' - y * z = 0.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryAi.htm">AiryAi(Double)</a></td><td><div class="summary">
            Returns the Airy function Ai.
            <p>AiryAi(z) is a solution to the Airy equation, y'' - y * z = 0.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryAiPrime_1.htm">AiryAiPrime(Complex)</a></td><td><div class="summary">
            Returns the derivative of the Airy function Ai.
            <p>AiryAiPrime(z) is defined as d/dz AiryAi(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryAiPrime.htm">AiryAiPrime(Double)</a></td><td><div class="summary">
            Returns the derivative of the Airy function Ai.
            <p>AiryAiPrime(z) is defined as d/dz AiryAi(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryAiPrimeScaled_1.htm">AiryAiPrimeScaled(Complex)</a></td><td><div class="summary">
            Returns the exponentially scaled derivative of Airy function Ai
            <p>ScaledAiryAiPrime(z) is given by Exp(zta) * AiryAiPrime(z), where zta = (2/3) * z * Sqrt(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryAiPrimeScaled.htm">AiryAiPrimeScaled(Double)</a></td><td><div class="summary">
            Returns the exponentially scaled derivative of the Airy function Ai.
            <p>ScaledAiryAiPrime(z) is given by Exp(zta) * AiryAiPrime(z), where zta = (2/3) * z * Sqrt(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryAiScaled_1.htm">AiryAiScaled(Complex)</a></td><td><div class="summary">
            Returns the exponentially scaled Airy function Ai.
            <p>ScaledAiryAi(z) is given by Exp(zta) * AiryAi(z), where zta = (2/3) * z * Sqrt(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryAiScaled.htm">AiryAiScaled(Double)</a></td><td><div class="summary">
            Returns the exponentially scaled Airy function Ai.
            <p>ScaledAiryAi(z) is given by Exp(zta) * AiryAi(z), where zta = (2/3) * z * Sqrt(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryBi_1.htm">AiryBi(Complex)</a></td><td><div class="summary">
            Returns the Airy function Bi.
            <p>AiryBi(z) is a solution to the Airy equation, y'' - y * z = 0.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryBi.htm">AiryBi(Double)</a></td><td><div class="summary">
            Returns the Airy function Bi.
            <p>AiryBi(z) is a solution to the Airy equation, y'' - y * z = 0.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryBiPrime_1.htm">AiryBiPrime(Complex)</a></td><td><div class="summary">
            Returns the derivative of the Airy function Bi.
            <p>AiryBiPrime(z) is defined as d/dz AiryBi(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryBiPrime.htm">AiryBiPrime(Double)</a></td><td><div class="summary">
            Returns the derivative of the Airy function Bi.
            <p>AiryBiPrime(z) is defined as d/dz AiryBi(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryBiPrimeScaled_1.htm">AiryBiPrimeScaled(Complex)</a></td><td><div class="summary">
            Returns the exponentially scaled derivative of the Airy function Bi.
            <p>ScaledAiryBiPrime(z) is given by Exp(-Abs(zta.Real)) * AiryBiPrime(z) where zta = (2 / 3) * z * Sqrt(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryBiPrimeScaled.htm">AiryBiPrimeScaled(Double)</a></td><td><div class="summary">
            Returns the exponentially scaled derivative of the Airy function Bi.
            <p>ScaledAiryBiPrime(z) is given by Exp(-Abs(zta.Real)) * AiryBiPrime(z) where zta = (2 / 3) * z * Sqrt(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryBiScaled_1.htm">AiryBiScaled(Complex)</a></td><td><div class="summary">
            Returns the exponentially scaled Airy function Bi.
            <p>ScaledAiryBi(z) is given by Exp(-Abs(zta.Real)) * AiryBi(z) where zta = (2 / 3) * z * Sqrt(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_AiryBiScaled.htm">AiryBiScaled(Double)</a></td><td><div class="summary">
            Returns the exponentially scaled Airy function Bi.
            <p>ScaledAiryBi(z) is given by Exp(-Abs(zta.Real)) * AiryBi(z) where zta = (2 / 3) * z * Sqrt(z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselI.htm">BesselI(Double, Double)</a></td><td><div class="summary">
            Returns the modified Bessel function of the first kind.
            <p>BesselI(n, z) is a solution to the modified Bessel differential equation.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselI_1.htm">BesselI(Double, Complex)</a></td><td><div class="summary">
            Returns the modified Bessel function of the first kind.
            <p>BesselI(n, z) is a solution to the modified Bessel differential equation.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselI0.htm">BesselI0</a></td><td><div class="summary">Returns the modified Bessel function of first kind, order 0 of the argument.
            <p />
            The function is defined as i0(x) = j0( ix ).
            <p />
            The range is partitioned into the two intervals [0, 8] and
            (8, infinity). Chebyshev polynomial expansions are employed
            in each interval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselI0MStruveL0.htm">BesselI0MStruveL0</a></td><td><div class="summary">
            Returns the difference between the Bessel I0 and Struve L0 functions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselI1.htm">BesselI1</a></td><td><div class="summary">Returns the modified Bessel function of first kind,
            order 1 of the argument.
            <p />
            The function is defined as i1(x) = -i j1( ix ).
            <p />
            The range is partitioned into the two intervals [0, 8] and
            (8, infinity). Chebyshev polynomial expansions are employed
            in each interval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselI1MStruveL1.htm">BesselI1MStruveL1</a></td><td><div class="summary">
            Returns the difference between the Bessel I1 and Struve L1 functions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselIScaled.htm">BesselIScaled(Double, Double)</a></td><td><div class="summary">
            Returns the exponentially scaled modified Bessel function of the first kind.
            <p>ScaledBesselI(n, z) is given by Exp(-Abs(z.Real)) * BesselI(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselIScaled_1.htm">BesselIScaled(Double, Complex)</a></td><td><div class="summary">
            Returns the exponentially scaled modified Bessel function of the first kind.
            <p>ScaledBesselI(n, z) is given by Exp(-Abs(z.Real)) * BesselI(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselJ.htm">BesselJ(Double, Double)</a></td><td><div class="summary">
            Returns the Bessel function of the first kind.
            <p>BesselJ(n, z) is a solution to the Bessel differential equation.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselJ_1.htm">BesselJ(Double, Complex)</a></td><td><div class="summary">
            Returns the Bessel function of the first kind.
            <p>BesselJ(n, z) is a solution to the Bessel differential equation.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselJScaled.htm">BesselJScaled(Double, Double)</a></td><td><div class="summary">
            Returns the exponentially scaled Bessel function of the first kind.
            <p>ScaledBesselJ(n, z) is given by Exp(-Abs(z.Imaginary)) * BesselJ(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselJScaled_1.htm">BesselJScaled(Double, Complex)</a></td><td><div class="summary">
            Returns the exponentially scaled Bessel function of the first kind.
            <p>ScaledBesselJ(n, z) is given by Exp(-Abs(z.Imaginary)) * BesselJ(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselK.htm">BesselK(Double, Double)</a></td><td><div class="summary">
            Returns the modified Bessel function of the second kind.
            <p>BesselK(n, z) is a solution to the modified Bessel differential equation.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselK_1.htm">BesselK(Double, Complex)</a></td><td><div class="summary">
            Returns the modified Bessel function of the second kind.
            <p>BesselK(n, z) is a solution to the modified Bessel differential equation.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselK0.htm">BesselK0</a></td><td><div class="summary"> Returns the modified Bessel function of the second kind
            of order 0 of the argument.
            <p />
            The range is partitioned into the two intervals [0, 8] and
            (8, infinity). Chebyshev polynomial expansions are employed
            in each interval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselK0e.htm">BesselK0e</a></td><td><div class="summary">Returns the exponentially scaled modified Bessel function
            of the second kind of order 0 of the argument.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselK1.htm">BesselK1</a></td><td><div class="summary"> Returns the modified Bessel function of the second kind
            of order 1 of the argument.
            <p />
            The range is partitioned into the two intervals [0, 2] and
            (2, infinity). Chebyshev polynomial expansions are employed
            in each interval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselK1e.htm">BesselK1e</a></td><td><div class="summary"> Returns the exponentially scaled modified Bessel function
            of the second kind of order 1 of the argument.
            <p />k1e(x) = exp(x) * k1(x).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselKScaled.htm">BesselKScaled(Double, Double)</a></td><td><div class="summary">
            Returns the exponentially scaled modified Bessel function of the second kind.
            <p>ScaledBesselK(n, z) is given by Exp(z) * BesselK(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselKScaled_1.htm">BesselKScaled(Double, Complex)</a></td><td><div class="summary">
            Returns the exponentially scaled modified Bessel function of the second kind.
            <p>ScaledBesselK(n, z) is given by Exp(z) * BesselK(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselY.htm">BesselY(Double, Double)</a></td><td><div class="summary">
            Returns the Bessel function of the second kind.
            <p>BesselY(n, z) is a solution to the Bessel differential equation.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselY_1.htm">BesselY(Double, Complex)</a></td><td><div class="summary">
            Returns the Bessel function of the second kind.
            <p>BesselY(n, z) is a solution to the Bessel differential equation.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselYScaled.htm">BesselYScaled(Double, Double)</a></td><td><div class="summary">
            Returns the exponentially scaled Bessel function of the second kind.
            <p>ScaledBesselY(n, z) is given by Exp(-Abs(z.Imaginary)) * BesselY(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BesselYScaled_1.htm">BesselYScaled(Double, Complex)</a></td><td><div class="summary">
            Returns the exponentially scaled Bessel function of the second kind.
            <p>ScaledBesselY(n, z) is given by Exp(-Abs(z.Imaginary)) * Y(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Beta.htm">Beta</a></td><td><div class="summary">
            Computes the Euler Beta function.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BetaIncomplete.htm">BetaIncomplete</a></td><td><div class="summary">
            Returns the lower incomplete (unregularized) beta function
            B(a,b,x) = int(t^(a-1)*(1-t)^(b-1),t=0..x) for real a &gt; 0, b &gt; 0, 1 &gt;= x &gt;= 0.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BetaLn.htm">BetaLn</a></td><td><div class="summary">
            Computes the logarithm of the Euler Beta function.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BetaRegularized.htm">BetaRegularized</a></td><td><div class="summary">
            Returns the regularized lower incomplete beta function
            I_x(a,b) = 1/Beta(a,b) * int(t^(a-1)*(1-t)^(b-1),t=0..x) for real a &gt; 0, b &gt; 0, 1 &gt;= x &gt;= 0.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Binomial.htm">Binomial</a></td><td><div class="summary">
            Computes the binomial coefficient: n choose k.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_BinomialLn.htm">BinomialLn</a></td><td><div class="summary">
            Computes the natural logarithm of the binomial coefficient: ln(n choose k).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_DiGamma.htm">DiGamma</a></td><td><div class="summary">
            Computes the Digamma function which is mathematically defined as the derivative of the logarithm of the gamma function.
            This implementation is based on
                Jose Bernardo
                Algorithm AS 103:
                Psi ( Digamma ) Function,
                Applied Statistics,
                Volume 25, Number 3, 1976, pages 315-317.
            Using the modifications as in Tom Minka's lightspeed toolbox.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_DiGammaInv.htm">DiGammaInv</a></td><td><div class="summary"><p>Computes the inverse Digamma function: this is the inverse of the logarithm of the gamma function. This function will
            only return solutions that are positive.</p><p>This implementation is based on the bisection method.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Erf.htm">Erf</a></td><td><div class="summary">Calculates the error function.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Erfc.htm">Erfc</a></td><td><div class="summary">Calculates the complementary error function.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_ErfcInv.htm">ErfcInv</a></td><td><div class="summary">Calculates the complementary inverse error function evaluated at z.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_ErfInv.htm">ErfInv</a></td><td><div class="summary">Calculates the inverse error function evaluated at z.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Expm1.htm">Expm1</a></td><td><div class="summary">
            Numerically stable exponential minus one, i.e. <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAA0JB0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAA0JB0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAA0JB0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">x -&gt; exp(x)<span class="highlight-number">-1</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAA0JB0CDA");</script></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_ExponentialIntegral.htm">ExponentialIntegral</a></td><td><div class="summary">
            Computes the generalized Exponential Integral function (En).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_ExponentialMinusOne.htm">ExponentialMinusOne</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Numerically stable exponential minus one, i.e. <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAA0HB0CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAA0HB0CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAA0HB0CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">x -&gt; exp(x)<span class="highlight-number">-1</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAA0HB0CDA");</script></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Factorial_1.htm">Factorial(BigInteger)</a></td><td><div class="summary">
            Computes the factorial of an integer.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Factorial.htm">Factorial(Int32)</a></td><td><div class="summary">
            Computes the factorial function x -&gt; x! of an integer number &gt; 0. The function can represent all number up
            to 22! exactly, all numbers up to 170! using a double representation. All larger values will overflow.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_FactorialLn.htm">FactorialLn</a></td><td><div class="summary">
            Computes the logarithmic factorial function x -&gt; ln(x!) of an integer number &gt; 0.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_FallingFactorial.htm">FallingFactorial</a></td><td><div class="summary">
            Computes the Falling Factorial (Pochhammer function)  x -&gt; x(n), n&gt;= 0. see: https://en.wikipedia.org/wiki/Falling_and_rising_factorials
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Gamma.htm">Gamma</a></td><td><div class="summary">
            Computes the Gamma function.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_GammaLn.htm">GammaLn</a></td><td><div class="summary">
            Computes the logarithm of the Gamma function.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_GammaLowerIncomplete.htm">GammaLowerIncomplete</a></td><td><div class="summary">
            Returns the lower incomplete gamma function
            gamma(a,x) = int(exp(-t)t^(a-1),t=0..x) for real a &gt; 0, x &gt; 0.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_GammaLowerRegularized.htm">GammaLowerRegularized</a></td><td><div class="summary">
            Returns the lower incomplete regularized gamma function
            P(a,x) = 1/Gamma(a) * int(exp(-t)t^(a-1),t=0..x) for real a &gt; 0, x &gt; 0.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_GammaLowerRegularizedInv.htm">GammaLowerRegularizedInv</a></td><td><div class="summary">
            Returns the inverse P^(-1) of the regularized lower incomplete gamma function
            P(a,x) = 1/Gamma(a) * int(exp(-t)t^(a-1),t=0..x) for real a &gt; 0, x &gt; 0,
            such that P^(-1)(a,P(a,x)) == x.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_GammaUpperIncomplete.htm">GammaUpperIncomplete</a></td><td><div class="summary">
            Returns the upper incomplete gamma function
            Gamma(a,x) = int(exp(-t)t^(a-1),t=0..x) for real a &gt; 0, x &gt; 0.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_GammaUpperRegularized.htm">GammaUpperRegularized</a></td><td><div class="summary">
            Returns the upper incomplete regularized gamma function
            Q(a,x) = 1/Gamma(a) * int(exp(-t)t^(a-1),t=0..x) for real a &gt; 0, x &gt; 0.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_GeneralHarmonic.htm">GeneralHarmonic</a></td><td><div class="summary">
            Compute the generalized harmonic number of order n of m. (1 + 1/2^m + 1/3^m + ... + 1/n^m)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_GeneralizedHypergeometric.htm">GeneralizedHypergeometric</a></td><td><div class="summary">
            A generalized hypergeometric series is a power series in which the ratio of successive coefficients indexed by n is a rational function of n.
            This is the most common pFq(a1, ..., ap; b1,...,bq; z) representation
            see: https://en.wikipedia.org/wiki/Generalized_hypergeometric_function
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_HankelH1.htm">HankelH1</a></td><td><div class="summary">
            Returns the Hankel function of the first kind.
            <p>HankelH1(n, z) is defined as BesselJ(n, z) + j * BesselY(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_HankelH1Scaled.htm">HankelH1Scaled</a></td><td><div class="summary">
            Returns the exponentially scaled Hankel function of the first kind.
            <p>ScaledHankelH1(n, z) is given by Exp(-z * j) * HankelH1(n, z) where j = Sqrt(-1).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_HankelH2.htm">HankelH2</a></td><td><div class="summary">
            Returns the Hankel function of the second kind.
            <p>HankelH2(n, z) is defined as BesselJ(n, z) - j * BesselY(n, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_HankelH2Scaled.htm">HankelH2Scaled</a></td><td><div class="summary">
            Returns the exponentially scaled Hankel function of the second kind.
            <p>ScaledHankelH2(n, z) is given by Exp(z * j) * HankelH2(n, z) where j = Sqrt(-1).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Harmonic.htm">Harmonic</a></td><td><div class="summary">
            Computes the <span class="parameter">t</span>'th Harmonic number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Hypotenuse_2.htm">Hypotenuse(Complex, Complex)</a></td><td><div class="summary">
            Numerically stable hypotenuse of a right angle triangle, i.e. <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAHVCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAHVCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAHVCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">(a,b) -&gt; sqrt(a^<span class="highlight-number">2</span> + b^<span class="highlight-number">2</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAHVCDA");</script></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Hypotenuse.htm">Hypotenuse(Complex32, Complex32)</a></td><td><div class="summary">
            Numerically stable hypotenuse of a right angle triangle, i.e. <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAGVCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAGVCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAGVCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">(a,b) -&gt; sqrt(a^<span class="highlight-number">2</span> + b^<span class="highlight-number">2</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAGVCDA");</script></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Hypotenuse_1.htm">Hypotenuse(Double, Double)</a></td><td><div class="summary">
            Numerically stable hypotenuse of a right angle triangle, i.e. <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAFVCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAFVCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAFVCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">(a,b) -&gt; sqrt(a^<span class="highlight-number">2</span> + b^<span class="highlight-number">2</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAFVCDA");</script></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Hypotenuse_3.htm">Hypotenuse(Single, Single)</a></td><td><div class="summary">
            Numerically stable hypotenuse of a right angle triangle, i.e. <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAEVCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAEVCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAEVCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">(a,b) -&gt; sqrt(a^<span class="highlight-number">2</span> + b^<span class="highlight-number">2</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAEVCDA");</script></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinBe.htm">KelvinBe</a></td><td><div class="summary">
            Returns the Kelvin function of the first kind.
            <p>KelvinBe(nu, x) is given by BesselJ(0, j * sqrt(j) * x) where j = sqrt(-1).</p><p>KelvinBer(nu, x) and KelvinBei(nu, x) are the real and imaginary parts of the KelvinBe(nu, x)</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinBei.htm">KelvinBei(Double)</a></td><td><div class="summary">
            Returns the Kelvin function bei.
            <p>KelvinBei(x) is given by the imaginary part of BesselJ(0, j * sqrt(j) * x) where j = sqrt(-1).</p><p>KelvinBei(x) is equivalent to KelvinBei(0, x).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinBei_1.htm">KelvinBei(Double, Double)</a></td><td><div class="summary">
            Returns the Kelvin function bei.
            <p>KelvinBei(nu, x) is given by the imaginary part of BesselJ(nu, j * sqrt(j) * x) where j = sqrt(-1).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinBeiPrime.htm">KelvinBeiPrime(Double)</a></td><td><div class="summary">
            Returns the derivative of the Kelvin function bei.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinBeiPrime_1.htm">KelvinBeiPrime(Double, Double)</a></td><td><div class="summary">
            Returns the derivative of the Kelvin function bei.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinBer.htm">KelvinBer(Double)</a></td><td><div class="summary">
            Returns the Kelvin function ber.
            <p>KelvinBer(x) is given by the real part of BesselJ(0, j * sqrt(j) * x) where j = sqrt(-1).</p><p>KelvinBer(x) is equivalent to KelvinBer(0, x).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinBer_1.htm">KelvinBer(Double, Double)</a></td><td><div class="summary">
            Returns the Kelvin function ber.
            <p>KelvinBer(nu, x) is given by the real part of BesselJ(nu, j * sqrt(j) * x) where j = sqrt(-1).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinBerPrime.htm">KelvinBerPrime(Double)</a></td><td><div class="summary">
            Returns the derivative of the Kelvin function ber.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinBerPrime_1.htm">KelvinBerPrime(Double, Double)</a></td><td><div class="summary">
            Returns the derivative of the Kelvin function ber.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinKe.htm">KelvinKe</a></td><td><div class="summary">
            Returns the Kelvin function of the second kind
            <p>KelvinKe(nu, x) is given by Exp(-nu * pi * j / 2) * BesselK(nu, x * sqrt(j)) where j = sqrt(-1).</p><p>KelvinKer(nu, x) and KelvinKei(nu, x) are the real and imaginary parts of the KelvinBe(nu, x)</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinKei.htm">KelvinKei(Double)</a></td><td><div class="summary">
            Returns the Kelvin function kei.
            <p>KelvinKei(x) is given by the imaginary part of Exp(-nu * pi * j / 2) * BesselK(0, sqrt(j) * x) where j = sqrt(-1).</p><p>KelvinKei(x) is equivalent to KelvinKei(0, x).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinKei_1.htm">KelvinKei(Double, Double)</a></td><td><div class="summary">
            Returns the Kelvin function kei.
            <p>KelvinKei(nu, x) is given by the imaginary part of Exp(-nu * pi * j / 2) * BesselK(nu, sqrt(j) * x) where j = sqrt(-1).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinKeiPrime.htm">KelvinKeiPrime(Double)</a></td><td><div class="summary">
            Returns the derivative of the Kelvin function kei.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinKeiPrime_1.htm">KelvinKeiPrime(Double, Double)</a></td><td><div class="summary">
            Returns the derivative of the Kelvin function kei.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinKer.htm">KelvinKer(Double)</a></td><td><div class="summary">
            Returns the Kelvin function ker.
            <p>KelvinKer(x) is given by the real part of Exp(-nu * pi * j / 2) * BesselK(0, sqrt(j) * x) where j = sqrt(-1).</p><p>KelvinKer(x) is equivalent to KelvinKer(0, x).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinKer_1.htm">KelvinKer(Double, Double)</a></td><td><div class="summary">
            Returns the Kelvin function ker.
            <p>KelvinKer(nu, x) is given by the real part of Exp(-nu * pi * j / 2) * BesselK(nu, sqrt(j) * x) where j = sqrt(-1).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinKerPrime.htm">KelvinKerPrime(Double)</a></td><td><div class="summary">
            Returns the derivative of the Kelvin function ker.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_KelvinKerPrime_1.htm">KelvinKerPrime(Double, Double)</a></td><td><div class="summary">
            Returns the derivative of the Kelvin function ker.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Log1p.htm">Log1p</a></td><td><div class="summary">
            Computes ln(1+x) with good relative precision when |x| is small
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Logistic.htm">Logistic</a></td><td><div class="summary">
            Computes the logistic function. see: http://en.wikipedia.org/wiki/Logistic
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Logit.htm">Logit</a></td><td><div class="summary">
            Computes the logit function, the inverse of the sigmoid logistic function. see: http://en.wikipedia.org/wiki/Logit
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_MarcumQ.htm">MarcumQ(Double, Double, Double)</a></td><td><div class="summary">
            Returns the Marcum Q-function Q[ν](a,b). <a href="https://en.wikipedia.org/wiki/Marcum_Q-function">Marcum Q-function (Wikipedia)</a><p>References: A. Gil, J. Segura and N.M. Temme. Efficient and accurate algorithms for the
            computation and inversion of the incomplete gamma function ratios. SIAM J Sci Comput. (2012) 34(6), A2965-A2981</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_MarcumQ_1.htm">MarcumQ(Double, Double, Double, Int32<span id="LSTA18E21D9_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA18E21D9_0?cpp=%");</script>)</a></td><td><div class="summary">
            Returns the Marcum Q-function Q[ν](a,b). <a href="https://en.wikipedia.org/wiki/Marcum_Q-function">Marcum Q-function (Wikipedia)</a><p>References: A. Gil, J. Segura and N.M. Temme. Efficient and accurate algorithms for the
            computation and inversion of the incomplete gamma function ratios. SIAM J Sci Comput. (2012) 34(6), A2965-A2981</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_MittagLefflerE.htm">MittagLefflerE(Double, Double)</a></td><td><div class="summary">
            Computes the Mittag-Leffler function, E_(α)(x).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_MittagLefflerE_5.htm">MittagLefflerE(Double, Complex)</a></td><td><div class="summary">
            Computes the Mittag-Leffler function, E_(α)(z).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_MittagLefflerE_1.htm">MittagLefflerE(Double, Double, Double)</a></td><td><div class="summary">
            Computes the generalized Mittag-Leffler function, E_(α, β)(x).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_MittagLefflerE_4.htm">MittagLefflerE(Double, Double, Complex)</a></td><td><div class="summary">
            Computes the generalized Mittag-Leffler function, E_(α, β)(z).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_MittagLefflerE_2.htm">MittagLefflerE(Double, Double, Double, Double)</a></td><td><div class="summary">
            Computes the three-parameter Mittag-Leffler function, E_(α, β, γ)(x).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_MittagLefflerE_3.htm">MittagLefflerE(Double, Double, Double, Complex)</a></td><td><div class="summary">
            Computes the three-parameter Mittag-Leffler function, E_(α, β, γ)(z).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_Multinomial.htm">Multinomial</a></td><td><div class="summary">
            Computes the multinomial coefficient: n choose n1, n2, n3, ...
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_RisingFactorial.htm">RisingFactorial</a></td><td><div class="summary">
            Computes the Rising Factorial (Pochhammer function)  x -&gt; (x)n, n&gt;= 0. see: https://en.wikipedia.org/wiki/Falling_and_rising_factorials
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_SphericalBesselJ.htm">SphericalBesselJ(Double, Double)</a></td><td><div class="summary">
            Returns the spherical Bessel function of the first kind.
            <p>SphericalBesselJ(n, z) is given by Sqrt(pi/2) / Sqrt(z) * BesselJ(n + 1/2, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_SphericalBesselJ_1.htm">SphericalBesselJ(Double, Complex)</a></td><td><div class="summary">
            Returns the spherical Bessel function of the first kind.
            <p>SphericalBesselJ(n, z) is given by Sqrt(pi/2) / Sqrt(z) * BesselJ(n + 1/2, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_SphericalBesselY.htm">SphericalBesselY(Double, Double)</a></td><td><div class="summary">
            Returns the spherical Bessel function of the second kind.
            <p>SphericalBesselY(n, z) is given by Sqrt(pi/2) / Sqrt(z) * BesselY(n + 1/2, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_SphericalBesselY_1.htm">SphericalBesselY(Double, Complex)</a></td><td><div class="summary">
            Returns the spherical Bessel function of the second kind.
            <p>SphericalBesselY(n, z) is given by Sqrt(pi/2) / Sqrt(z) * BesselY(n + 1/2, z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_StruveL0.htm">StruveL0</a></td><td><div class="summary">
            Returns the modified Struve function of order 0.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_SpecialFunctions_StruveL1.htm">StruveL1</a></td><td><div class="summary">
            Returns the modified Struve function of order 1.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Altaxo_Calc_SpecialFunctions.htm">SpecialFunctions Class</a></div><div class="seeAlsoStyle"><a href="N_Altaxo_Calc.htm">Altaxo.Calc Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Altaxo can be downloaded from <a href="https://sourceforge.net/projects/altaxo/files/Altaxo/">SourceForge</a>. Source code available on <a href="https://github.com/Altaxo/Altaxo">Github</a>.
<br /><a href="https://sourceforge.net/u/dlellinger/profile/">(C) Dr. Dirk Lellinger and all contributors to the source code 2002 - <script>document.write(new Date().getFullYear()); </script></a><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dlellinger%40users.sourceforge.net?Subject=Altaxo%20user%20manual%20and%20class%20reference">dlellinger@users.sourceforge.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>