<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>FastHartleyTransform Methods</title><meta name="Title" content="FastHartleyTransform Methods" /><meta name="Microsoft.Help.Id" content="Methods.T:Altaxo.Calc.Fourier.FastHartleyTransform" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="FastHartleyTransform class, methods" /><meta name="container" content="Altaxo.Calc.Fourier" /><meta name="file" content="Methods_T_Altaxo_Calc_Fourier_FastHartleyTransform" /><meta name="guid" content="Methods_T_Altaxo_Calc_Fourier_FastHartleyTransform" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Altaxo user manual and class reference<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1B7FE024E7E614BFA13DAA1FD005CB2E.htm" title="Altaxo user manual and class reference" tocid="roottoc">Altaxo user manual and class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Altaxo class reference" tocid="R_Project_Documentation">Altaxo class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo.htm" title="Altaxo Namespaces" tocid="G_Altaxo">Altaxo Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo_Calc.htm" title="Altaxo.Calc Namespaces" tocid="G_Altaxo_Calc">Altaxo.Calc Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Altaxo_Calc_Fourier.htm" title="Altaxo.Calc.Fourier" tocid="N_Altaxo_Calc_Fourier">Altaxo.Calc.Fourier</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_Fourier_FastHartleyTransform.htm" title="FastHartleyTransform Class" tocid="T_Altaxo_Calc_Fourier_FastHartleyTransform">FastHartleyTransform Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Altaxo_Calc_Fourier_FastHartleyTransform.htm" title="FastHartleyTransform Methods" tocid="Methods_T_Altaxo_Calc_Fourier_FastHartleyTransform">FastHartleyTransform Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicConvolution.htm" title="CyclicConvolution Method" tocid="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicConvolution">CyclicConvolution Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicCorrelation.htm" title="CyclicCorrelation Method" tocid="Overload_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicCorrelation">CyclicCorrelation Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicCorrelationDestructive.htm" title="CyclicCorrelationDestructive Method" tocid="Overload_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicCorrelationDestructive">CyclicCorrelationDestructive Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicDestructiveConvolution.htm" title="CyclicDestructiveConvolution Method" tocid="Overload_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicDestructiveConvolution">CyclicDestructiveConvolution Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicRealConvolution.htm" title="CyclicRealConvolution Method" tocid="Overload_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicRealConvolution">CyclicRealConvolution Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_Fourier_FastHartleyTransform_FFT.htm" title="FFT Method" tocid="Overload_Altaxo_Calc_Fourier_FastHartleyTransform_FFT">FFT Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_Fourier_FastHartleyTransform_FHT.htm" title="FHT Method" tocid="M_Altaxo_Calc_Fourier_FastHartleyTransform_FHT">FHT Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_Fourier_FastHartleyTransform_IFFT.htm" title="IFFT Method" tocid="M_Altaxo_Calc_Fourier_FastHartleyTransform_IFFT">IFFT Method</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Altaxo_Calc_Fourier_FastHartleyTransform_RealFFT.htm" title="RealFFT Method" tocid="Overload_Altaxo_Calc_Fourier_FastHartleyTransform_RealFFT">RealFFT Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Altaxo_Calc_Fourier_FastHartleyTransform_RealIFFT.htm" title="RealIFFT Method" tocid="M_Altaxo_Calc_Fourier_FastHartleyTransform_RealIFFT">RealIFFT Method</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Fast<wbr />Hartley<wbr />Transform Methods</h1></td></tr></table><p>The <a href="T_Altaxo_Calc_Fourier_FastHartleyTransform.htm">FastHartleyTransform</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDADA')" onkeypress="SectionExpandCollapse_CheckKey('IDADA', event)" tabindex="0"><img id="IDADAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDADASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicConvolution.htm">CyclicConvolution</a></td><td>
            Performs a convolution of two complex arrays which are in splitted form. The input arrays will leave intact.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicCorrelation.htm">CyclicCorrelation(<span id="LST799101BD_0" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_1" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_2" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_4" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_6" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_8" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_10" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Performs a cyclic correlation of two complex arrays which are in splitted form. The input arrays will leave intact.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicCorrelation_1.htm">CyclicCorrelation(<span id="LST799101BD_12" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_13" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_14" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_15" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_16" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_17" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_18" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_19" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_20" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_21" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_22" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_23" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST799101BD_24" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_25" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LST799101BD_26" data-languageSpecificText="cpp=%"></span>, <span id="LST799101BD_27" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_28" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LST799101BD_29" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Performs a cyclic correlation of two complex arrays which are in splitted form. The input arrays will leave intact.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicCorrelationDestructive_1.htm">CyclicCorrelationDestructive(<span id="LST799101BD_30" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_31" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_32" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_33" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_34" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_35" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Performes a cyclic correlation between array arr1 and arr2 and stores the result in resultarr. Resultarr must be
            different from the other two arrays.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicCorrelationDestructive.htm">CyclicCorrelationDestructive(<span id="LST799101BD_36" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_37" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_38" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_39" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_40" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_41" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_42" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_43" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_44" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_45" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_46" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_47" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Performs a correlation of two comlex arrays which are in splitted form (i.e. real and imaginary part are separate arrays). Attention: the data into the
            input arrays will be destroyed!
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicDestructiveConvolution_1.htm">CyclicDestructiveConvolution(<span id="LST799101BD_48" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_49" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_50" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_51" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_52" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_53" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Performs a cyclic convolution of two real valued arrays. The content of the input arrays is destroyed during this operation.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicDestructiveConvolution.htm">CyclicDestructiveConvolution(<span id="LST799101BD_54" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_55" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_56" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_57" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_58" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_59" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_60" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_61" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_62" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_63" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_64" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_65" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Performs a convolution of two comlex arrays which are in splitted form (i.e. real and imaginary part are separate arrays). Attention: the data into the
            input arrays will be destroyed!
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicRealConvolution.htm">CyclicRealConvolution(IReadOnlyList<span id="LST799101BD_66" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST799101BD_67" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReadOnlyList<span id="LST799101BD_68" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST799101BD_69" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LST799101BD_70" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_71" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Performs a cyclic convolution of two real valued arrays. The content of the input arrays is leaved intact.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_CyclicRealConvolution_1.htm">CyclicRealConvolution(IReadOnlyList<span id="LST799101BD_72" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST799101BD_73" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReadOnlyList<span id="LST799101BD_74" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LST799101BD_75" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LST799101BD_76" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_77" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST799101BD_78" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_79" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LST799101BD_80" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Performs a cyclic convolution of two real valued arrays. The content of the input arrays is leaved intact.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_FFT.htm">FFT(<span id="LST799101BD_81" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_82" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_83" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_84" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, FourierDirection)</a></td><td>
            Does a fourier transform of 'n' points of the 'real' and 'imag' arrays.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_FFT_1.htm">FFT(<span id="LST799101BD_85" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_86" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_87" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_88" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
                 Does a fourier transform of 'n' points of the 'real' and
                 'imag' arrays.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_FFT_2.htm">FFT(<span id="LST799101BD_89" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_90" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST799101BD_91" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_92" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, FourierDirection)</a></td><td>
            Does a fourier transform of 'n' points of the 'real' and 'imag' arrays.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_FHT.htm">FHT</a></td><td>
             Does a hartley transform of 'n' points in the array 'fz'.
            </td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_IFFT.htm">IFFT</a></td><td>
                 Does an in-place inverse fourier transform of 'n' points of the 'real'
                 and 'imag' arrays.
            </td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_RealFFT.htm">RealFFT(<span id="LST799101BD_93" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_94" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, FourierDirection)</a></td><td>
            Does a real-valued fourier transform of 'n' points of the
            'real' array.  On forward transform, the real part of the transform ends
            up in the first half of the array and the imaginary part of the
            transform ends up in the second half of the array. On backward transform, real and imaginary part
            have to be located in the same way like the result of the forward transform.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_RealFFT_1.htm">RealFFT(<span id="LST799101BD_95" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_96" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
                 Does a real-valued fourier transform of 'n' points of the
                 'real' array.  The real part of the transform ends
                 up in the first half of the array and the imaginary part of the
                 transform ends up in the second half of the array.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_RealFFT_2.htm">RealFFT(<span id="LST799101BD_97" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST799101BD_98" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, FourierDirection)</a></td><td>
            Does a real-valued fourier transform of 'n' points of the
            'real' array.  On forward transform, the real part of the transform ends
            up in the first half of the array and the imaginary part of the
            transform ends up in the second half of the array. On backward transform, real and imaginary part
            have to be located in the same way like the result of the forward transform.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/Static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_Fourier_FastHartleyTransform_RealIFFT.htm">RealIFFT</a></td><td>
                 Does the inverse of a real-valued fourier transform of 'n' points.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_Altaxo_Calc_Fourier_FastHartleyTransform.htm">FastHartleyTransform Class</a></div><div><a href="N_Altaxo_Calc_Fourier.htm">Altaxo.Calc.Fourier Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter">Altaxo can be downloaded from <a href="https://sourceforge.net/projects/altaxo/files/Altaxo/">SourceForge</a>. Source code available on <a href="https://github.com/Altaxo/Altaxo">Github</a>.
<br /><a href="https://sourceforge.net/u/dlellinger/profile/">(C) Dr. Dirk Lellinger and all contributors to the source code 2002 - <script>document.write(new Date().getFullYear()); </script></a><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dlellinger%40users.sourceforge.net?Subject=Altaxo%20user%20manual%20and%20class%20reference">dlellinger@users.sourceforge.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>