<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Fourier Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Fourier class" /><meta name="System.Keywords" content="Altaxo.Calc.IntegralTransforms.Fourier class" /><meta name="Microsoft.Help.F1" content="Altaxo.Calc.IntegralTransforms.Fourier" /><meta name="Microsoft.Help.Id" content="T:Altaxo.Calc.IntegralTransforms.Fourier" /><meta name="Description" content="Complex Fast (FFT) Implementation of the Discrete Fourier Transform (DFT)." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Altaxo.Calc.IntegralTransforms" /><meta name="file" content="T_Altaxo_Calc_IntegralTransforms_Fourier" /><meta name="guid" content="T_Altaxo_Calc_IntegralTransforms_Fourier" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Altaxo user manual and class reference<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1B7FE024E7E614BFA13DAA1FD005CB2E.htm" title="Altaxo user manual and class reference" tocid="roottoc">Altaxo user manual and class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Altaxo class reference" tocid="R_Project_Documentation">Altaxo class reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo.htm" title="Altaxo Namespaces" tocid="G_Altaxo">Altaxo Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Altaxo_Calc.htm" title="Altaxo.Calc Namespaces" tocid="G_Altaxo_Calc">Altaxo.Calc Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Altaxo_Calc_IntegralTransforms.htm" title="Altaxo.Calc.IntegralTransforms" tocid="N_Altaxo_Calc_IntegralTransforms">Altaxo.Calc.IntegralTransforms</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Altaxo_Calc_IntegralTransforms_Fourier.htm" title="Fourier Class" tocid="T_Altaxo_Calc_IntegralTransforms_Fourier">Fourier Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Altaxo_Calc_IntegralTransforms_Fourier.htm" title="Fourier Methods" tocid="Methods_T_Altaxo_Calc_IntegralTransforms_Fourier">Fourier Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Fourier Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Complex Fast (FFT) Implementation of the Discrete Fourier Transform (DFT).
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST2FDF8558_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Altaxo.Calc.IntegralTransforms<span id="LST2FDF8558_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Fourier</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Altaxo_Calc_IntegralTransforms.htm">Altaxo.Calc.IntegralTransforms</a><br />
    <strong>Assembly:</strong>
   AltaxoCore (in AltaxoCore.dll) Version: 4.8.3167.0 (4.8.3167.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Fourier</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">Fourier</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward_3.htm">Forward(<span id="LST2FDF8558_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_2?cpp=array&lt;");</script>Complex<span id="LST2FDF8558_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward.htm">Forward(<span id="LST2FDF8558_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_4?cpp=array&lt;");</script>Complex32<span id="LST2FDF8558_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_5?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward_4.htm">Forward(<span id="LST2FDF8558_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_6?cpp=array&lt;");</script>Complex<span id="LST2FDF8558_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_7?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward_1.htm">Forward(<span id="LST2FDF8558_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_8?cpp=array&lt;");</script>Complex32<span id="LST2FDF8558_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_9?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward_2.htm">Forward(<span id="LST2FDF8558_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_10?cpp=array&lt;");</script>Double<span id="LST2FDF8558_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_11?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST2FDF8558_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_12?cpp=array&lt;");</script>Double<span id="LST2FDF8558_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_13?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward_5.htm">Forward(<span id="LST2FDF8558_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_14?cpp=array&lt;");</script>Single<span id="LST2FDF8558_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_15?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST2FDF8558_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_16?cpp=array&lt;");</script>Single<span id="LST2FDF8558_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_17?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward2D_1.htm">Forward2D(Matrix<span id="LST2FDF8558_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Complex32<span id="LST2FDF8558_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_19?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to a two dimensional data in form of a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward2D_2.htm">Forward2D(Matrix<span id="LST2FDF8558_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_20?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Complex<span id="LST2FDF8558_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to a two dimensional data in form of a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward2D_3.htm">Forward2D(<span id="LST2FDF8558_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_22?cpp=array&lt;");</script>Complex<span id="LST2FDF8558_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_23?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to two dimensional sample data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Forward2D.htm">Forward2D(<span id="LST2FDF8558_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_24?cpp=array&lt;");</script>Complex32<span id="LST2FDF8558_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_25?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to two dimensional sample data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_ForwardMultiDim_1.htm">ForwardMultiDim(<span id="LST2FDF8558_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_26?cpp=array&lt;");</script>Complex<span id="LST2FDF8558_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_27?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST2FDF8558_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_28?cpp=array&lt;");</script>Int32<span id="LST2FDF8558_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_29?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to multiple dimensional sample data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_ForwardMultiDim.htm">ForwardMultiDim(<span id="LST2FDF8558_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_30?cpp=array&lt;");</script>Complex32<span id="LST2FDF8558_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_31?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST2FDF8558_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_32?cpp=array&lt;");</script>Int32<span id="LST2FDF8558_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_33?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the forward Fast Fourier Transform (FFT) to multiple dimensional sample data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_ForwardReal.htm">ForwardReal(<span id="LST2FDF8558_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_34?cpp=array&lt;");</script>Double<span id="LST2FDF8558_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_35?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, FourierOptions)</a></td><td><div class="summary">
            Packed Real-Complex forward Fast Fourier Transform (FFT) to arbitrary-length sample vectors.
            Since for real-valued time samples the complex spectrum is conjugate-even (symmetry),
            the spectrum can be fully reconstructed form the positive frequencies only (first half).
            The data array needs to be N+2 (if N is even) or N+1 (if N is odd) long in order to support such a packed spectrum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_ForwardReal_1.htm">ForwardReal(<span id="LST2FDF8558_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_36?cpp=array&lt;");</script>Single<span id="LST2FDF8558_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_37?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, FourierOptions)</a></td><td><div class="summary">
            Packed Real-Complex forward Fast Fourier Transform (FFT) to arbitrary-length sample vectors.
            Since for real-valued time samples the complex spectrum is conjugate-even (symmetry),
            the spectrum can be fully reconstructed from the positive frequencies only (first half).
            The data array needs to be N+2 (if N is even) or N+1 (if N is odd) long in order to support such a packed spectrum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_FrequencyScale.htm">FrequencyScale</a></td><td><div class="summary">
            Generate the frequencies corresponding to each index in frequency space.
            The frequency space has a resolution of sampleRate/N.
            Index 0 corresponds to the DC part, the following indices correspond to
            the positive frequencies up to the Nyquist frequency (sampleRate/2),
            followed by the negative frequencies wrapped around.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse_3.htm">Inverse(<span id="LST2FDF8558_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_38?cpp=array&lt;");</script>Complex<span id="LST2FDF8558_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_39?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse.htm">Inverse(<span id="LST2FDF8558_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_40?cpp=array&lt;");</script>Complex32<span id="LST2FDF8558_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_41?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse_4.htm">Inverse(<span id="LST2FDF8558_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_42?cpp=array&lt;");</script>Complex<span id="LST2FDF8558_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_43?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse_1.htm">Inverse(<span id="LST2FDF8558_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_44?cpp=array&lt;");</script>Complex32<span id="LST2FDF8558_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_45?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse_2.htm">Inverse(<span id="LST2FDF8558_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_46?cpp=array&lt;");</script>Double<span id="LST2FDF8558_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_47?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST2FDF8558_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_48?cpp=array&lt;");</script>Double<span id="LST2FDF8558_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_49?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse_5.htm">Inverse(<span id="LST2FDF8558_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_50?cpp=array&lt;");</script>Single<span id="LST2FDF8558_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_51?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST2FDF8558_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_52?cpp=array&lt;");</script>Single<span id="LST2FDF8558_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_53?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to arbitrary-length sample vectors.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse2D_1.htm">Inverse2D(Matrix<span id="LST2FDF8558_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_54?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Complex32<span id="LST2FDF8558_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_55?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to a two dimensional data in form of a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse2D_2.htm">Inverse2D(Matrix<span id="LST2FDF8558_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_56?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Complex<span id="LST2FDF8558_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_57?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to a two dimensional data in form of a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse2D_3.htm">Inverse2D(<span id="LST2FDF8558_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_58?cpp=array&lt;");</script>Complex<span id="LST2FDF8558_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_59?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to two dimensional sample data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_Inverse2D.htm">Inverse2D(<span id="LST2FDF8558_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_60?cpp=array&lt;");</script>Complex32<span id="LST2FDF8558_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_61?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to two dimensional sample data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_InverseMultiDim_1.htm">InverseMultiDim(<span id="LST2FDF8558_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_62?cpp=array&lt;");</script>Complex<span id="LST2FDF8558_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_63?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST2FDF8558_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_64?cpp=array&lt;");</script>Int32<span id="LST2FDF8558_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_65?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to multiple dimensional sample data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_InverseMultiDim.htm">InverseMultiDim(<span id="LST2FDF8558_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_66?cpp=array&lt;");</script>Complex32<span id="LST2FDF8558_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_67?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST2FDF8558_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_68?cpp=array&lt;");</script>Int32<span id="LST2FDF8558_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_69?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, FourierOptions)</a></td><td><div class="summary">
            Applies the inverse Fast Fourier Transform (iFFT) to multiple dimensional sample data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_InverseReal.htm">InverseReal(<span id="LST2FDF8558_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_70?cpp=array&lt;");</script>Double<span id="LST2FDF8558_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_71?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, FourierOptions)</a></td><td><div class="summary">
            Packed Real-Complex inverse Fast Fourier Transform (iFFT) to arbitrary-length sample vectors.
            Since for real-valued time samples the complex spectrum is conjugate-even (symmetry),
            the spectrum can be fully reconstructed form the positive frequencies only (first half).
            The data array needs to be N+2 (if N is even) or N+1 (if N is odd) long in order to support such a packed spectrum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Altaxo_Calc_IntegralTransforms_Fourier_InverseReal_1.htm">InverseReal(<span id="LST2FDF8558_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_72?cpp=array&lt;");</script>Single<span id="LST2FDF8558_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2FDF8558_73?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, FourierOptions)</a></td><td><div class="summary">
            Packed Real-Complex inverse Fast Fourier Transform (iFFT) to arbitrary-length sample vectors.
            Since for real-valued time samples the complex spectrum is conjugate-even (symmetry),
            the spectrum can be fully reconstructed form the positive frequencies only (first half).
            The data array needs to be N+2 (if N is even) or N+1 (if N is odd) long in order to support such a packed spectrum.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Altaxo_Calc_IntegralTransforms.htm">Altaxo.Calc.IntegralTransforms Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Altaxo can be downloaded from <a href="https://sourceforge.net/projects/altaxo/files/Altaxo/">SourceForge</a>. Source code available on <a href="https://github.com/Altaxo/Altaxo">Github</a>.
<br /><a href="https://sourceforge.net/u/dlellinger/profile/">(C) Dr. Dirk Lellinger and all contributors to the source code 2002 - <script>document.write(new Date().getFullYear()); </script></a><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:dlellinger%40users.sourceforge.net?Subject=Altaxo%20user%20manual%20and%20class%20reference">dlellinger@users.sourceforge.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>